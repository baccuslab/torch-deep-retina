exp_name!exp_num!dataset!l2!ValAcc!n_epochs!model_type!bias!chans!results_file!lr!n_output_units!starting_exp_num!l1!adapt_gauss!FinalTestAcc!architecture!Meanintracellular!cells!ValLoss!noise!Minintracellular!stim_type!poor_results!TrainLoss!Maxintracellular!FinalLoss!batch_size!FinalVal!save_folder!cell0!cell1!cell2!cell3!cell4!cell5!cell6!cell7!cell8!cell9!cell10!cell11!cell12!cell13!cell14!cell16!cell17!cell18!cell20!cell21!cell22!cell23!cell24!cell25!cell27!cell31!bnorm_momentum!linear_bias!shift
old_bncnn!0.0!15-10-07!0.05!0.26807584166526793!100.0!<class 'models.BN_CNN.BNCNN'>!False!!bncnn/results.txt!0.005!5.0!!0.001!!0.6592844066600281!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3795145769957826!!!0.05!0.09517904833334227!naturalscene!!!0.5524672679159908!-1.6604126444589318!512.0!-2.6593296825885773!bncnn/bncnn_0_lr0.005_l10.001_l20.05!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
old_bncnn!0.0!15-10-07!0.01!0.28974696099758146!100.0!<class 'models.BN_CNN.BNCNN'>!False!!bncnn/results.txt!0.01!5.0!!0.001!!0.6838911355068593!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.350699261944646!!!0.05!0.09730403659323912!naturalscene!!!0.5567608156701644!-2.330271990950111!512.0!-3.0405193567276!bncnn/bncnn_0_lr0.01_l10.001_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
old_bncnn!10.0!15-10-07!0.05!0.2926563441753388!100.0!<class 'models.BN_CNN.BNCNN'>!False!!bncnn/results.txt!0.0001!5.0!8.0!0.0005!!0.6794996650465238!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3118418064121629!!!0.05!0.07168566133707065!naturalscene!!!0.5651015650848275!-2.449850166185589!512.0!-3.092540889978409!bncnn/bncnn_10_lr0.0001_l10.0005_l20.05!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
old_bncnn!11.0!15-10-07!0.005!0.32011770009994506!100.0!<class 'models.BN_CNN.BNCNN'>!False!!bncnn/results.txt!0.0001!5.0!8.0!0.0005!!0.6665564985426143!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3074646600014813!!!0.05!0.08009923906059634!naturalscene!!!0.5772527088261973!-2.977392490992538!512.0!-3.3360692262649536!bncnn/bncnn_11_lr0.0001_l10.0005_l20.005!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
old_bncnn!12.0!15-10-07!0.05!0.2699589729309082!200.0!<class 'models.BN_CNN.BNCNN'>!False!!bncnn/results.txt!0.005!5.0!12.0!0.005!!0.6488477829676647!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3169602632774485!!!0.05!0.09303293717229387!naturalscene!!!0.5927013449169004!-2.768273057007208!4112.0!-2.6782466769218445!bncnn/bncnn_12_lr0.005_l10.005_l20.05!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
old_bncnn!13.0!15-10-07!0.01!0.3026782929897308!200.0!<class 'models.BN_CNN.BNCNN'>!False!!bncnn/results.txt!0.005!5.0!12.0!0.005!!0.6742859373173559!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3060945328589913!!!0.05!0.08793679555702495!naturalscene!!!0.5599625858862325!-3.3871056161275725!4112.0!-3.2857366502285004!bncnn/bncnn_13_lr0.005_l10.005_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
old_bncnn!14.0!15-10-07!0.05!0.2803587347269058!200.0!<class 'models.BN_CNN.BNCNN'>!False!!bncnn/results.txt!0.005!5.0!14.0!0.001!!0.6529096385880558!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.32553536120273635!!!0.05!0.11509497242855896!naturalscene!!!0.5491593532275196!-2.9588926245526572!4112.0!-2.807759553194046!bncnn/bncnn_14_lr0.005_l10.001_l20.05!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
old_bncnn!15.0!15-10-07!0.01!0.29968140125274656!200.0!<class 'models.BN_CNN.BNCNN'>!False!!bncnn/results.txt!0.005!5.0!14.0!0.001!!0.6596532256035472!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.33592207970732874!!!0.05!0.1224791544792954!naturalscene!!!0.5845827227034616!-3.446201449487268!4112.0!-3.30012121796608!bncnn/bncnn_15_lr0.005_l10.001_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
old_bncnn!1.0!15-10-07!0.005!0.2943964511156082!100.0!<class 'models.BN_CNN.BNCNN'>!False!!bncnn/results.txt!0.005!5.0!!0.001!!0.6705622844272344!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.32173867095527503!!!0.05!0.10215570618911646!naturalscene!!!0.5809257830256338!-2.4527617585964694!512.0!-3.100699722766876!bncnn/bncnn_1_lr0.005_l10.001_l20.005!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
old_bncnn!1.0!15-10-07!0.005!0.3029519408941269!100.0!<class 'models.BN_CNN.BNCNN'>!False!!bncnn/results.txt!0.01!5.0!!0.001!!0.6910587231197085!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3558324564421012!!!0.05!0.09858379314046596!naturalscene!!!0.6234735793374198!-2.441634095901817!512.0!-3.1876387000083923!bncnn/bncnn_1_lr0.01_l10.001_l20.005!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
old_bncnn!2.0!15-10-07!0.05!0.2699183404445648!100.0!<class 'models.BN_CNN.BNCNN'>!False!!bncnn/results.txt!0.005!5.0!!0.0004!!0.651752960497895!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3764308844283011!!!0.05!0.08985114145908067!naturalscene!!!0.5982646323545929!-2.1979302520306043!512.0!-2.8875506818294525!bncnn/bncnn_2_lr0.005_l10.0004_l20.05!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
old_bncnn!2.0!15-10-07!0.01!0.2865764439105988!100.0!<class 'models.BN_CNN.BNCNN'>!False!!bncnn/results.txt!0.01!5.0!!0.0001!!0.6663618661055609!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.32026773030004474!!!0.05!0.10906479167383064!naturalscene!!!0.5672214962213591!-3.0946475279097463!512.0!-3.1920584738254547!bncnn/bncnn_2_lr0.01_l10.0001_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
old_bncnn!3.0!15-10-07!0.005!0.2980318605899811!100.0!<class 'models.BN_CNN.BNCNN'>!False!!bncnn/results.txt!0.005!5.0!!0.0004!!0.6683097635135341!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.34538786409513417!!!0.05!0.12879368127915045!naturalscene!!!0.5622698042482571!-2.9017002486805032!512.0!-3.210655629634857!bncnn/bncnn_3_lr0.005_l10.0004_l20.005!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
old_bncnn!3.0!15-10-07!0.005!0.2933768510818481!100.0!<class 'models.BN_CNN.BNCNN'>!False!!bncnn/results.txt!0.01!5.0!!0.0001!!0.6643007666527737!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3120804319298143!!!0.05!0.1027657520677335!naturalscene!!!0.5516002417211914!-3.135457885481114!512.0!-3.2142493724823!bncnn/bncnn_3_lr0.01_l10.0001_l20.005!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
old_bncnn!4.0!15-10-07!0.05!0.28064668774604795!100.0!<class 'models.BN_CNN.BNCNN'>!False!!bncnn/results.txt!0.001!5.0!4.0!0.001!!0.6778796711959961!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.34349513754092403!!!0.05!0.1248799254238244!naturalscene!!!0.5450897413757743!-1.888754046520676!512.0!-2.836896777153015!bncnn/bncnn_4_lr0.001_l10.001_l20.05!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
old_bncnn!4.0!15-10-07!0.01!0.2880056232213974!100.0!<class 'models.BN_CNN.BNCNN'>!False!!bncnn/results.txt!0.01!5.0!!1e-06!!0.6730897186457734!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.34261674699323824!!!0.05!0.10101590092723796!naturalscene!!!0.5732710286410219!-3.070826592668329!512.0!-3.3504150211811066!bncnn/bncnn_4_lr0.01_l11e-06_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
old_bncnn!5.0!15-10-07!0.005!0.3120621919631958!100.0!<class 'models.BN_CNN.BNCNN'>!False!!bncnn/results.txt!0.001!5.0!4.0!0.001!!0.6913328908296633!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3149741491396682!!!0.05!0.08654817888918041!naturalscene!!!0.5851836370903604!-2.6421851229883417!512.0!-3.2650347352027893!bncnn/bncnn_5_lr0.001_l10.001_l20.005!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
old_bncnn!5.0!15-10-07!0.005!0.2569849669933319!100.0!<class 'models.BN_CNN.BNCNN'>!False!!bncnn/results.txt!0.01!5.0!!1e-06!!0.6170729220475681!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.38926528494271656!!!0.05!0.11580588993882622!naturalscene!!!0.5905018305988693!-2.776932362877226!512.0!-2.702433913946152!bncnn/bncnn_5_lr0.01_l11e-06_l20.005!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
old_bncnn!6.0!15-10-07!0.05!0.28103094696998604!100.0!<class 'models.BN_CNN.BNCNN'>!False!!bncnn/results.txt!0.001!5.0!4.0!0.0005!!0.6560782851246274!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.32394247155461103!!!0.05!0.09605746288697158!naturalscene!!!0.5511382917879664!-2.309814518483336!512.0!-2.9435167610645294!bncnn/bncnn_6_lr0.001_l10.0005_l20.05!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
old_bncnn!7.0!15-10-07!0.005!0.3097404271364212!100.0!<class 'models.BN_CNN.BNCNN'>!False!!bncnn/results.txt!0.001!5.0!4.0!0.0005!!0.6973197650591441!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3083804005261575!!!0.05!0.1025898221509242!naturalscene!!!0.5423800772484794!-2.958131029954683!512.0!-3.2007100582122803!bncnn/bncnn_7_lr0.001_l10.0005_l20.005!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
old_bncnn!8.0!15-10-07!0.05!0.2893591344356537!100.0!<class 'models.BN_CNN.BNCNN'>!False!!bncnn/results.txt!0.0001!5.0!8.0!0.001!!0.683464325561319!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.317109775320192!!!0.05!0.09352755294885116!naturalscene!!!0.544520206441398!-2.0004288054339665!512.0!-2.9295909702777863!bncnn/bncnn_8_lr0.0001_l10.001_l20.05!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
old_bncnn!9.0!15-10-07!0.005!0.32908480167388915!100.0!<class 'models.BN_CNN.BNCNN'>!False!!bncnn/results.txt!0.0001!5.0!8.0!0.001!!0.6712703298635708!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3012468382101781!!!0.05!0.08338684926268652!naturalscene!!!0.5669792552988966!-2.6795138825478406!512.0!-3.368282526731491!bncnn/bncnn_9_lr0.0001_l10.001_l20.005!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnadaptgauss!18.0!15-10-07!0.01!0.2644946545362473!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnadaptgauss/results.txt!0.005!!18.0!0.0001!True!0.6822579937763548!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=True)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=True)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4110192359758649!all!!0.05!0.08660399120265913!naturalscene!!!0.7286423057810992!-3.0286080792299037!512.0!-2.8390240524313413!bncnnadaptgauss/bncnnadaptgauss_18_noise0.05_lr0.005!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnadaptgauss!19.0!15-10-07!0.01!0.3460561096668243!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnadaptgauss/results.txt!0.0001!!18.0!0.0001!True!0.6076298848880276!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=True)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=True)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.34990806724582885!all!!0.05!0.09845016560535938!naturalscene!!!0.6058217338555625!-4.0079975396080085!512.0!-3.7224684934572!bncnnadaptgauss/bncnnadaptgauss_19_noise0.05_lr0.0001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnadaptgauss!20.0!15-10-07!0.01!0.2734157085418701!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnadaptgauss/results.txt!0.005!!18.0!0.0001!True!0.6896707683610707!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=True)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=True)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.42689109445612!all!!0.1!0.12259060963922065!naturalscene!!!0.7382655769996813!-3.0049865288971778!512.0!-3.01822484314107!bncnnadaptgauss/bncnnadaptgauss_20_noise0.1_lr0.005!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnadaptgauss!21.0!15-10-07!0.01!0.3432451367378235!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnadaptgauss/results.txt!0.0001!!18.0!0.0001!True!0.6027194689696783!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=True)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=True)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3261832811939704!all!!0.1!0.07768665194171942!naturalscene!!!0.5836776618107732!-3.8883606513700872!512.0!-3.5873113568577537!bncnnadaptgauss/bncnnadaptgauss_21_noise0.1_lr0.0001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnadaptgauss!22.0!15-10-07!0.01!0.2757522046566009!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnadaptgauss/results.txt!0.005!!18.0!0.0001!True!0.6819489429085139!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.15, trainable=False, adapt=True)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.15, trainable=False, adapt=True)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.41972329691570026!all!!0.15!0.1230215041928751!naturalscene!!!0.7261115019676243!-2.9763224666115025!512.0!-3.2357531648522126!bncnnadaptgauss/bncnnadaptgauss_22_noise0.15_lr0.005!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnadaptgauss!23.0!15-10-07!0.01!0.3395799696445465!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnadaptgauss/results.txt!0.0001!!18.0!0.0001!True!0.6314752061277641!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.15, trainable=False, adapt=True)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.15, trainable=False, adapt=True)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.33250733339196525!all!!0.15!0.08600920750518162!naturalscene!!!0.5939521368800433!-3.8641697197118674!512.0!-3.555402797765056!bncnnadaptgauss/bncnnadaptgauss_23_noise0.15_lr0.0001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnadaptgauss!24.0!15-10-07!0.01!0.265457421541214!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnadaptgauss/results.txt!0.005!!18.0!0.0001!True!0.6738618273780567!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.2, trainable=False, adapt=True)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.2, trainable=False, adapt=True)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4000964533924263!all!!0.2!0.13082078326841273!naturalscene!!!0.6859029242338435!-2.996069474277813!512.0!-2.86758135996206!bncnnadaptgauss/bncnnadaptgauss_24_noise0.2_lr0.005!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnadaptgauss!25.0!15-10-07!0.01!0.3392699182033539!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnadaptgauss/results.txt!0.0001!!18.0!0.0001!True!0.644997070611856!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.2, trainable=False, adapt=True)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.2, trainable=False, adapt=True)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3057663605212489!all!!0.2!0.08035830554916522!naturalscene!!!0.5267815661076192!-3.8112269873712576!512.0!-3.6268978357020383!bncnnadaptgauss/bncnnadaptgauss_25_noise0.2_lr0.0001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnadaptgauss!26.0!15-10-07!0.01!0.26090507209300995!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnadaptgauss/results.txt!0.005!!18.0!0.0001!True!0.668198398012396!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.3, trainable=False, adapt=True)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.3, trainable=False, adapt=True)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4173425565863354!all!!0.3!0.11964991214727735!naturalscene!!!0.7167171350282274!-2.8799847260140012!512.0!-2.7366478285875933!bncnnadaptgauss/bncnnadaptgauss_26_noise0.3_lr0.005!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnadaptgauss!27.0!15-10-07!0.01!0.33581348657608034!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnadaptgauss/results.txt!0.0001!!18.0!0.0001!True!0.6695797433175401!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.3, trainable=False, adapt=True)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.3, trainable=False, adapt=True)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3264536414377582!all!!0.3!0.08526264950031781!naturalscene!!!0.5752519900348952!-3.6984103317534034!512.0!-3.5733742817537864!bncnnadaptgauss/bncnnadaptgauss_27_noise0.3_lr0.0001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!0.0!15-10-07!0.01!0.2868324607610703!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.0075!!0.0!5e-05!!0.6793319699796211!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3974883697453256!all!-6.123912578674207!0.05!0.11913786957343153!whitenoise!!-6.3672059118118405!0.6969901000346024!!512.0!!bncnnMultiData/bncnnMultiData_0_dataset15-10-07_stim_typewhitenoise_lr0.0075_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!10.0!15-10-07!0.01!0.2733999311923981!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.001!!0.0!5e-05!!0.6400031467795377!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.36271566842774894!all!-2.929382500426982!0.05!0.1341944779313401!naturalscene!!-3.035741314449281!0.6044254954098309!!512.0!!bncnnMultiData/bncnnMultiData_10_dataset15-10-07_stim_typenaturalscene_lr0.001_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!11.0!15-10-07!0.001!0.320021790266037!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.001!!0.0!5e-05!!0.6573384118857031!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3683138034366678!all!-3.6542506591949855!0.05!0.12782758748612522!naturalscene!!-3.6454120462656383!0.6033573834846543!!512.0!!bncnnMultiData/bncnnMultiData_11_dataset15-10-07_stim_typenaturalscene_lr0.001_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!12.0!15-11-21a!0.01!0.2924223095178604!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.0075!!0.0!5e-05!!0.6678009638506995!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=4, bias=True)#    (12): BatchNorm1d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4879513783920154!all!-11.051765143149169!0.05!0.18600762405225849!whitenoise!!-11.326380866325461!0.7444942391184857!!512.0!!bncnnMultiData/bncnnMultiData_12_dataset15-11-21a_stim_typewhitenoise_lr0.0075_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!13.0!15-11-21a!0.001!0.3061957955360413!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.0075!!0.0!5e-05!!0.6500944284704747!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=4, bias=True)#    (12): BatchNorm1d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4701018977568824!all!-11.602140332393901!0.05!0.1664547309252135!whitenoise!!-12.281162195795442!0.7210351912042816!!512.0!!bncnnMultiData/bncnnMultiData_13_dataset15-11-21a_stim_typewhitenoise_lr0.0075_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!14.0!15-11-21a!0.01!0.2868110835552216!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.005!!0.0!5e-05!!0.6796824902101347!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=4, bias=True)#    (12): BatchNorm1d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4871235117557045!all!-10.62432303859714!0.05!0.1656474318916222!whitenoise!!-11.283817374688287!0.6904460482227118!!512.0!!bncnnMultiData/bncnnMultiData_14_dataset15-11-21a_stim_typewhitenoise_lr0.005_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!15.0!15-11-21a!0.001!0.30617325007915497!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.005!!0.0!5e-05!!0.6312392851738721!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=4, bias=True)#    (12): BatchNorm1d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4693825690078666!all!-11.71170430291022!0.05!0.17263979850890349!whitenoise!!-12.494493153659825!0.6747675709305082!!512.0!!bncnnMultiData/bncnnMultiData_15_dataset15-11-21a_stim_typewhitenoise_lr0.005_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!16.0!15-11-21a!0.01!0.2987440153956413!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.001!!0.0!5e-05!!0.6706390732372096!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=4, bias=True)#    (12): BatchNorm1d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.5109365514398702!all!-10.974909796186692!0.05!0.20905054793775416!whitenoise!!-11.997479695540207!0.6968509098766363!!512.0!!bncnnMultiData/bncnnMultiData_16_dataset15-11-21a_stim_typewhitenoise_lr0.001_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!17.0!15-11-21a!0.001!0.32659371197223663!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.001!!0.0!5e-05!!0.6047796035708028!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=4, bias=True)#    (12): BatchNorm1d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4877539534992345!all!-12.30976625967378!0.05!0.16839846397703806!whitenoise!!-12.938421925448365!0.6674773741308785!!512.0!!bncnnMultiData/bncnnMultiData_17_dataset15-11-21a_stim_typewhitenoise_lr0.001_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!18.0!15-11-21a!0.01!0.2781483605504036!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.0075!!0.0!5e-05!!0.6808543872585126!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=4, bias=True)#    (12): BatchNorm1d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.5603681239157472!all!-9.173741672319007!0.05!0.21471798547343826!naturalscene!!-9.688306241013883!0.7884715204007411!!512.0!!bncnnMultiData/bncnnMultiData_18_dataset15-11-21a_stim_typenaturalscene_lr0.0075_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!19.0!15-11-21a!0.001!0.29840271919965744!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.0075!!0.0!5e-05!!0.7131443534622071!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=4, bias=True)#    (12): BatchNorm1d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4935455914291642!all!-10.73602004953318!0.05!0.18077070281228505!naturalscene!!-10.5492980095416!0.7585787030920409!!512.0!!bncnnMultiData/bncnnMultiData_19_dataset15-11-21a_stim_typenaturalscene_lr0.0075_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!1.0!15-10-07!0.001!0.29539153873920443!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.0075!!0.0!5e-05!!0.6960563652675501!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3770604536471057!all!-6.462511945537701!0.05!0.13566057730360487!whitenoise!!-6.69658257195313!0.6253814984279613!!512.0!!bncnnMultiData/bncnnMultiData_1_dataset15-10-07_stim_typewhitenoise_lr0.0075_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!20.0!15-11-21a!0.01!0.2823885455727577!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.005!!0.0!5e-05!!0.6763870904733795!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=4, bias=True)#    (12): BatchNorm1d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.5305747053422311!all!-10.005396384805863!0.05!0.2178962829725969!naturalscene!!-9.88635465570165!0.7530752970248705!!512.0!!bncnnMultiData/bncnnMultiData_20_dataset15-11-21a_stim_typenaturalscene_lr0.005_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!21.0!15-11-21a!0.001!0.3064836934208869!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.005!!0.0!5e-05!!0.7189628420612704!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=4, bias=True)#    (12): BatchNorm1d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.5147491555241119!all!-10.87955951279946!0.05!0.17246602108773035!naturalscene!!-10.663349400458474!0.7672881635863223!!512.0!!bncnnMultiData/bncnnMultiData_21_dataset15-11-21a_stim_typenaturalscene_lr0.005_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!22.0!15-11-21a!0.01!0.3070943579077721!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.001!!0.0!5e-05!!0.7170867380755459!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=4, bias=True)#    (12): BatchNorm1d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.5015538353229688!all!-10.783156317975225!0.05!0.20464516793919565!naturalscene!!-10.366179163459561!0.7135020571426621!!512.0!!bncnnMultiData/bncnnMultiData_22_dataset15-11-21a_stim_typenaturalscene_lr0.001_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!23.0!15-11-21a!0.001!0.33389949053525925!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.001!!0.0!5e-05!!0.6943337016376131!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=4, bias=True)#    (12): BatchNorm1d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4938812808390546!all!-11.271202168829406!0.05!0.21308139363643244!naturalscene!!-11.451386780400801!0.6925194195937722!!512.0!!bncnnMultiData/bncnnMultiData_23_dataset15-11-21a_stim_typenaturalscene_lr0.001_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!24.0!15-11-21b!0.01!0.2521750681540545!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.0075!!0.0!5e-05!!0.5407395870944901!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=17, bias=True)#    (12): BatchNorm1d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4968423202010354!all!-7.571338038629618!0.05!0.17873731802378612!whitenoise!!-7.4761106777335025!0.7852338105809196!!512.0!!bncnnMultiData/bncnnMultiData_24_dataset15-11-21b_stim_typewhitenoise_lr0.0075_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!25.0!15-11-21b!0.001!0.2587541674866396!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.0075!!0.0!5e-05!!0.5372881102039119!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=17, bias=True)#    (12): BatchNorm1d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4558197777855201!all!-7.7932577177052735!0.05!0.17067579449811762!whitenoise!!-7.933900985602699!0.8098636902013957!!512.0!!bncnnMultiData/bncnnMultiData_25_dataset15-11-21b_stim_typewhitenoise_lr0.0075_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!26.0!15-11-21b!0.01!0.2530347065013997!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.005!!0.0!5e-05!!0.5523272703994171!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=17, bias=True)#    (12): BatchNorm1d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4654282702946741!all!-7.381643411616096!0.05!0.17083513348298662!whitenoise!!-7.462357761992947!0.7780810006268908!!512.0!!bncnnMultiData/bncnnMultiData_26_dataset15-11-21b_stim_typewhitenoise_lr0.005_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!27.0!15-11-21b!0.001!0.2590035699746188!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.005!!0.0!5e-05!!0.5435113951515874!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=17, bias=True)#    (12): BatchNorm1d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4472834456263121!all!-7.785172635187338!0.05!0.1806492218562092!whitenoise!!-8.057339868214695!0.6777276667928263!!512.0!!bncnnMultiData/bncnnMultiData_27_dataset15-11-21b_stim_typewhitenoise_lr0.005_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!28.0!15-11-21b!0.01!0.2578697879524792!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.001!!0.0!5e-05!!0.5503827705104624!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=17, bias=True)#    (12): BatchNorm1d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4563787486233729!all!-7.523301185865423!0.05!0.15727756370637833!whitenoise!!-7.611644941936968!0.8023967280526342!!512.0!!bncnnMultiData/bncnnMultiData_28_dataset15-11-21b_stim_typewhitenoise_lr0.001_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!29.0!15-11-21b!0.001!0.285583438242183!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.001!!0.0!5e-05!!0.5064720789929841!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=17, bias=True)#    (12): BatchNorm1d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4316811266120768!all!-8.182165224156051!0.05!0.16463483840074475!whitenoise!!-8.615816801741472!0.6801757054441461!!512.0!!bncnnMultiData/bncnnMultiData_29_dataset15-11-21b_stim_typewhitenoise_lr0.001_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!2.0!15-10-07!0.01!0.2850091099739075!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.005!!0.0!5e-05!!0.6887971575373046!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.388661709618724!all!-6.096275690562834!0.05!0.12434725095590353!whitenoise!!-6.252487172548228!0.6119642834018648!!512.0!!bncnnMultiData/bncnnMultiData_2_dataset15-10-07_stim_typewhitenoise_lr0.005_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!30.0!15-11-21b!0.01!0.2488526381990489!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.0075!!0.0!5e-05!!0.5778467689643436!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=17, bias=True)#    (12): BatchNorm1d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.5302616240080354!all!-6.084598702283984!0.05!0.17824269112246285!naturalscene!!-6.544589216712732!0.7879918063931892!!512.0!!bncnnMultiData/bncnnMultiData_30_dataset15-11-21b_stim_typenaturalscene_lr0.0075_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!31.0!15-11-21b!0.001!0.25650599248269024!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.0075!!0.0!5e-05!!0.5976446406924965!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=17, bias=True)#    (12): BatchNorm1d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4482985312677411!all!-7.134641542637838!0.05!0.16999042466393766!naturalscene!!-7.126306724404497!0.6666796273798069!!512.0!!bncnnMultiData/bncnnMultiData_31_dataset15-11-21b_stim_typenaturalscene_lr0.0075_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!32.0!15-11-21b!0.01!0.2445958177832996!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.005!!0.0!5e-05!!0.5776648386725464!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=17, bias=True)#    (12): BatchNorm1d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.5069953124555282!all!-6.561346385293291!0.05!0.19894654875368706!naturalscene!!-6.5299636235244325!0.7584446107598454!!512.0!!bncnnMultiData/bncnnMultiData_32_dataset15-11-21b_stim_typenaturalscene_lr0.005_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!33.0!15-11-21b!0.001!0.258773527601186!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.005!!0.0!5e-05!!0.6079556333166005!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=17, bias=True)#    (12): BatchNorm1d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4697992079565391!all!-6.889546940961736!0.05!0.13109817648004568!naturalscene!!-7.214726417132993!0.7043272317043654!!512.0!!bncnnMultiData/bncnnMultiData_33_dataset15-11-21b_stim_typenaturalscene_lr0.005_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!34.0!15-11-21b!0.01!0.2583026360062992!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.001!!0.0!5e-05!!0.6119351340752966!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=17, bias=True)#    (12): BatchNorm1d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4513875882493898!all!-6.904045589879388!0.05!0.1971225914929648!naturalscene!!-6.8776693581455985!0.7213053277939234!!512.0!!bncnnMultiData/bncnnMultiData_34_dataset15-11-21b_stim_typenaturalscene_lr0.001_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!35.0!15-11-21b!0.001!0.3016632839160807!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.001!!0.0!5e-05!!0.6314158247574402!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=17, bias=True)#    (12): BatchNorm1d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.43600620558488895!all!-7.733497176741366!0.05!0.1756207685225197!naturalscene!!-7.788147585424363!0.6693177470687516!!512.0!!bncnnMultiData/bncnnMultiData_35_dataset15-11-21b_stim_typenaturalscene_lr0.001_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!3.0!15-10-07!0.001!0.2980498075485229!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.005!!0.0!5e-05!!0.6991853264542872!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4073694789226051!all!-6.344308251456822!0.05!0.14116873451473164!whitenoise!!-6.802044641198436!0.6471854207798946!!512.0!!bncnnMultiData/bncnnMultiData_3_dataset15-10-07_stim_typewhitenoise_lr0.005_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!4.0!15-10-07!0.01!0.2871490627527237!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.001!!0.0!5e-05!!0.6823301259133511!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.408663518134674!all!-6.11048324978583!0.05!0.11540447157004932!whitenoise!!-6.5007076838796864!0.6304988655346723!!512.0!!bncnnMultiData/bncnnMultiData_4_dataset15-10-07_stim_typewhitenoise_lr0.001_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!5.0!15-10-07!0.001!0.3151333868503571!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.001!!0.0!5e-05!!0.6453954409788691!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4205349404438368!all!-6.453591085044536!0.05!0.12084235487670693!whitenoise!!-7.256368660099728!0.7024659545440932!!512.0!!bncnnMultiData/bncnnMultiData_5_dataset15-10-07_stim_typewhitenoise_lr0.001_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!6.0!15-10-07!0.01!0.2172516256570816!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.0075!!0.0!5e-05!!0.4616338257502819!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!!all!-2.1112063786003996!0.05!!naturalscene!True!-2.0734269743501508!!!512.0!!bncnnMultiData/bncnnMultiData_6_dataset15-10-07_stim_typenaturalscene_lr0.0075_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!7.0!15-10-07!0.001!0.28571744859218595!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.0075!!0.0!5e-05!!0.6668072171890986!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3723497406757073!all!-3.1485856967401564!0.05!0.12070745365216108!naturalscene!!-3.153685093105828!0.5870971197830647!!512.0!!bncnnMultiData/bncnnMultiData_7_dataset15-10-07_stim_typenaturalscene_lr0.0075_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!8.0!15-10-07!0.01!0.2437457263469696!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.005!!0.0!5e-05!!0.5740217706715142!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4377584101208357!all!-2.4190701031984645!0.05!0.14786982507476146!naturalscene!!-2.5716453645024364!0.6652647287353727!!512.0!!bncnnMultiData/bncnnMultiData_8_dataset15-10-07_stim_typenaturalscene_lr0.005_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!9.0!15-10-07!0.001!0.29248878359794617!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.005!!0.0!5e-05!!0.6726014261687671!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3810822258431268!all!-3.2485794612803147!0.05!0.12690297381223542!naturalscene!!-3.2568226547442585!0.6791119288153065!!512.0!!bncnnMultiData/bncnnMultiData_9_dataset15-10-07_stim_typenaturalscene_lr0.005_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnn2d!0.0!15-10-07!0.005!0.2396474480628968!100.0!<class 'models.BN_CNN_2D.BNCNN2D'>!True![8, 8]!bncnn2d/results.txt!0.005!!0.0!0.0001!!0.6095151539917546!BNCNN2D(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): BatchNorm2d(8, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (2): GaussianNoise(std=0.05, trainable=False)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): BatchNorm2d(8, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (6): GaussianNoise(std=0.05, trainable=False)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.4811019783467924!all!!0.05!0.15491514901228184!naturalscene!!!0.7374032387747695!-2.516583958182759!512.0!-2.402319110286044!bncnn2d/bncnn2d_0_chans[8, 8]_lr0.005!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnn2d!10.0!15-10-07!0.005!0.3551689386367798!100.0!<class 'models.BN_CNN_2D.BNCNN2D'>!True![16, 16]!bncnn2d/results.txt!0.0001!!0.0!0.0001!!0.5820094899530177!BNCNN2D(#  (sequential): Sequential(#    (0): Conv2d(40, 16, kernel_size=(15, 15), stride=(1, 1))#    (1): BatchNorm2d(16, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (2): GaussianNoise(std=0.05, trainable=False)#    (3): ReLU()#    (4): Conv2d(16, 16, kernel_size=(11, 11), stride=(1, 1))#    (5): BatchNorm2d(16, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (6): GaussianNoise(std=0.05, trainable=False)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=10816, out_features=5, bias=True)#    (10): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!!all!!0.05!!naturalscene!!!!-4.094026690334935!512.0!-3.7610721656365063!bncnn2d/bncnn2d_10_chans[16, 16]_lr0.0001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnn2d!11.0!15-10-07!0.005!0.32189394235610963!100.0!<class 'models.BN_CNN_2D.BNCNN2D'>!True![16, 16]!bncnn2d/results.txt!1e-05!!0.0!0.0001!!0.5536489169974569!BNCNN2D(#  (sequential): Sequential(#    (0): Conv2d(40, 16, kernel_size=(15, 15), stride=(1, 1))#    (1): BatchNorm2d(16, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (2): GaussianNoise(std=0.05, trainable=False)#    (3): ReLU()#    (4): Conv2d(16, 16, kernel_size=(11, 11), stride=(1, 1))#    (5): BatchNorm2d(16, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (6): GaussianNoise(std=0.05, trainable=False)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=10816, out_features=5, bias=True)#    (10): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.2836724491218233!all!!0.05!0.08257324274256153!naturalscene!!!0.509565442613882!-3.3343827214715707!512.0!-3.033449789843872!bncnn2d/bncnn2d_11_chans[16, 16]_lr1e-05!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnn2d!12.0!15-10-07!0.005!0.21380957961082456!100.0!<class 'models.BN_CNN_2D.BNCNN2D'>!True![16, 24]!bncnn2d/results.txt!0.005!!0.0!0.0001!!0.538086200242363!BNCNN2D(#  (sequential): Sequential(#    (0): Conv2d(40, 16, kernel_size=(15, 15), stride=(1, 1))#    (1): BatchNorm2d(16, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (2): GaussianNoise(std=0.05, trainable=False)#    (3): ReLU()#    (4): Conv2d(16, 16, kernel_size=(11, 11), stride=(1, 1))#    (5): BatchNorm2d(16, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (6): GaussianNoise(std=0.05, trainable=False)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=10816, out_features=5, bias=True)#    (10): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.5032931025500382!all!!0.05!0.17697173026068105!naturalscene!!!0.7293868424872103!-2.0521556450613123!512.0!-2.0904616799452924!bncnn2d/bncnn2d_12_chans[16, 24]_lr0.005!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnn2d!13.0!15-10-07!0.005!0.3485188722610474!100.0!<class 'models.BN_CNN_2D.BNCNN2D'>!True![16, 24]!bncnn2d/results.txt!0.0001!!0.0!0.0001!!0.5755810735167104!BNCNN2D(#  (sequential): Sequential(#    (0): Conv2d(40, 16, kernel_size=(15, 15), stride=(1, 1))#    (1): BatchNorm2d(16, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (2): GaussianNoise(std=0.05, trainable=False)#    (3): ReLU()#    (4): Conv2d(16, 16, kernel_size=(11, 11), stride=(1, 1))#    (5): BatchNorm2d(16, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (6): GaussianNoise(std=0.05, trainable=False)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=10816, out_features=5, bias=True)#    (10): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.3252606870796317!all!!0.05!0.08443573053057872!naturalscene!!!0.5829486690404723!-4.039354828148406!512.0!-3.7298359931482974!bncnn2d/bncnn2d_13_chans[16, 24]_lr0.0001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnn2d!14.0!15-10-07!0.005!0.32524179816246035!100.0!<class 'models.BN_CNN_2D.BNCNN2D'>!True![16, 24]!bncnn2d/results.txt!1e-05!!0.0!0.0001!!0.5843237399535344!BNCNN2D(#  (sequential): Sequential(#    (0): Conv2d(40, 16, kernel_size=(15, 15), stride=(1, 1))#    (1): BatchNorm2d(16, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (2): GaussianNoise(std=0.05, trainable=False)#    (3): ReLU()#    (4): Conv2d(16, 16, kernel_size=(11, 11), stride=(1, 1))#    (5): BatchNorm2d(16, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (6): GaussianNoise(std=0.05, trainable=False)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=10816, out_features=5, bias=True)#    (10): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.2820439904172353!all!!0.05!0.07464802118123293!naturalscene!!!0.4855691862151149!-3.231320998068129!512.0!-2.8366938762883365!bncnn2d/bncnn2d_14_chans[16, 24]_lr1e-05!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnn2d!15.0!15-10-07!0.005!0.2451569467782974!100.0!<class 'models.BN_CNN_2D.BNCNN2D'>!True![24, 24]!bncnn2d/results.txt!0.005!!0.0!0.0001!!0.6329141272892251!BNCNN2D(#  (sequential): Sequential(#    (0): Conv2d(40, 24, kernel_size=(15, 15), stride=(1, 1))#    (1): BatchNorm2d(24, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (2): GaussianNoise(std=0.05, trainable=False)#    (3): ReLU()#    (4): Conv2d(24, 24, kernel_size=(11, 11), stride=(1, 1))#    (5): BatchNorm2d(24, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (6): GaussianNoise(std=0.05, trainable=False)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=16224, out_features=5, bias=True)#    (10): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.4896181525429837!all!!0.05!0.1774855560923119!naturalscene!!!0.7404427799119806!-2.7220527354408715!512.0!-2.594066132634908!bncnn2d/bncnn2d_15_chans[24, 24]_lr0.005!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnn2d!16.0!15-10-07!0.005!0.3652187407016754!100.0!<class 'models.BN_CNN_2D.BNCNN2D'>!True![24, 24]!bncnn2d/results.txt!0.0001!!0.0!0.0001!!0.5931992286414779!BNCNN2D(#  (sequential): Sequential(#    (0): Conv2d(40, 24, kernel_size=(15, 15), stride=(1, 1))#    (1): BatchNorm2d(24, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (2): GaussianNoise(std=0.05, trainable=False)#    (3): ReLU()#    (4): Conv2d(24, 24, kernel_size=(11, 11), stride=(1, 1))#    (5): BatchNorm2d(24, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (6): GaussianNoise(std=0.05, trainable=False)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=16224, out_features=5, bias=True)#    (10): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.36637294863663744!all!!0.05!0.11245676699428307!naturalscene!!!0.6573628759905598!-4.1296972012987325!512.0!-3.9617609331180574!bncnn2d/bncnn2d_16_chans[24, 24]_lr0.0001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnn2d!17.0!15-10-07!0.005!0.3485775589942932!100.0!<class 'models.BN_CNN_2D.BNCNN2D'>!True![24, 24]!bncnn2d/results.txt!1e-05!!0.0!0.0001!!0.502563263518213!BNCNN2D(#  (sequential): Sequential(#    (0): Conv2d(40, 24, kernel_size=(15, 15), stride=(1, 1))#    (1): BatchNorm2d(24, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (2): GaussianNoise(std=0.05, trainable=False)#    (3): ReLU()#    (4): Conv2d(24, 24, kernel_size=(11, 11), stride=(1, 1))#    (5): BatchNorm2d(24, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (6): GaussianNoise(std=0.05, trainable=False)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=16224, out_features=5, bias=True)#    (10): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.2608884941065941!all!!0.05!0.08755797266678983!naturalscene!!!0.4679163178272095!-3.332151396601808!512.0!-3.062038137632044!bncnn2d/bncnn2d_17_chans[24, 24]_lr1e-05!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnn2d!18.0!15-10-07!0.005!0.23577538430690764!100.0!<class 'models.BN_CNN_2D.BNCNN2D'>!True![8, 16]!bncnn2d/results.txt!0.005!!18.0!0.0001!!0.6037131944045191!BNCNN2D(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): BatchNorm2d(8, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (2): GaussianNoise(std=0.05, trainable=False)#    (3): ReLU()#    (4): Conv2d(8, 16, kernel_size=(11, 11), stride=(1, 1))#    (5): BatchNorm2d(16, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (6): GaussianNoise(std=0.05, trainable=False)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=10816, out_features=5, bias=True)#    (10): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.4897871381934679!all!!0.05!0.15124838320400993!naturalscene!!!0.7133525952123582!-2.5367267256768398!512.0!-2.406477446904318!bncnn2d/bncnn2d_18_chans[8, 16]_lr0.005!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnn2d!19.0!15-10-07!0.005!0.3379562854766845!100.0!<class 'models.BN_CNN_2D.BNCNN2D'>!True![8, 16]!bncnn2d/results.txt!0.0001!!18.0!0.0001!!0.5843325278612934!BNCNN2D(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): BatchNorm2d(8, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (2): GaussianNoise(std=0.05, trainable=False)#    (3): ReLU()#    (4): Conv2d(8, 16, kernel_size=(11, 11), stride=(1, 1))#    (5): BatchNorm2d(16, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (6): GaussianNoise(std=0.05, trainable=False)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=10816, out_features=5, bias=True)#    (10): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.33356367948708304!all!!0.05!0.096196442972102!naturalscene!!!0.5145177176991725!-3.9201623913389527!512.0!-3.6646640085728!bncnn2d/bncnn2d_19_chans[8, 16]_lr0.0001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnn2d!1.0!15-10-07!0.005!0.3250949561595917!100.0!<class 'models.BN_CNN_2D.BNCNN2D'>!True![8, 8]!bncnn2d/results.txt!0.0001!!0.0!0.0001!!0.5879189750804921!BNCNN2D(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): BatchNorm2d(8, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (2): GaussianNoise(std=0.05, trainable=False)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): BatchNorm2d(8, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (6): GaussianNoise(std=0.05, trainable=False)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.3295070206134971!all!!0.05!0.08075780367609295!naturalscene!!!0.569665307552361!-3.7927821085284017!512.0!-3.4950920866231168!bncnn2d/bncnn2d_1_chans[8, 8]_lr0.0001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnn2d!20.0!15-10-07!0.005!0.3105713188648224!100.0!<class 'models.BN_CNN_2D.BNCNN2D'>!True![8, 16]!bncnn2d/results.txt!1e-05!!18.0!0.0001!!0.5927915243476669!BNCNN2D(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): BatchNorm2d(8, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (2): GaussianNoise(std=0.05, trainable=False)#    (3): ReLU()#    (4): Conv2d(8, 16, kernel_size=(11, 11), stride=(1, 1))#    (5): BatchNorm2d(16, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (6): GaussianNoise(std=0.05, trainable=False)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=10816, out_features=5, bias=True)#    (10): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.2841934920821713!all!!0.05!0.07765905148678505!naturalscene!!!0.4567957837633137!-3.161814030029475!512.0!-2.9722528987913392!bncnn2d/bncnn2d_20_chans[8, 16]_lr1e-05!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnn2d!21.0!15-10-07!0.005!0.2323254317045212!100.0!<class 'models.BN_CNN_2D.BNCNN2D'>!True![8, 24]!bncnn2d/results.txt!0.005!!18.0!0.0001!!0.5762333361428504!BNCNN2D(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): BatchNorm2d(8, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (2): GaussianNoise(std=0.05, trainable=False)#    (3): ReLU()#    (4): Conv2d(8, 24, kernel_size=(11, 11), stride=(1, 1))#    (5): BatchNorm2d(24, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (6): GaussianNoise(std=0.05, trainable=False)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=16224, out_features=5, bias=True)#    (10): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.5099110976786655!all!!0.05!0.14727750842706985!naturalscene!!!0.6835495260750682!-2.4318936604719896!512.0!-2.3733506607459285!bncnn2d/bncnn2d_21_chans[8, 24]_lr0.005!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnn2d!22.0!15-10-07!0.005!0.3559685468673706!100.0!<class 'models.BN_CNN_2D.BNCNN2D'>!True![8, 24]!bncnn2d/results.txt!0.0001!!18.0!0.0001!!0.5600541474784396!BNCNN2D(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): BatchNorm2d(8, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (2): GaussianNoise(std=0.05, trainable=False)#    (3): ReLU()#    (4): Conv2d(8, 24, kernel_size=(11, 11), stride=(1, 1))#    (5): BatchNorm2d(24, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (6): GaussianNoise(std=0.05, trainable=False)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=16224, out_features=5, bias=True)#    (10): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.34834614276877424!all!!0.05!0.0931842690618746!naturalscene!!!0.6050355085329936!-4.05318673793367!512.0!-4.073971342102595!bncnn2d/bncnn2d_22_chans[8, 24]_lr0.0001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnn2d!23.0!15-10-07!0.005!0.32477580904960635!100.0!<class 'models.BN_CNN_2D.BNCNN2D'>!True![8, 24]!bncnn2d/results.txt!1e-05!!18.0!0.0001!!0.5466669869455674!BNCNN2D(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): BatchNorm2d(8, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (2): GaussianNoise(std=0.05, trainable=False)#    (3): ReLU()#    (4): Conv2d(8, 24, kernel_size=(11, 11), stride=(1, 1))#    (5): BatchNorm2d(24, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (6): GaussianNoise(std=0.05, trainable=False)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=16224, out_features=5, bias=True)#    (10): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.2894556693935482!all!!0.05!0.08713872606889979!naturalscene!!!0.4933167551729818!-2.910623882510904!512.0!-2.5811585933697643!bncnn2d/bncnn2d_23_chans[8, 24]_lr1e-05!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnn2d!24.0!15-10-07!0.005!0.2370947033166885!100.0!<class 'models.BN_CNN_2D.BNCNN2D'>!True![16, 24]!bncnn2d/results.txt!0.005!!18.0!0.0001!!0.60412893187586!BNCNN2D(#  (sequential): Sequential(#    (0): Conv2d(40, 16, kernel_size=(15, 15), stride=(1, 1))#    (1): BatchNorm2d(16, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (2): GaussianNoise(std=0.05, trainable=False)#    (3): ReLU()#    (4): Conv2d(16, 24, kernel_size=(11, 11), stride=(1, 1))#    (5): BatchNorm2d(24, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (6): GaussianNoise(std=0.05, trainable=False)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=16224, out_features=5, bias=True)#    (10): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.5151799342046083!all!!0.05!0.14635401457519426!naturalscene!!!0.7243266509342909!-2.479807004130264!512.0!-2.3787243939586915!bncnn2d/bncnn2d_24_chans[16, 24]_lr0.005!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnn2d!25.0!15-10-07!0.005!0.37137873768806456!100.0!<class 'models.BN_CNN_2D.BNCNN2D'>!True![16, 24]!bncnn2d/results.txt!0.0001!!18.0!0.0001!!0.5801508311620928!BNCNN2D(#  (sequential): Sequential(#    (0): Conv2d(40, 16, kernel_size=(15, 15), stride=(1, 1))#    (1): BatchNorm2d(16, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (2): GaussianNoise(std=0.05, trainable=False)#    (3): ReLU()#    (4): Conv2d(16, 24, kernel_size=(11, 11), stride=(1, 1))#    (5): BatchNorm2d(24, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (6): GaussianNoise(std=0.05, trainable=False)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=16224, out_features=5, bias=True)#    (10): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.34867285454179536!all!!0.05!0.11768002116650472!naturalscene!!!0.5970740105237343!-4.117349857298677!512.0!-3.8453309377036935!bncnn2d/bncnn2d_25_chans[16, 24]_lr0.0001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnn2d!26.0!15-10-07!0.005!0.3395167589187622!100.0!<class 'models.BN_CNN_2D.BNCNN2D'>!True![16, 24]!bncnn2d/results.txt!1e-05!!18.0!0.0001!!0.5403235186782546!BNCNN2D(#  (sequential): Sequential(#    (0): Conv2d(40, 16, kernel_size=(15, 15), stride=(1, 1))#    (1): BatchNorm2d(16, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (2): GaussianNoise(std=0.05, trainable=False)#    (3): ReLU()#    (4): Conv2d(16, 24, kernel_size=(11, 11), stride=(1, 1))#    (5): BatchNorm2d(24, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (6): GaussianNoise(std=0.05, trainable=False)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=16224, out_features=5, bias=True)#    (10): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.2718244752663593!all!!0.05!0.0808347812540322!naturalscene!!!0.4541661631720218!-3.516608736813518!512.0!-3.097332831399399!bncnn2d/bncnn2d_26_chans[16, 24]_lr1e-05!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnn2d!2.0!15-10-07!0.005!0.29721114337444304!100.0!<class 'models.BN_CNN_2D.BNCNN2D'>!True![8, 8]!bncnn2d/results.txt!1e-05!!0.0!0.0001!!0.6144405821197075!BNCNN2D(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): BatchNorm2d(8, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (2): GaussianNoise(std=0.05, trainable=False)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): BatchNorm2d(8, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (6): GaussianNoise(std=0.05, trainable=False)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.29844573204725794!all!!0.05!0.08480535008470495!naturalscene!!!0.5185624978485007!-2.6932328854930527!512.0!-2.5887704432352616!bncnn2d/bncnn2d_2_chans[8, 8]_lr1e-05!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnn2d!3.0!15-10-07!0.005!0.2075755000114441!100.0!<class 'models.BN_CNN_2D.BNCNN2D'>!True![8, 16]!bncnn2d/results.txt!0.005!!0.0!0.0001!!0.5262150913020512!BNCNN2D(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): BatchNorm2d(8, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (2): GaussianNoise(std=0.05, trainable=False)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): BatchNorm2d(8, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (6): GaussianNoise(std=0.05, trainable=False)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.5312787589836219!all!!0.05!0.1393757434389251!naturalscene!!!0.7488522190314076!-1.900460073831147!512.0!-1.8673216458919344!bncnn2d/bncnn2d_3_chans[8, 16]_lr0.005!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnn2d!4.0!15-10-07!0.005!0.3217299163341522!100.0!<class 'models.BN_CNN_2D.BNCNN2D'>!True![8, 16]!bncnn2d/results.txt!0.0001!!0.0!0.0001!!0.6095407111823968!BNCNN2D(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): BatchNorm2d(8, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (2): GaussianNoise(std=0.05, trainable=False)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): BatchNorm2d(8, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (6): GaussianNoise(std=0.05, trainable=False)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.3464899204771029!all!!0.05!0.08747147962325001!naturalscene!!!0.6012408955531018!-3.720360573060912!512.0!-3.6734515724347134!bncnn2d/bncnn2d_4_chans[8, 16]_lr0.0001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnn2d!5.0!15-10-07!0.005!0.2846454679965973!100.0!<class 'models.BN_CNN_2D.BNCNN2D'>!True![8, 16]!bncnn2d/results.txt!1e-05!!0.0!0.0001!!0.5749501149451375!BNCNN2D(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): BatchNorm2d(8, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (2): GaussianNoise(std=0.05, trainable=False)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): BatchNorm2d(8, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (6): GaussianNoise(std=0.05, trainable=False)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.2660278724728276!all!!0.05!0.08728348055713664!naturalscene!!!0.4692500753645447!-2.8397139992289597!512.0!-2.5351984405497205!bncnn2d/bncnn2d_5_chans[8, 16]_lr1e-05!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnn2d!6.0!15-10-07!0.005!0.1653338149189949!100.0!<class 'models.BN_CNN_2D.BNCNN2D'>!True![8, 24]!bncnn2d/results.txt!0.005!!0.0!0.0001!!0.4120146506813885!BNCNN2D(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): BatchNorm2d(8, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (2): GaussianNoise(std=0.05, trainable=False)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): BatchNorm2d(8, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (6): GaussianNoise(std=0.05, trainable=False)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!!all!!0.05!!naturalscene!True!!!-1.3490059537374801!512.0!-1.2329231532021367!bncnn2d/bncnn2d_6_chans[8, 24]_lr0.005!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnn2d!7.0!15-10-07!0.005!0.3228377938270569!100.0!<class 'models.BN_CNN_2D.BNCNN2D'>!True![8, 24]!bncnn2d/results.txt!0.0001!!0.0!0.0001!!0.6007429461390252!BNCNN2D(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): BatchNorm2d(8, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (2): GaussianNoise(std=0.05, trainable=False)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): BatchNorm2d(8, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (6): GaussianNoise(std=0.05, trainable=False)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.3376898483185583!all!!0.05!0.09157053517337882!naturalscene!!!0.6036185240372285!-3.769027955571631!512.0!-3.4532900137637625!bncnn2d/bncnn2d_7_chans[8, 24]_lr0.0001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
scaleshift!0.0!15-10-07!0.01!0.2407427221536637!75.0!<class 'models.SS_CNN.SSCNN'>!!!scaleshift/results.txt!0.001!5.0!!0.001!!0.6855743462508185!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.05)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.05)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.3704573413187191!!!0.05!0.11589328951303984!naturalscene!!!0.6159668664123644!-2.463419062429604!512.0!-1.5649061352014542!scaleshift/scaleshift_0_lr0.001_l10.001_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
scaleshift!0.0!15-10-07!0.01!0.17330580204725266!100.0!<class 'models.SS_CNN.SSCNN'>!!!scaleshift/results.txt!0.001!5.0!!1.4999999999999999e-05!!0.4328873040264739!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.05)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.05)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!!!!0.05!!naturalscene!True!!!-1.5315083903492306!512.0!-0.9549724273383616!scaleshift/scaleshift_0_lr0.001_l11.5e-05!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
scaleshift!10.0!15-10-07!0.01!0.2488165915012361!75.0!<class 'models.SS_CNN.SSCNN'>!!!scaleshift/results.txt!0.0001!5.0!!1e-06!!0.7093136759504562!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.05)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.05)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.39519473554908396!!!0.05!0.13886162476483074!naturalscene!!!0.6697885695558737!-3.199815031629882!512.0!-1.8815754055976868!scaleshift/scaleshift_10_lr0.0001_l11e-06_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
scaleshift!11.0!15-10-07!0.001!0.2374926656484604!75.0!<class 'models.SS_CNN.SSCNN'>!!!scaleshift/results.txt!0.0001!5.0!!1e-06!!0.7080015545814039!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.05)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.05)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.36665262149686895!!!0.05!0.08537354684417785!naturalscene!!!0.6520220266698833!-3.614816650545975!512.0!-1.8523718416690824!scaleshift/scaleshift_11_lr0.0001_l11e-06_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
scaleshift!12.0!15-10-07!0.01!0.2219993561506272!75.0!<class 'models.SS_CNN.SSCNN'>!!!scaleshift/results.txt!1e-05!5.0!!0.001!!0.5974578411221219!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.05)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.05)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.4348234286872042!!!0.05!0.10968388308951288!naturalscene!!!0.6627894308571295!-1.6647153478312458!512.0!-1.4257049225270748!scaleshift/scaleshift_12_lr1e-05_l10.001_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
scaleshift!13.0!15-10-07!0.001!0.2288499295711517!75.0!<class 'models.SS_CNN.SSCNN'>!!!scaleshift/results.txt!1e-05!5.0!!0.001!!0.6233573335611011!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.05)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.05)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.3683559418548623!!!0.05!0.09186884612125963!naturalscene!!!0.5939788038562992!-1.835440117039832!512.0!-1.6225657165050509!scaleshift/scaleshift_13_lr1e-05_l10.001_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
scaleshift!14.0!15-10-07!0.01!0.2268190234899521!75.0!<class 'models.SS_CNN.SSCNN'>!!!scaleshift/results.txt!1e-05!5.0!!1.4999999999999999e-05!!0.617343669821948!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.05)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.05)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.4213389841460547!!!0.05!0.13091914858198572!naturalscene!!!0.626776996177932!-2.6950158038110565!512.0!-1.7456312030553818!scaleshift/scaleshift_14_lr1e-05_l11.5e-05_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
scaleshift!15.0!15-10-07!0.001!0.22175245583057404!75.0!<class 'models.SS_CNN.SSCNN'>!!!scaleshift/results.txt!1e-05!5.0!!1.4999999999999999e-05!!0.596236595421303!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.05)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.05)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.4030705483818183!!!0.05!0.10718719707620583!naturalscene!!!0.5949978483515106!-2.7414672222791934!512.0!-1.6938060894608498!scaleshift/scaleshift_15_lr1e-05_l11.5e-05_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
scaleshift!16.0!15-10-07!0.01!0.2195628136396408!75.0!<class 'models.SS_CNN.SSCNN'>!!!scaleshift/results.txt!1e-05!5.0!!1e-06!!0.5935128394924899!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.05)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.05)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.3702226880329752!!!0.05!0.10235925759367336!naturalscene!!!0.5528020381289971!-2.6371132377226068!512.0!-1.6377380564808846!scaleshift/scaleshift_16_lr1e-05_l11e-06_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
scaleshift!17.0!15-10-07!0.001!0.21973221004009247!75.0!<class 'models.SS_CNN.SSCNN'>!!!scaleshift/results.txt!1e-05!5.0!!1e-06!!0.6120505855636736!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.05)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.05)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.3397585884278545!!!0.05!0.08723849357110118!naturalscene!!!0.5671574386251155!-2.7523635800248!512.0!-1.6626795008778572!scaleshift/scaleshift_17_lr1e-05_l11e-06_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
scaleshift!1.0!15-10-07!0.001!!75.0!<class 'models.SS_CNN.SSCNN'>!!!scaleshift/results.txt!0.001!5.0!!0.001!!!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.05)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.05)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!!!!0.05!!naturalscene!True!!!!512.0!!scaleshift/scaleshift_1_lr0.001_l10.001_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
scaleshift!2.0!15-10-07!0.01!0.2490630656480789!75.0!<class 'models.SS_CNN.SSCNN'>!!!scaleshift/results.txt!0.001!5.0!!1.4999999999999999e-05!!0.7125906678927421!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.05)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.05)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.35620822843746536!!!0.05!0.12782697231256376!naturalscene!!!0.6447559842185122!-3.3589101181130965!512.0!-2.0119057968258858!scaleshift/scaleshift_2_lr0.001_l11.5e-05_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
scaleshift!3.0!15-10-07!0.001!0.15746675282716752!75.0!<class 'models.SS_CNN.SSCNN'>!!!scaleshift/results.txt!0.001!5.0!!1.4999999999999999e-05!!0.3808415297618127!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.05)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.05)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!!!!0.05!!naturalscene!True!!!-1.3651550165286248!512.0!-0.8190112199736177!scaleshift/scaleshift_3_lr0.001_l11.5e-05_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
scaleshift!4.0!15-10-07!0.01!0.2381403267383576!75.0!<class 'models.SS_CNN.SSCNN'>!!!scaleshift/results.txt!0.001!5.0!!1e-06!!0.6711624914045874!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.05)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.05)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.3542906671801013!!!0.05!0.1072918241479135!naturalscene!!!0.6103154366152057!-3.1916316501335498!512.0!-1.9605396911501884!scaleshift/scaleshift_4_lr0.001_l11e-06_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
scaleshift!5.0!15-10-07!0.001!0.22027964890003204!75.0!<class 'models.SS_CNN.SSCNN'>!!!scaleshift/results.txt!0.001!5.0!!1e-06!!0.6475569516386791!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.05)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.05)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.3494390880389517!!!0.05!0.10106697987968784!naturalscene!!!0.6162352181954829!-3.685817895252061!512.0!-1.2021647151559591!scaleshift/scaleshift_5_lr0.001_l11e-06_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
scaleshift!6.0!15-10-07!0.01!0.2527062773704529!75.0!<class 'models.SS_CNN.SSCNN'>!!!scaleshift/results.txt!0.0001!5.0!!0.001!!0.7039951638585468!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.05)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.05)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.3804870366912617!!!0.05!0.12023490632313125!naturalscene!!!0.693167301358866!-2.3792380677089437!512.0!-1.7785890325903893!scaleshift/scaleshift_6_lr0.0001_l10.001_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
scaleshift!7.0!15-10-07!0.001!0.2422324538230896!75.0!<class 'models.SS_CNN.SSCNN'>!!!scaleshift/results.txt!0.0001!5.0!!0.001!!0.688285531051823!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.05)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.05)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.3710510636879465!!!0.05!0.1076017435050566!naturalscene!!!0.6485892540964462!-2.617954254240292!512.0!-1.8298200219869607!scaleshift/scaleshift_7_lr0.0001_l10.001_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
scaleshift!8.0!15-10-07!0.01!0.2481389909982681!75.0!<class 'models.SS_CNN.SSCNN'>!!!scaleshift/results.txt!0.0001!5.0!!1.4999999999999999e-05!!0.7072228077412549!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.05)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.05)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.3632599734938954!!!0.05!0.09568278246671236!naturalscene!!!0.7028351647384029!-3.1212219625576587!512.0!-1.876933880150318!scaleshift/scaleshift_8_lr0.0001_l11.5e-05_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
scaleshift!9.0!15-10-07!0.001!0.2394813358783722!75.0!<class 'models.SS_CNN.SSCNN'>!!!scaleshift/results.txt!0.0001!5.0!!1.4999999999999999e-05!!0.6957102571173547!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.05)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.05)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.37005213425640215!!!0.05!0.10568389870538432!naturalscene!!!0.6701860040755101!-3.4941024014313298!512.0!-1.8472004979848864!scaleshift/scaleshift_9_lr0.0001_l11.5e-05_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnDataSearch!0.0!15-10-07!0.005!0.28865116834640503!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnDataSearch/results.txt!0.005!!0.0!0.0001!!0.7101083157633391!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3931215212157214!all!!0.05!0.1114723291734634!whitenoise!!!0.6089647691862174!-6.345135047964381!512.0!-6.239952645559241!bncnnDataSearch/bncnnDataSearch_0_dataset15-10-07_stim_typewhitenoise!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnDataSearch!1.0!15-10-07!0.005!0.263962921500206!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnDataSearch/results.txt!0.005!!0.0!0.0001!!0.6005618335318751!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4251755735065839!all!!0.05!0.12301767201749418!naturalscene!!!0.6998710448606947!-2.8738065580437087!512.0!-2.8419340202381136!bncnnDataSearch/bncnnDataSearch_1_dataset15-10-07_stim_typenaturalscene!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnDataSearch!2.0!15-11-21a!0.005!0.2941647842526436!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnDataSearch/results.txt!0.005!!0.0!0.0001!!0.6720275398049208!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=4, bias=True)#    (12): BatchNorm1d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4959976343102039!all!!0.05!0.16516153649565846!whitenoise!!!0.7379224371937374!-11.600523145310301!512.0!-11.207152033275634!bncnnDataSearch/bncnnDataSearch_2_dataset15-11-21a_stim_typewhitenoise!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnDataSearch!3.0!15-11-21a!0.005!0.29321836680173874!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnDataSearch/results.txt!0.005!!0.0!0.0001!!0.6944496989703658!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=4, bias=True)#    (12): BatchNorm1d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.5337798085444823!all!!0.05!0.1930652143128745!naturalscene!!!0.7856839493455436!-10.1273848345197!512.0!-10.488153753798544!bncnnDataSearch/bncnnDataSearch_3_dataset15-11-21a_stim_typenaturalscene!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnDataSearch!4.0!15-11-21b!0.005!0.25304175299756665!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnDataSearch/results.txt!0.005!!0.0!0.0001!!0.5386035418496716!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=17, bias=True)#    (12): BatchNorm1d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.42343086136190417!all!!0.05!0.13512096186734995!whitenoise!!!0.6849903204289949!-7.591547675442013!512.0!-7.615744121925672!bncnnDataSearch/bncnnDataSearch_4_dataset15-11-21b_stim_typewhitenoise!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnDataSearch!5.0!15-11-21b!0.005!0.2475559926208328!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnDataSearch/results.txt!0.005!!0.0!0.0001!!0.5873056410120121!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=17, bias=True)#    (12): BatchNorm1d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.5058986893587799!all!!0.05!0.21519630336188947!naturalscene!!!0.7584739710930275!-6.799598386744387!512.0!-6.591351803741418!bncnnDataSearch/bncnnDataSearch_5_dataset15-11-21b_stim_typenaturalscene!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
dalesBNnobias!0.0!15-10-07!0.01!0.20998119115829467!100.0!<class 'models.Dales_BN_CNN.DalesBNCNN'>!False!!dalesBNnobias/results.txt!0.01!5.0!!0.0001!!0.5410685926690426!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.05)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=False)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.4105270675474717!!!0.05!0.08220664595026637!naturalscene!!!0.6305695605976558!-1.7645855871216023!512.0!-1.3699727393686771!dalesBNnobias/dalesBNnobias_0_lr0.01_l10.0001_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
dalesBNnobias!10.0!15-10-07!0.01!0.17123459577560424!100.0!<class 'models.Dales_BN_CNN.DalesBNCNN'>!False!!dalesBNnobias/results.txt!0.0001!5.0!!1e-06!!0.4325971056599165!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.05)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=False)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!!!!0.05!!naturalscene!True!!!-1.4787932115341471!512.0!0.12345318729057908!dalesBNnobias/dalesBNnobias_10_lr0.0001_l11e-06_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
dalesBNnobias!11.0!15-10-07!0.005!0.21238057911396027!100.0!<class 'models.Dales_BN_CNN.DalesBNCNN'>!False!!dalesBNnobias/results.txt!0.0001!5.0!!1e-06!!0.5624644861958158!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.05)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=False)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.4100437671525088!!!0.05!0.06499846424044657!naturalscene!!!0.646130596207032!-2.111505495387145!512.0!-1.2992218770086763!dalesBNnobias/dalesBNnobias_11_lr0.0001_l11e-06_l20.005!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
dalesBNnobias!12.0!15-10-07!0.01!0.2091442495584488!100.0!<class 'models.Dales_BN_CNN.DalesBNCNN'>!False!!dalesBNnobias/results.txt!1e-05!5.0!!0.0001!!0.5287990473445106!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.05)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=False)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.4356627832031891!!!0.05!0.1126467229295554!naturalscene!!!0.6431506268365578!-1.2731858505382796!512.0!-0.8662288542836905!dalesBNnobias/dalesBNnobias_12_lr1e-05_l10.0001_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
dalesBNnobias!13.0!15-10-07!0.005!0.2131082594394684!100.0!<class 'models.Dales_BN_CNN.DalesBNCNN'>!False!!dalesBNnobias/results.txt!1e-05!5.0!!0.0001!!0.5424386036570541!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.05)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=False)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.4355214811538875!!!0.05!0.1346661634300058!naturalscene!!!0.656561191022213!-1.3796734002785445!512.0!-0.91594102664385!dalesBNnobias/dalesBNnobias_13_lr1e-05_l10.0001_l20.005!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
dalesBNnobias!14.0!15-10-07!0.01!0.19645922482013706!100.0!<class 'models.Dales_BN_CNN.DalesBNCNN'>!False!!dalesBNnobias/results.txt!1e-05!5.0!!1e-06!!0.5052647606488173!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.05)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=False)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.472910335917174!!!0.05!0.029118654784905176!naturalscene!!!0.6993743539068307!-1.4939398777532091!512.0!-0.6580499354749918!dalesBNnobias/dalesBNnobias_14_lr1e-05_l11e-06_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
dalesBNnobias!15.0!15-10-07!0.005!0.21036735475063328!100.0!<class 'models.Dales_BN_CNN.DalesBNCNN'>!False!!dalesBNnobias/results.txt!1e-05!5.0!!1e-06!!0.5294248227768976!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.05)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=False)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.4542341873581275!!!0.05!0.14333388539538452!naturalscene!!!0.6997778843244284!-1.5902262359947459!512.0!-0.955880330875516!dalesBNnobias/dalesBNnobias_15_lr1e-05_l11e-06_l20.005!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
dalesBNnobias!1.0!15-10-07!0.005!0.21652593910694126!100.0!<class 'models.Dales_BN_CNN.DalesBNCNN'>!False!!dalesBNnobias/results.txt!0.01!5.0!!0.0001!!0.5609970504739661!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.05)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=False)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.4869991810896508!!!0.05!0.10559742489192142!naturalscene!!!0.7186257347653939!-2.0150045446410982!512.0!-1.5305927842855451!dalesBNnobias/dalesBNnobias_1_lr0.01_l10.0001_l20.005!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
dalesBNnobias!2.0!15-10-07!0.01!0.19849066883325567!100.0!<class 'models.Dales_BN_CNN.DalesBNCNN'>!False!!dalesBNnobias/results.txt!0.01!5.0!!1e-06!!0.5209447826226385!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.05)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=False)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.4446916326838543!!!0.05!0.12568196622783406!naturalscene!!!0.7052138775940233!-1.5857884162196931!512.0!-1.2398619633167982!dalesBNnobias/dalesBNnobias_2_lr0.01_l11e-06_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
dalesBNnobias!3.0!15-10-07!0.005!0.21527967005968093!100.0!<class 'models.Dales_BN_CNN.DalesBNCNN'>!False!!dalesBNnobias/results.txt!0.01!5.0!!1e-06!!0.5809882511755788!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.05)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=False)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.4309983262918347!!!0.05!0.09422242468451766!naturalscene!!!0.6792020438246843!-2.161815654817929!512.0!-1.5008810311555862!dalesBNnobias/dalesBNnobias_3_lr0.01_l11e-06_l20.005!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
dalesBNnobias!4.0!15-10-07!0.01!0.2319514214992523!100.0!<class 'models.Dales_BN_CNN.DalesBNCNN'>!False!!dalesBNnobias/results.txt!0.001!5.0!!0.0001!!0.5954450246663392!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.05)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=False)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.3744217013822795!!!0.05!0.12496078947686495!naturalscene!!!0.5699458326590279!-2.13585606833209!512.0!-1.6406016722321508!dalesBNnobias/dalesBNnobias_4_lr0.001_l10.0001_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
dalesBNnobias!5.0!15-10-07!0.005!0.2347425192594529!100.0!<class 'models.Dales_BN_CNN.DalesBNCNN'>!False!!dalesBNnobias/results.txt!0.001!5.0!!0.0001!!0.5859444072114168!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.05)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=False)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.4143498668968022!!!0.05!0.04627269795517422!naturalscene!!!0.6478658177928894!-2.170059819094736!512.0!-1.7699839770793917!dalesBNnobias/dalesBNnobias_5_lr0.001_l10.0001_l20.005!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
dalesBNnobias!6.0!15-10-07!0.01!0.23200638592243195!100.0!<class 'models.Dales_BN_CNN.DalesBNCNN'>!False!!dalesBNnobias/results.txt!0.001!5.0!!1e-06!!0.5986965335104378!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.05)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=False)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.3651424231934201!!!0.05!0.11279887616411767!naturalscene!!!0.5501072797143217!-2.17782924837836!512.0!-1.6999119818210602!dalesBNnobias/dalesBNnobias_6_lr0.001_l11e-06_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
dalesBNnobias!7.0!15-10-07!0.005!0.2345158129930497!100.0!<class 'models.Dales_BN_CNN.DalesBNCNN'>!False!!dalesBNnobias/results.txt!0.001!5.0!!1e-06!!0.607998031113831!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.05)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=False)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.5116408594284356!!!0.05!0.07492606220492057!naturalscene!!!0.7327512639826639!-2.387339888160225!512.0!-1.7923422157764437!dalesBNnobias/dalesBNnobias_7_lr0.001_l11e-06_l20.005!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
dalesBNnobias!8.0!15-10-07!0.01!0.2336210370063781!100.0!<class 'models.Dales_BN_CNN.DalesBNCNN'>!False!!dalesBNnobias/results.txt!0.0001!5.0!!0.0001!!0.6167587789985601!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.05)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=False)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.37982560092998097!!!0.05!0.08014731413765024!naturalscene!!!0.5761998671677265!-2.0243564512395213!512.0!-1.665549397468567!dalesBNnobias/dalesBNnobias_8_lr0.0001_l10.0001_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
dalesBNnobias!9.0!15-10-07!0.005!0.2380402058362961!100.0!<class 'models.Dales_BN_CNN.DalesBNCNN'>!False!!dalesBNnobias/results.txt!0.0001!5.0!!0.0001!!0.6171835107032677!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.05)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=False)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.4649231082178954!!!0.05!0.10229360180132037!naturalscene!!!0.7098361285226316!-2.056586991877577!512.0!-1.6523578315973282!dalesBNnobias/dalesBNnobias_9_lr0.0001_l10.0001_l20.005!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
test!0.0!15-10-07!0.01!0.0430287066912997!100.0!<class 'models.SS_CNN.SSCNN'>!!!test/results.txt!0.0001!5.0!!0.001!!0.09351524632086773!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.05)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.05)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!!!!0.05!!naturalscene!True!!!0.002271872659973789!512.0!0.6511954963207245!test/test_0_lr0.0001_l10.001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBNnofinalbn!0.0!15-10-07!0.005!0.2671623110771179!85.0!<class 'models.BN_CNN.BNCNN'>!True!!practicalBNnofinalbn/results.txt!0.005!5.0!0.0!0.0001!!0.6299673145935187!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4173437101307777!all!!0.05!0.13544428279460122!naturalscene!!!0.6806527341488381!-2.915724986998384!512.0!-2.7942930230183265!practicalBNnofinalbn/practicalBNnofinalbn_0_lr0.005!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBN!0.0!15-10-07!0.0!0.28177979290485383!100.0!<class 'models.practical_BN_CNN.PracticalBNCNN'>!True!!practicalBN/results.txt!0.01!5.0!0.0!0.005!!0.6732073589718919!PracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.15)#    (2): ReLU()#    (3): Flatten()#    (4): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.3)#    (8): ReLU()#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3966105358149984!!!0.3!0.12270964865571805!naturalscene!!!0.6804502258081957!-3.2087577843917803!512.0!16.60976456105709!practicalBN/practicalBN_0_lr0.01_l10.005_l20!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBN!10.0!15-10-07!0.0!0.3058620929718018!100.0!<class 'models.practical_BN_CNN.PracticalBNCNN'>!True!!practicalBN/results.txt!0.001!5.0!0.0!0.0005!!0.6891658196337312!PracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.15)#    (2): ReLU()#    (3): Flatten()#    (4): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.3)#    (8): ReLU()#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3334574899141221!!!0.3!0.1097197088134568!naturalscene!!!0.6477578936224281!-3.4452937012524267!512.0!-3.4615444242954254!practicalBN/practicalBN_10_lr0.001_l10.0005_l20!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBN!11.0!15-10-07!0.0001!0.3021345376968384!100.0!<class 'models.practical_BN_CNN.PracticalBNCNN'>!True!!practicalBN/results.txt!0.001!5.0!0.0!0.0005!!0.6858410677220895!PracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.15)#    (2): ReLU()#    (3): Flatten()#    (4): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.3)#    (8): ReLU()#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.34182611164640025!!!0.3!0.08973399292107725!naturalscene!!!0.6451392354159663!-3.445972689676069!512.0!-3.569062173366546!practicalBN/practicalBN_11_lr0.001_l10.0005_l20.0001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBN!12.0!15-10-07!0.0!0.305929046869278!100.0!<class 'models.practical_BN_CNN.PracticalBNCNN'>!True!!practicalBN/results.txt!0.0001!5.0!0.0!0.005!!0.6886002862320216!PracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.15)#    (2): ReLU()#    (3): Flatten()#    (4): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.3)#    (8): ReLU()#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3265170732740867!!!0.3!0.10271766454880127!naturalscene!!!0.6145727988340752!-3.3067158863375448!512.0!-3.376091778278351!practicalBN/practicalBN_12_lr0.0001_l10.005_l20!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBN!13.0!15-10-07!0.0001!0.3031744182109833!100.0!<class 'models.practical_BN_CNN.PracticalBNCNN'>!True!!practicalBN/results.txt!0.0001!5.0!0.0!0.005!!0.6927368158725409!PracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.15)#    (2): ReLU()#    (3): Flatten()#    (4): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.3)#    (8): ReLU()#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3316422662051923!!!0.3!0.11007903478057986!naturalscene!!!0.604139190318568!-3.357657283139984!512.0!-3.3555056750774384!practicalBN/practicalBN_13_lr0.0001_l10.005_l20.0001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBN!14.0!15-10-07!0.0!0.29665054082870485!100.0!<class 'models.practical_BN_CNN.PracticalBNCNN'>!True!!practicalBN/results.txt!0.0001!5.0!0.0!0.0005!!0.6615462095133143!PracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.15)#    (2): ReLU()#    (3): Flatten()#    (4): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.3)#    (8): ReLU()#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3194941673019324!!!0.3!0.08866168020561478!naturalscene!!!0.6274142115989206!-3.3365783198746435!512.0!-3.2679049670696263!practicalBN/practicalBN_14_lr0.0001_l10.0005_l20!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBN!15.0!15-10-07!0.0001!0.2924665004014969!100.0!<class 'models.practical_BN_CNN.PracticalBNCNN'>!True!!practicalBN/results.txt!0.0001!5.0!0.0!0.0005!!0.6808919042296507!PracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.15)#    (2): ReLU()#    (3): Flatten()#    (4): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.3)#    (8): ReLU()#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.323644398818581!!!0.3!0.1008473650856925!naturalscene!!!0.6141553881823884!-3.3230293350881404!512.0!-3.3109754025936127!practicalBN/practicalBN_15_lr0.0001_l10.0005_l20.0001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBN!16.0!15-10-07!0.0!0.2834327816963196!100.0!<class 'models.practical_BN_CNN.PracticalBNCNN'>!True!!practicalBN/results.txt!0.01!5.0!16.0!0.005!!0.6710037129431701!PracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.1)#    (2): ReLU()#    (3): Flatten()#    (4): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.2)#    (8): ReLU()#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3968360703783846!!!0.2!0.1288009055482648!naturalscene!!!0.6567248419006461!-3.3186576564207697!512.0!34340.2068387866!practicalBN/practicalBN_16_lr0.01_l10.005_l20!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBN!17.0!15-10-07!0.0001!0.2819104194641113!100.0!<class 'models.practical_BN_CNN.PracticalBNCNN'>!True!!practicalBN/results.txt!0.01!5.0!16.0!0.005!!0.6994661910738325!PracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.1)#    (2): ReLU()#    (3): Flatten()#    (4): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.2)#    (8): ReLU()#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3671306269005044!!!0.2!0.11376110410053147!naturalscene!!!0.6811034329310838!-3.13812813499934!512.0!-3.1575868129730225!practicalBN/practicalBN_17_lr0.01_l10.005_l20.0001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBN!18.0!15-10-07!0.0!0.2934194833040237!100.0!<class 'models.practical_BN_CNN.PracticalBNCNN'>!True!!practicalBN/results.txt!0.01!5.0!16.0!0.0005!!0.6916160699755549!PracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.1)#    (2): ReLU()#    (3): Flatten()#    (4): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.2)#    (8): ReLU()#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3743780692026022!!!0.2!0.11110353393122208!naturalscene!!!0.6836456397372598!-3.3540449374401735!512.0!890163.3653146103!practicalBN/practicalBN_18_lr0.01_l10.0005_l20!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBN!19.0!15-10-07!0.0001!0.28138812482357023!100.0!<class 'models.practical_BN_CNN.PracticalBNCNN'>!True!!practicalBN/results.txt!0.01!5.0!16.0!0.0005!!0.6947128898967281!PracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.1)#    (2): ReLU()#    (3): Flatten()#    (4): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.2)#    (8): ReLU()#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3582298847906005!!!0.2!0.09708208998116977!naturalscene!!!0.6743098903273267!-3.1651258649329788!512.0!-3.1849052608013166!practicalBN/practicalBN_19_lr0.01_l10.0005_l20.0001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBN!1.0!15-10-07!0.0001!0.2786273658275604!100.0!<class 'models.practical_BN_CNN.PracticalBNCNN'>!True!!practicalBN/results.txt!0.01!5.0!0.0!0.005!!0.6964966942823088!PracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.15)#    (2): ReLU()#    (3): Flatten()#    (4): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.3)#    (8): ReLU()#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3659114981231121!!!0.3!0.10331304134721034!naturalscene!!!0.6799825402448871!-3.0711425528447203!512.0!-3.1860290467739105!practicalBN/practicalBN_1_lr0.01_l10.005_l20.0001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBN!20.0!15-10-07!0.0!0.3147619962692261!100.0!<class 'models.practical_BN_CNN.PracticalBNCNN'>!True!!practicalBN/results.txt!0.005!5.0!16.0!0.005!!0.6739615013879808!PracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.1)#    (2): ReLU()#    (3): Flatten()#    (4): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.2)#    (8): ReLU()#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3431426266211537!!!0.2!0.0973130854632322!naturalscene!!!0.6414546208492108!-3.5970016442812405!512.0!-3.585593566298485!practicalBN/practicalBN_20_lr0.005_l10.005_l20!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBN!21.0!15-10-07!0.0001!0.2928539454936981!100.0!<class 'models.practical_BN_CNN.PracticalBNCNN'>!True!!practicalBN/results.txt!0.005!5.0!16.0!0.005!!0.7105483101632839!PracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.1)#    (2): ReLU()#    (3): Flatten()#    (4): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.2)#    (8): ReLU()#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3543183394481934!!!0.2!0.10280862095986293!naturalscene!!!0.6520215332521864!-3.336649162736953!512.0!-3.3008400499820714!practicalBN/practicalBN_21_lr0.005_l10.005_l20.0001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBN!22.0!15-10-07!0.0!0.30001593232154844!100.0!<class 'models.practical_BN_CNN.PracticalBNCNN'>!True!!practicalBN/results.txt!0.005!5.0!16.0!0.0005!!0.69087771893572!PracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.1)#    (2): ReLU()#    (3): Flatten()#    (4): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.2)#    (8): ReLU()#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3700376161460921!!!0.2!0.11562293440287626!naturalscene!!!0.6249443523044802!-3.4900211910316847!512.0!59943.61007139088!practicalBN/practicalBN_22_lr0.005_l10.0005_l20!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBN!23.0!15-10-07!0.0001!0.29176746010780336!100.0!<class 'models.practical_BN_CNN.PracticalBNCNN'>!True!!practicalBN/results.txt!0.005!5.0!16.0!0.0005!!0.6925230485757325!PracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.1)#    (2): ReLU()#    (3): Flatten()#    (4): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.2)#    (8): ReLU()#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3599526507856293!!!0.2!0.10842056562466752!naturalscene!!!0.6446876012828493!-3.303393095327179!512.0!-3.322161376476288!practicalBN/practicalBN_23_lr0.005_l10.0005_l20.0001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBN!24.0!15-10-07!0.0!0.3201482176780701!100.0!<class 'models.practical_BN_CNN.PracticalBNCNN'>!True!!practicalBN/results.txt!0.001!5.0!16.0!0.005!!0.7035547974577508!PracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.1)#    (2): ReLU()#    (3): Flatten()#    (4): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.2)#    (8): ReLU()#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3343761691043295!!!0.2!0.0883047350380728!naturalscene!!!0.6397155410069013!-3.6153325167896164!512.0!-3.5280335545539856!practicalBN/practicalBN_24_lr0.001_l10.005_l20!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBN!25.0!15-10-07!0.0001!0.315984719991684!100.0!<class 'models.practical_BN_CNN.PracticalBNCNN'>!True!!practicalBN/results.txt!0.001!5.0!16.0!0.005!!0.6778562553616752!PracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.1)#    (2): ReLU()#    (3): Flatten()#    (4): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.2)#    (8): ReLU()#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3345955713442997!!!0.2!0.09229115802804476!naturalscene!!!0.632844717813!-3.5623180235133454!512.0!-3.580488532781601!practicalBN/practicalBN_25_lr0.001_l10.005_l20.0001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBN!26.0!15-10-07!0.0!0.3175806581974029!100.0!<class 'models.practical_BN_CNN.PracticalBNCNN'>!True!!practicalBN/results.txt!0.001!5.0!16.0!0.0005!!0.694688355572494!PracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.1)#    (2): ReLU()#    (3): Flatten()#    (4): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.2)#    (8): ReLU()#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3508234117861417!!!0.2!0.11215640733651062!naturalscene!!!0.5772598529443663!-3.6576475584668815!512.0!-3.612944662570954!practicalBN/practicalBN_26_lr0.001_l10.0005_l20!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBN!27.0!15-10-07!0.0001!0.3085454106330872!100.0!<class 'models.practical_BN_CNN.PracticalBNCNN'>!True!!practicalBN/results.txt!0.001!5.0!16.0!0.0005!!0.6925950528785817!PracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.1)#    (2): ReLU()#    (3): Flatten()#    (4): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.2)#    (8): ReLU()#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3406547586510713!!!0.2!0.09404537822434952!naturalscene!!!0.6618303855039236!-3.4438435585430485!512.0!-3.5572416186332703!practicalBN/practicalBN_27_lr0.001_l10.0005_l20.0001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBN!2.0!15-10-07!0.0!0.2841124773025513!100.0!<class 'models.practical_BN_CNN.PracticalBNCNN'>!True!!practicalBN/results.txt!0.01!5.0!0.0!0.0005!!0.687284902202115!PracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.15)#    (2): ReLU()#    (3): Flatten()#    (4): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.3)#    (8): ReLU()#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3778144794205349!!!0.3!0.11749021866265978!naturalscene!!!0.7069027459936071!-3.1998587713701867!512.0!62.65524855256081!practicalBN/practicalBN_2_lr0.01_l10.0005_l20!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBN!3.0!15-10-07!0.0001!0.2718633502721787!100.0!<class 'models.practical_BN_CNN.PracticalBNCNN'>!True!!practicalBN/results.txt!0.01!5.0!0.0!0.0005!!0.6877920063715104!PracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.15)#    (2): ReLU()#    (3): Flatten()#    (4): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.3)#    (8): ReLU()#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3738180029917666!!!0.3!0.1191103387661401!naturalscene!!!0.6795132180300697!-3.037006218598799!512.0!-3.0741230845451355!practicalBN/practicalBN_3_lr0.01_l10.0005_l20.0001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBN!4.0!15-10-07!0.0!0.3024255156517029!100.0!<class 'models.practical_BN_CNN.PracticalBNCNN'>!True!!practicalBN/results.txt!0.005!5.0!0.0!0.005!!0.6854514356253707!PracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.15)#    (2): ReLU()#    (3): Flatten()#    (4): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.3)#    (8): ReLU()#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3434997789388209!!!0.3!0.08518930214877225!naturalscene!!!0.6361638691546145!-3.4642311404733097!512.0!1024.1656346321106!practicalBN/practicalBN_4_lr0.005_l10.005_l20!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBN!5.0!15-10-07!0.0001!0.28151117265224457!100.0!<class 'models.practical_BN_CNN.PracticalBNCNN'>!True!!practicalBN/results.txt!0.005!5.0!0.0!0.005!!0.6893738003983042!PracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.15)#    (2): ReLU()#    (3): Flatten()#    (4): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.3)#    (8): ReLU()#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3550938868003021!!!0.3!0.10821285291457984!naturalscene!!!0.6621336060665363!-3.1811749494633164!512.0!-3.173095107078552!practicalBN/practicalBN_5_lr0.005_l10.005_l20.0001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBN!6.0!15-10-07!0.0!0.30065534114837644!100.0!<class 'models.practical_BN_CNN.PracticalBNCNN'>!True!!practicalBN/results.txt!0.005!5.0!0.0!0.0005!!0.6912836274784251!PracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.15)#    (2): ReLU()#    (3): Flatten()#    (4): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.3)#    (8): ReLU()#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3389664554433076!!!0.3!0.08742929079059268!naturalscene!!!0.6211728164056518!-3.4742746759503853!512.0!339.5256646871567!practicalBN/practicalBN_6_lr0.005_l10.0005_l20!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBN!7.0!15-10-07!0.0001!0.283785405755043!100.0!<class 'models.practical_BN_CNN.PracticalBNCNN'>!True!!practicalBN/results.txt!0.005!5.0!0.0!0.0005!!0.7018268646250906!PracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.15)#    (2): ReLU()#    (3): Flatten()#    (4): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.3)#    (8): ReLU()#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3618056244900158!!!0.3!0.09090319141856057!naturalscene!!!0.6537761508139279!-3.170779733276655!512.0!-3.2489500045776367!practicalBN/practicalBN_7_lr0.005_l10.0005_l20.0001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBN!8.0!15-10-07!0.0!0.3093410789966583!100.0!<class 'models.practical_BN_CNN.PracticalBNCNN'>!True!!practicalBN/results.txt!0.001!5.0!0.0!0.005!!0.6849733908880627!PracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.15)#    (2): ReLU()#    (3): Flatten()#    (4): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.3)#    (8): ReLU()#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3526757046290224!!!0.3!0.11768664628895005!naturalscene!!!0.63806539296818!-3.437452763184164!512.0!-3.3959352374076843!practicalBN/practicalBN_8_lr0.001_l10.005_l20!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBN!9.0!15-10-07!0.0001!0.30676659345626833!100.0!<class 'models.practical_BN_CNN.PracticalBNCNN'>!True!!practicalBN/results.txt!0.001!5.0!0.0!0.005!!0.6855916576881943!PracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.15)#    (2): ReLU()#    (3): Flatten()#    (4): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.3)#    (8): ReLU()#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3473857097010889!!!0.3!0.10376116584511544!naturalscene!!!0.6309033452104388!-3.4726057863523163!512.0!-3.474092453718185!practicalBN/practicalBN_9_lr0.001_l10.005_l20.0001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!0.0!15-10-07!0.01!0.2497144639492035!70.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>!True!!absbnbncnn/results.txt!0.006999999999999999!!0.0!0.0001!True!0.6261888574867281!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.5076070006540754!all!!0.1!0.15985404080937568!naturalscene!!!0.7110817169266024!-2.570293073201072!512.0!-2.538542398444406!absbnbncnn/absbnbncnn_0_lr0.007_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!1.0!15-10-07!0.001!0.26688985526561737!70.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>!True!!absbnbncnn/results.txt!0.006999999999999999!!0.0!0.0001!False!0.6655011314077398!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.44278308472579975!all!!0.05!0.12920503597599126!naturalscene!!!0.6781500589026531!-3.0275785338644887!512.0!-3.0088018123478832!absbnbncnn/absbnbncnn_1_lr0.007_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!2.0!15-10-07!0.01!0.26781385242938993!70.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>!True!!absbnbncnn/results.txt!0.005!!0.0!0.0001!False!0.6730867759339187!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4667796208381778!all!!0.05!0.17888797140759222!naturalscene!!!0.7173521194115184!-2.7504171603225838!512.0!-2.8924550880765314!absbnbncnn/absbnbncnn_2_lr0.005_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!3.0!15-10-07!0.001!0.27961982786655426!70.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>!True!!absbnbncnn/results.txt!0.005!!0.0!0.0001!False!0.6947497736874262!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4137214439871403!all!!0.05!0.13102536424978076!naturalscene!!!0.6716218511989436!-3.124445406020497!512.0!-3.0448129230080667!absbnbncnn/absbnbncnn_3_lr0.005_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!4.0!15-10-07!0.01!0.28224252462387084!70.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>!True!!absbnbncnn/results.txt!0.001!!0.0!0.0001!False!0.6919474519410833!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3882256948186323!all!!0.05!0.11677596048139292!naturalscene!!!0.6134756313922203!-2.9527304428734933!512.0!-3.2771034858687926!absbnbncnn/absbnbncnn_4_lr0.001_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!5.0!15-10-07!0.001!0.31600584387779235!70.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>!True!!absbnbncnn/results.txt!0.001!!0.0!0.0001!False!0.6963413605030192!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3640317668085644!all!!0.05!0.13737832899718766!naturalscene!!!0.6385185196442472!-3.5684824263168498!512.0!-3.3815151115250046!absbnbncnn/absbnbncnn_5_lr0.001_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!6.0!15-10-07!0.01!0.2937103986740112!70.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>!True!!absbnbncnn/results.txt!0.0001!!0.0!0.0001!False!0.7074335759854767!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3496043021816511!all!!0.05!0.11736504112999124!naturalscene!!!0.6360220582946849!-3.1240382119001846!512.0!-3.084440179145531!absbnbncnn/absbnbncnn_6_lr0.0001_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!7.0!15-10-07!0.001!0.32950723767280576!70.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>!True!!absbnbncnn/results.txt!0.0001!!0.0!0.0001!False!0.6259569883538799!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3287564572109036!all!!0.05!0.08368825395644718!naturalscene!!!0.5910684043972019!-3.701337313939723!512.0!-3.534850699903473!absbnbncnn/absbnbncnn_7_lr0.0001_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!10.0!15-10-07!0.01!0.5300372!70.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>!True!!absbnbncnn/results.txt!0.005!!8.0!0.0001!True!0.6590708255181851!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4788087478720568!all!!0.1!0.15072295952202866!naturalscene!!!0.7373222837484534!-2.8617508370951827!512.0!-2.9361204431588703!absbnbncnn/absbnbncnn_10_lr0.005_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!11.0!15-10-07!0.001!0.56268996!70.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>!True!!absbnbncnn/results.txt!0.005!!8.0!0.0001!True!0.6879898940482565!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4157035225242968!all!!0.1!0.14955241961718901!naturalscene!!!0.669653464023076!-3.2118423833746355!512.0!-3.0855735339737294!absbnbncnn/absbnbncnn_11_lr0.005_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!12.0!15-10-07!0.01!0.58965284!70.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>!True!!absbnbncnn/results.txt!0.001!!8.0!0.0001!True!0.6962123844780381!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4062958337861913!all!!0.1!0.15935075297425533!naturalscene!!!0.6358658085115482!-3.286055179383061!512.0!-3.464338169036637!absbnbncnn/absbnbncnn_12_lr0.001_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!13.0!15-10-07!0.001!0.6480415!70.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>!True!!absbnbncnn/results.txt!0.001!!8.0!0.0001!True!0.6858253689551796!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3698266131704356!all!!0.1!0.11911440580034882!naturalscene!!!0.6377029299284368!-3.774307971086977!512.0!-3.5173726840039308!absbnbncnn/absbnbncnn_13_lr0.001_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!14.0!15-10-07!0.01!0.6670744000000001!70.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>!True!!absbnbncnn/results.txt!0.0001!!8.0!0.0001!True!0.6006706299331995!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3300911144634246!all!!0.1!0.09286876865871488!naturalscene!!!0.5829623864115981!-3.851634543765544!512.0!-3.5391908636520384!absbnbncnn/absbnbncnn_14_lr0.0001_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!15.0!15-10-07!0.001!0.67882204!70.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>!True!!absbnbncnn/results.txt!0.0001!!8.0!0.0001!True!0.6074030830140267!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3378378738337928!all!!0.1!0.08844267177998773!naturalscene!!!0.6152197699248784!-3.840839554281797!512.0!-3.638011361157624!absbnbncnn/absbnbncnn_15_lr0.0001_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!8.0!15-10-07!0.01!0.5199305000000001!70.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>!True!!absbnbncnn/results.txt!0.006999999999999999!!8.0!0.0001!True!0.6561921636912819!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4748994449445949!all!!0.1!0.13730672328826687!naturalscene!!!0.7668672006629156!-2.8541912910265803!512.0!-2.7012631290999707!absbnbncnn/absbnbncnn_8_lr0.007_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!9.0!15-10-07!0.001!0.51245165!70.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>!True!!absbnbncnn/results.txt!0.006999999999999999!!8.0!0.0001!True!0.6491579656719004!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.5046372366514995!all!!0.1!0.12614931302493654!naturalscene!!!0.7595959285324729!-2.892245186220287!512.0!-2.862381058761457!absbnbncnn/absbnbncnn_9_lr0.007_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnngauss1d!0.0!15-10-07!0.01!0.26855233013629914!70.0!<class 'models.Gauss1d_BN_CNN.Gauss1dBNCNN'>!True!!bncnngauss1d/results.txt!0.005!!0.0!0.0001!True!0.6800081367881279!Gauss1dBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise1d(shape=[10368], noise=0.05, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise1d(shape=[5408], noise=0.05, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.40019566137446905!all!!0.05!0.11658724884373076!naturalscene!!!0.6127152458638788!-2.949111358792174!512.0!-2.8153530447925736!bncnngauss1d/bncnngauss1d_0_noise0.05_lr0.005!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnngauss1d!1.0!15-10-07!0.01!0.3409180045127869!70.0!<class 'models.Gauss1d_BN_CNN.Gauss1dBNCNN'>!True!!bncnngauss1d/results.txt!0.0001!!0.0!0.0001!True!0.593761681951854!Gauss1dBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise1d(shape=[10368], noise=0.05, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise1d(shape=[5408], noise=0.05, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.336402930233674!all!!0.05!0.07641133462582349!naturalscene!!!0.5632286632834904!-3.9078477802679368!512.0!-3.6182117038733845!bncnngauss1d/bncnngauss1d_1_noise0.05_lr0.0001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnngauss1d!2.0!15-10-07!0.01!0.26324422657489777!70.0!<class 'models.Gauss1d_BN_CNN.Gauss1dBNCNN'>!True!!bncnngauss1d/results.txt!0.005!!0.0!0.0001!True!0.673185263310823!Gauss1dBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise1d(shape=[10368], noise=0.1, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise1d(shape=[5408], noise=0.1, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.42992798339415134!all!!0.1!0.12736412721815366!naturalscene!!!0.6931567867482241!-2.8180433760760955!512.0!-2.9089029677452345!bncnngauss1d/bncnngauss1d_2_noise0.1_lr0.005!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnngauss1d!3.0!15-10-07!0.01!0.3425509572029114!70.0!<class 'models.Gauss1d_BN_CNN.Gauss1dBNCNN'>!True!!bncnngauss1d/results.txt!0.0001!!0.0!0.0001!True!0.6231869459927558!Gauss1dBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise1d(shape=[10368], noise=0.1, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise1d(shape=[5408], noise=0.1, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3341561618047896!all!!0.1!0.09622687982170693!naturalscene!!!0.5949463674966462!-3.816656747734565!512.0!-3.5875957698008283!bncnngauss1d/bncnngauss1d_3_noise0.1_lr0.0001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnngauss1d!4.0!15-10-07!0.01!0.2673909604549408!70.0!<class 'models.Gauss1d_BN_CNN.Gauss1dBNCNN'>!True!!bncnngauss1d/results.txt!0.005!!0.0!0.0001!True!0.674584897407893!Gauss1dBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise1d(shape=[10368], noise=0.15, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise1d(shape=[5408], noise=0.15, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4070188897974456!all!!0.15!0.1048103369893945!naturalscene!!!0.6969971004788692!-2.7739133364654416!512.0!-3.1057264957416924!bncnngauss1d/bncnngauss1d_4_noise0.15_lr0.005!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnngauss1d!5.0!15-10-07!0.01!0.3390252411365509!70.0!<class 'models.Gauss1d_BN_CNN.Gauss1dBNCNN'>!True!!bncnngauss1d/results.txt!0.0001!!0.0!0.0001!True!0.6567614814226487!Gauss1dBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise1d(shape=[10368], noise=0.15, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise1d(shape=[5408], noise=0.15, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.34722194703459097!all!!0.15!0.08103726131937168!naturalscene!!!0.6108181397640104!-3.7548446809903884!512.0!-3.5174608813795203!bncnngauss1d/bncnngauss1d_5_noise0.15_lr0.0001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnngauss1d!6.0!15-10-07!0.01!0.2597049832344055!70.0!<class 'models.Gauss1d_BN_CNN.Gauss1dBNCNN'>!True!!bncnngauss1d/results.txt!0.005!!0.0!0.0001!True!0.6648567617756903!Gauss1dBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise1d(shape=[10368], noise=0.2, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise1d(shape=[5408], noise=0.2, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4019501409909646!all!!0.2!0.13699148283149915!naturalscene!!!0.6495282208585217!-2.772476231890027!512.0!-2.8024275733441755!bncnngauss1d/bncnngauss1d_6_noise0.2_lr0.005!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnngauss1d!7.0!15-10-07!0.01!0.3328340291976929!70.0!<class 'models.Gauss1d_BN_CNN.Gauss1dBNCNN'>!True!!bncnngauss1d/results.txt!0.0001!!0.0!0.0001!True!0.6668818954368734!Gauss1dBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise1d(shape=[10368], noise=0.2, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise1d(shape=[5408], noise=0.2, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.32596760177471984!all!!0.2!0.1031907979940346!naturalscene!!!0.5919177313239757!-3.6450856247998287!512.0!-3.586177775900069!bncnngauss1d/bncnngauss1d_7_noise0.2_lr0.0001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnngauss1d!8.0!15-10-07!0.01!0.26488769352436065!70.0!<class 'models.Gauss1d_BN_CNN.Gauss1dBNCNN'>!True!!bncnngauss1d/results.txt!0.005!!0.0!0.0001!True!0.6764185379567971!Gauss1dBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise1d(shape=[10368], noise=0.3, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise1d(shape=[5408], noise=0.3, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4089014074411214!all!!0.3!0.14665955708849054!naturalscene!!!0.6787415913615535!-2.712280266604992!512.0!-2.7764782637696044!bncnngauss1d/bncnngauss1d_8_noise0.3_lr0.005!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnngauss1d!9.0!15-10-07!0.01!0.32491893172264097!70.0!<class 'models.Gauss1d_BN_CNN.Gauss1dBNCNN'>!True!!bncnngauss1d/results.txt!0.0001!!0.0!0.0001!True!0.6553494424311138!Gauss1dBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise1d(shape=[10368], noise=0.3, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise1d(shape=[5408], noise=0.3, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3311840715062233!all!!0.3!0.07960613795300871!naturalscene!!!0.5892192596295875!-3.4468539983798294!512.0!-3.4819694161851658!bncnngauss1d/bncnngauss1d_9_noise0.3_lr0.0001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
abssssscnn!0.0! 15-10-07!0.01!!70.0!<class 'models.AbsSS_SS_CNN.AbsSSSSCNN'>! True!! abssssscnn/results.txt!0.006999999999999999!!0.0!0.0001! False!!AbsSSSSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): AbsScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): AbsScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): AbsScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!! all!!0.1!! naturalscene!!!!inf!512.0!! abssssscnn/abssssscnn_0_adapt_gaussFalse_lr0.007_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
abssssscnn!10.0! 15-10-07!0.01!!70.0!<class 'models.AbsSS_SS_CNN.AbsSSSSCNN'>! True!! abssssscnn/results.txt!0.005!!0.0!0.0001! True!!AbsSSSSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): AbsScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): AbsScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): AbsScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!! all!!0.1!! naturalscene!!!!inf!512.0!! abssssscnn/abssssscnn_10_adapt_gaussTrue_lr0.005_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
abssssscnn!11.0! 15-10-07!0.001!!70.0!<class 'models.AbsSS_SS_CNN.AbsSSSSCNN'>! True!! abssssscnn/results.txt!0.005!!0.0!0.0001! True!!AbsSSSSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): AbsScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): AbsScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): AbsScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!! all!!0.1!! naturalscene!!!!inf!512.0!! abssssscnn/abssssscnn_11_adapt_gaussTrue_lr0.005_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
abssssscnn!12.0! 15-10-07!0.01!0.2521147727966309!70.0!<class 'models.AbsSS_SS_CNN.AbsSSSSCNN'>! True!! abssssscnn/results.txt!0.001!!0.0!0.0001! True!0.3262508026495293!AbsSSSSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): AbsScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): AbsScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): AbsScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!! all!!0.1!! naturalscene!!!!-1.5980673357844353!512.0!-0.2577291523593885! abssssscnn/abssssscnn_12_adapt_gaussTrue_lr0.001_l20.01!0.4285164296211374!0.2735919272886009!0.2951525064252313!0.4297888652564635!0.2042042846562135!!!!!!!!!!!!!!!!!!!!!!!!
abssssscnn!13.0! 15-10-07!0.001!0.6239053010940552!70.0!<class 'models.AbsSS_SS_CNN.AbsSSSSCNN'>! True!! abssssscnn/results.txt!0.001!!0.0!0.0001! True!0.64231030990664!AbsSSSSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): AbsScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): AbsScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): AbsScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.4012684959821291! all!!0.1!0.1563532662526836! naturalscene!!!0.6615351109274228!-3.6046309334480213!512.0!-3.4130257585511563! abssssscnn/abssssscnn_13_adapt_gaussTrue_lr0.001_l20.001!0.6837020715891214!0.5390272686339691!0.5465940828087619!0.7045281306540286!0.7376999958473189!!!!!!!!!!!!!!!!!!!!!!!!
abssssscnn!14.0! 15-10-07!0.01!0.5458141565322876!70.0!<class 'models.AbsSS_SS_CNN.AbsSSSSCNN'>! True!! abssssscnn/results.txt!0.0001!!0.0!0.0001! True!0.6974064654416205!AbsSSSSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): AbsScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): AbsScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): AbsScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.3650609094133168! all!!0.1!0.12175501752966415! naturalscene!!!0.6133262485246846!-3.200534659273484!512.0!-2.9906226499333566! abssssscnn/abssssscnn_14_adapt_gaussTrue_lr0.0001_l20.01!0.7178624578570959!0.6300955546763571!0.6227260708445579!0.7408515830782676!0.7754966607518241!!!!!!!!!!!!!!!!!!!!!!!!
abssssscnn!15.0! 15-10-07!0.001!0.589729905128479!70.0!<class 'models.AbsSS_SS_CNN.AbsSSSSCNN'>! True!! abssssscnn/results.txt!0.0001!!0.0!0.0001! True!0.6893205941464879!AbsSSSSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): AbsScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): AbsScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): AbsScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.3593884354963333! all!!0.1!0.1068350256128055! naturalscene!!!0.6114296665104111!-3.5794038704257924!512.0!-3.354573094879015! abssssscnn/abssssscnn_15_adapt_gaussTrue_lr0.0001_l20.001!0.7278484064830406!0.6137179150628269!0.6030066111103685!0.7526574079567043!0.7493726301194992!!!!!!!!!!!!!!!!!!!!!!!!
abssssscnn!1.0! 15-10-07!0.001!!70.0!<class 'models.AbsSS_SS_CNN.AbsSSSSCNN'>! True!! abssssscnn/results.txt!0.006999999999999999!!0.0!0.0001! False!!AbsSSSSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): AbsScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): AbsScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): AbsScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!! all!!0.1!! naturalscene!!!!inf!512.0!! abssssscnn/abssssscnn_1_adapt_gaussFalse_lr0.007_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
abssssscnn!2.0! 15-10-07!0.01!!70.0!<class 'models.AbsSS_SS_CNN.AbsSSSSCNN'>! True!! abssssscnn/results.txt!0.005!!0.0!0.0001! False!!AbsSSSSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): AbsScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): AbsScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): AbsScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!! all!!0.1!! naturalscene!!!!inf!512.0!! abssssscnn/abssssscnn_2_adapt_gaussFalse_lr0.005_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
abssssscnn!3.0! 15-10-07!0.001!!70.0!<class 'models.AbsSS_SS_CNN.AbsSSSSCNN'>! True!! abssssscnn/results.txt!0.005!!0.0!0.0001! False!!AbsSSSSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): AbsScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): AbsScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): AbsScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!! all!!0.1!! naturalscene!!!!inf!512.0!! abssssscnn/abssssscnn_3_adapt_gaussFalse_lr0.005_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
abssssscnn!4.0! 15-10-07!0.01!0.35926204919815063!70.0!<class 'models.AbsSS_SS_CNN.AbsSSSSCNN'>! True!! abssssscnn/results.txt!0.001!!0.0!0.0001! False!0.4191922856221861!AbsSSSSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): AbsScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): AbsScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): AbsScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!! all!!0.1!! naturalscene!!!!-1.6558088123978174!512.0!-1.733473703472555! abssssscnn/abssssscnn_4_adapt_gaussFalse_lr0.001_l20.01!0.4140045369121349!0.30675111770148106!0.3584699166637293!0.4362648638165606!0.5804709930170247!!!!!!!!!!!!!!!!!!!!!!!!
abssssscnn!5.0! 15-10-07!0.001!0.2778436243534088!70.0!<class 'models.AbsSS_SS_CNN.AbsSSSSCNN'>! True!! abssssscnn/results.txt!0.001!!0.0!0.0001! False!0.28281645428642305!AbsSSSSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): AbsScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): AbsScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): AbsScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!! all!!0.1!! naturalscene!!!!-0.8857462897336288!512.0!-0.7972142270409677! abssssscnn/abssssscnn_5_adapt_gaussFalse_lr0.001_l20.001!0.31680190589406165!0.24294725512382825!0.2349308892026717!0.2485222143433643!0.3708800068681895!!!!!!!!!!!!!!!!!!!!!!!!
abssssscnn!6.0! 15-10-07!0.01!0.5331918597221375!70.0!<class 'models.AbsSS_SS_CNN.AbsSSSSCNN'>! True!! abssssscnn/results.txt!0.0001!!0.0!0.0001! False!0.6809301589421288!AbsSSSSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): AbsScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): AbsScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): AbsScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.4205859653606519! all!!0.1!0.13533432537020962! naturalscene!!!0.7270403632961839!-2.9153894896241166!512.0!-1.8457413950254704! abssssscnn/abssssscnn_6_adapt_gaussFalse_lr0.0001_l20.01!0.7334143459731959!0.5737664915831667!0.5976586613487476!0.7660406055008809!0.7337706903046527!!!!!!!!!!!!!!!!!!!!!!!!
abssssscnn!7.0! 15-10-07!0.001!0.6045269966125488!70.0!<class 'models.AbsSS_SS_CNN.AbsSSSSCNN'>! True!! abssssscnn/results.txt!0.0001!!0.0!0.0001! False!0.6923421581810129!AbsSSSSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): AbsScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): AbsScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): AbsScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.3531575368539798! all!!0.1!0.1031278280281618! naturalscene!!!0.6515425739850628!-3.5350551083796344!512.0!-3.331937988745267! abssssscnn/abssssscnn_7_adapt_gaussFalse_lr0.0001_l20.001!0.7172633641793125!0.6045293773017091!0.6233750362329867!0.7570072722833142!0.7595357409077418!!!!!!!!!!!!!!!!!!!!!!!!
abssssscnn!8.0! 15-10-07!0.01!!70.0!<class 'models.AbsSS_SS_CNN.AbsSSSSCNN'>! True!! abssssscnn/results.txt!0.006999999999999999!!0.0!0.0001! True!!AbsSSSSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): AbsScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): AbsScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): AbsScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!! all!!0.1!! naturalscene!!!!inf!512.0!! abssssscnn/abssssscnn_8_adapt_gaussTrue_lr0.007_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
abssssscnn!9.0! 15-10-07!0.001!!70.0!<class 'models.AbsSS_SS_CNN.AbsSSSSCNN'>! True!! abssssscnn/results.txt!0.006999999999999999!!0.0!0.0001! True!!AbsSSSSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): AbsScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): AbsScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): AbsScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!! all!!0.1!! naturalscene!!!!inf!512.0!! abssssscnn/abssssscnn_9_adapt_gaussTrue_lr0.007_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnadaptgaussmoment!0.0! 15-10-07!0.01!0.5163148045539856!100.0!<class 'models.BN_CNN.BNCNN'>! True!! bncnnadaptgaussmoment/results.txt!0.005!!0.0!0.0001! True!0.6636899814816308!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4244086584792191! all!!0.05!0.11949542903888236! naturalscene!!!0.6823604364767913!-2.9190249574310285!512.0!-2.7592675835876435! bncnnadaptgaussmoment/bncnnadaptgaussmoment_0_noise0.05_lr0.005!0.6867369463300732!0.5735530641927722!0.5908324029922906!0.7093841679926866!0.7579433259003319!!!!!!!!!!!!!!!!!!!!!!!!
bncnnadaptgaussmoment!1.0! 15-10-07!0.01!0.6966534852981567!100.0!<class 'models.BN_CNN.BNCNN'>! True!! bncnnadaptgaussmoment/results.txt!0.0001!!0.0!0.0001! True!0.6130140611515866!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.348593588082088! all!!0.05!0.09517608989248834! naturalscene!!!0.6198456348718747!-4.021526799842063!512.0!-3.7015837608705615! bncnnadaptgaussmoment/bncnnadaptgaussmoment_1_noise0.05_lr0.0001!0.6521796493875699!0.531268158102005!0.5147580874259229!0.7001724304266391!0.666691980415796!!!!!!!!!!!!!!!!!!!!!!!!
bncnnadaptgaussmoment!2.0! 15-10-07!0.01!0.5336384773254395!100.0!<class 'models.BN_CNN.BNCNN'>! True!! bncnnadaptgaussmoment/results.txt!0.005!!0.0!0.0001! True!0.6672147423218261!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4179942946474853! all!!0.1!0.1149863566665662! naturalscene!!!0.7369287446762265!-2.9073372823979886!512.0!-2.9398775498011678! bncnnadaptgaussmoment/bncnnadaptgaussmoment_2_noise0.1_lr0.005!0.693614660446572!0.5834552071955236!0.5822023301233986!0.7503745355291788!0.7264269783144572!!!!!!!!!!!!!!!!!!!!!!!!
bncnnadaptgaussmoment!3.0! 15-10-07!0.01!0.6894882917404175!100.0!<class 'models.BN_CNN.BNCNN'>! True!! bncnnadaptgaussmoment/results.txt!0.0001!!0.0!0.0001! True!0.6206195772506949!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.32069876180673285! all!!0.1!0.0909601783631672! naturalscene!!!0.5541380862161093!-3.902134709768166!512.0!-3.602140645698455! bncnnadaptgaussmoment/bncnnadaptgaussmoment_3_noise0.1_lr0.0001!0.6797352974992049!0.5250106600775871!0.5021225952450554!0.7044689573605039!0.6917603760711241!!!!!!!!!!!!!!!!!!!!!!!!
bncnnadaptgaussmoment!4.0! 15-10-07!0.01!0.5556086301803589!100.0!<class 'models.BN_CNN.BNCNN'>! True!! bncnnadaptgaussmoment/results.txt!0.005!!0.0!0.0001! True!0.6881793698901986!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.41211956749596457! all!!0.15!0.10628401708482213! naturalscene!!!0.6846749536811657!-2.9951556556005463!512.0!-3.2268812540060026! bncnnadaptgaussmoment/bncnnadaptgaussmoment_4_noise0.15_lr0.005!0.7160297073724202!0.5807440732900184!0.6072499809737189!0.7472124770769818!0.7896606107378535!!!!!!!!!!!!!!!!!!!!!!!!
bncnnadaptgaussmoment!5.0! 15-10-07!0.01!0.6799660921096802!100.0!<class 'models.BN_CNN.BNCNN'>! True!! bncnnadaptgaussmoment/results.txt!0.0001!!0.0!0.0001! True!0.6425085483648282!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.32724894416315153! all!!0.15!0.09523399157314544! naturalscene!!!0.5542168992900091!-3.866710861344144!512.0!-3.5455801026346307! bncnnadaptgaussmoment/bncnnadaptgaussmoment_5_noise0.15_lr0.0001!0.6889674929702624!0.4992951289811469!0.5552607441140425!0.7125126075183591!0.7565067682403301!!!!!!!!!!!!!!!!!!!!!!!!
bncnnadaptgaussmoment!6.0! 15-10-07!0.01!0.5343140363693237!100.0!<class 'models.BN_CNN.BNCNN'>! True!! bncnnadaptgaussmoment/results.txt!0.005!!0.0!0.0001! True!0.6799453625825057!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.2, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.2, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4076650152748606! all!!0.2!0.1091480242139081! naturalscene!!!0.7038785678358347!-3.020337135363848!512.0!-2.895426889932424! bncnnadaptgaussmoment/bncnnadaptgaussmoment_6_noise0.2_lr0.005!0.6923957647091972!0.5974863737606766!0.5978095806423737!0.7412620355737698!0.7707730582265117!!!!!!!!!!!!!!!!!!!!!!!!
bncnnadaptgaussmoment!7.0! 15-10-07!0.01!0.6776602268218994!100.0!<class 'models.BN_CNN.BNCNN'>! True!! bncnnadaptgaussmoment/results.txt!0.0001!!0.0!0.0001! True!0.6425768876324207!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.2, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.2, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3218730735487069! all!!0.2!0.0887388165522576! naturalscene!!!0.5697688443974828!-3.792519759987994!512.0!-3.6281475025680265! bncnnadaptgaussmoment/bncnnadaptgaussmoment_7_noise0.2_lr0.0001!0.6847859764291627!0.5084175571680607!0.5393629104358226!0.7395351695714211!0.7407828245576364!!!!!!!!!!!!!!!!!!!!!!!!
bncnnadaptgaussmoment!8.0! 15-10-07!0.01!0.5186952948570251!100.0!<class 'models.BN_CNN.BNCNN'>! True!! bncnnadaptgaussmoment/results.txt!0.005!!0.0!0.0001! True!0.6719030217020915!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.3, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.3, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4314777732101694! all!!0.3!0.13198312120879616! naturalscene!!!0.7031764934252922!-2.8817697358886583!512.0!-2.693940707707952! bncnnadaptgaussmoment/bncnnadaptgaussmoment_8_noise0.3_lr0.005!0.6841591602459204!0.5790199026416631!0.6134783201102663!0.7160681527612245!0.7667895727513833!!!!!!!!!!!!!!!!!!!!!!!!
bncnnadaptgaussmoment!9.0! 15-10-07!0.01!0.6626839637756348!100.0!<class 'models.BN_CNN.BNCNN'>! True!! bncnnadaptgaussmoment/results.txt!0.0001!!0.0!0.0001! True!0.6613928750541888!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.3, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.3, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3238904762173282! all!!0.3!0.08318686032793228! naturalscene!!!0.568176654912537!-3.6729870383735874!512.0!-3.5433215655211825! bncnnadaptgaussmoment/bncnnadaptgaussmoment_9_noise0.3_lr0.0001!0.6954889018486833!0.5836716501070762!0.543818791413211!0.7237557922766997!0.7602292396252741!!!!!!!!!!!!!!!!!!!!!!!!
dalesBN!0.0!15-10-07!0.001!0.23939927220344545!75.0!<class 'models.Dales_BN_CNN.DalesBNCNN'>!!! dalesBN/results.txt!0.0015!5.0!!0.0001!!0.6553491544279936!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.05)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.536017800537315!!!0.05!0.2008004260876807!!!!0.706252788970586!-2.53566882544693!512.0!-1.8562015816569328! dalesBN/dalesBN_0_lr0.0015_l20.001!0.7101128802385399!0.4616910677353285!0.5986312523525981!0.7381636131574714!0.7681469586560297!!!!!!!!!!!!!!!!!!!!!!!!
dalesBN!0.0!15-10-07!0.001!0.21597045958042144!100.0!<class 'models.Dales_BN_CNN.DalesBNCNN'>!!! dalesBN/results.txt!0.01!5.0!!1e-06!!0.5664401073808722!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.1)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.5037462466196672!!!0.1!0.16142743651523886!!!!0.6926137806976838!-2.248492957087037!512.0!-1.7096303353706996! dalesBN/dalesBN_0_lr0.01_l11e-06_l20.001!0.6386784731245109!0.3224488816091381!0.4569162682172093!0.6948048327953827!0.7193520811581202!!!!!!!!!!!!!!!!!!!!!!!!
dalesBN!10.0!15-10-07!0.001!0.18031321465969088!100.0!<class 'models.Dales_BN_CNN.DalesBNCNN'>!!! dalesBN/results.txt!0.0001!5.0!!0.0001!!0.4754158124032454!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.1)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!!!!0.1!!!!!!-1.8813788060631071!512.0!-1.094760184797148! dalesBN/dalesBN_10_lr0.0001_l10.0001_l20.001!0.5136676198485788!0.3885144196213609!0.4726701203292977!0.523075996955308!0.4791509052616814!!!!!!!!!!!!!!!!!!!!!!!!
dalesBN!11.0!15-10-07!0.01!0.14133649319410324!100.0!<class 'models.Dales_BN_CNN.DalesBNCNN'>!!! dalesBN/results.txt!0.0001!5.0!!0.0001!!0.3420038959326095!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.1)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!!!!0.1!!!!!!-1.0306432443954374!512.0!1.5579328665820258! dalesBN/dalesBN_11_lr0.0001_l10.0001_l20.01!0.3895699724069743!0.2877398803137901!0.3358912783080601!0.4565538653756814!0.2402644832585416!!!!!!!!!!!!!!!!!!!!!!!!
dalesBN!1.0!15-10-07!0.0001!0.2437137007713317!75.0!<class 'models.Dales_BN_CNN.DalesBNCNN'>!!! dalesBN/results.txt!0.0015!5.0!!0.0001!!0.6423410987975121!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.05)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.3367071754238915!!!0.05!0.14770936237725235!!!!0.5545379372307886!-2.659782222043695!512.0!-1.8407308086752887! dalesBN/dalesBN_1_lr0.0015_l20.0001!0.6769439192248928!0.5206372809042712!0.5545180750374797!0.71267677085417!0.7469294479667471!!!!!!!!!!!!!!!!!!!!!!!!
dalesBN!1.0!15-10-07!0.01!0.19638268053531646!100.0!<class 'models.Dales_BN_CNN.DalesBNCNN'>!!! dalesBN/results.txt!0.01!5.0!!1e-06!!0.5073798406143721!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.1)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.4931025204052947!!!0.1!0.16444271891197146!!!!0.7674136017716225!-1.6175082364692266!512.0!-1.3044030616680782! dalesBN/dalesBN_1_lr0.01_l11e-06_l20.01!0.5698053147276796!0.2956728217190703!0.411711787522334!0.5917248398676929!0.667984439235084!!!!!!!!!!!!!!!!!!!!!!!!
dalesBN!2.0!15-10-07!0.001!0.2444439053535461!75.0!<class 'models.Dales_BN_CNN.DalesBNCNN'>!!! dalesBN/results.txt!0.001!5.0!!0.0001!!0.6611699784804765!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.05)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.4123435818674584!!!0.05!0.13251495527042378!!!!0.6121062221424902!-2.561983530753788!512.0!-1.8872310146689413! dalesBN/dalesBN_2_lr0.001_l20.001!0.7162760022564354!0.4596968889090902!0.6075313221866978!0.7427112196572478!0.7796344593929112!!!!!!!!!!!!!!!!!!!!!!!!
dalesBN!2.0!15-10-07!0.001!0.20964934229850768!100.0!<class 'models.Dales_BN_CNN.DalesBNCNN'>!!! dalesBN/results.txt!0.01!5.0!!0.0001!!0.546001752764785!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.1)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.5152760202982427!!!0.1!0.1970072274993088!!!!0.7293154256008713!-2.0014299126978248!512.0!-1.6226669276754062! dalesBN/dalesBN_2_lr0.01_l10.0001_l20.001!0.6111310217727145!0.3066228228427649!0.4348926561394917!0.6719165644309498!0.7054456986380044!!!!!!!!!!!!!!!!!!!!!!!!
dalesBN!3.0!15-10-07!0.0001!0.2428196758031845!75.0!<class 'models.Dales_BN_CNN.DalesBNCNN'>!!! dalesBN/results.txt!0.001!5.0!!0.0001!!0.6505097612746222!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.05)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.408035274377193!!!0.05!0.13008064092300334!!!!0.6347091893836578!-2.7912109986869105!512.0!-1.7282030209898949! dalesBN/dalesBN_3_lr0.001_l20.0001!0.7076293413401454!0.4805259476047515!0.5187316811344811!0.7470987296633873!0.7985631066303457!!!!!!!!!!!!!!!!!!!!!!!!
dalesBN!3.0!15-10-07!0.01!0.18941788226366044!100.0!<class 'models.Dales_BN_CNN.DalesBNCNN'>!!! dalesBN/results.txt!0.01!5.0!!0.0001!!0.4754476438359682!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.1)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!!!!0.1!!!!!!-1.2741660933409418!512.0!-1.2109422708551092! dalesBN/dalesBN_3_lr0.01_l10.0001_l20.01!0.4380615349270281!0.28544349458787155!0.3808863186196615!0.6004490832785835!0.6723977877666966!!!!!!!!!!!!!!!!!!!!!!!!
dalesBN!4.0!15-10-07!0.001!0.2174628019332885!75.0!<class 'models.Dales_BN_CNN.DalesBNCNN'>!!! dalesBN/results.txt!0.00015!5.0!!0.0001!!0.5704883873086106!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.05)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.4187293226528149!!!0.05!0.16082755467560506!!!!0.6626282176377689!-2.157942206117004!512.0!-1.4941615909337995! dalesBN/dalesBN_4_lr0.00015_l20.001!0.572805133572844!0.458337811654379!0.5302105899873113!0.6457377649770246!0.6453506363514944!!!!!!!!!!!!!!!!!!!!!!!!
dalesBN!4.0!15-10-07!0.001!0.2384668380022049!100.0!<class 'models.Dales_BN_CNN.DalesBNCNN'>!!! dalesBN/results.txt!0.001!5.0!!1e-06!!0.6338322712152197!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.1)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.5051957054575328!!!0.1!0.17819310618459847!!!!0.6308221123668667!-2.544034489193318!512.0!-1.9632433106501896! dalesBN/dalesBN_4_lr0.001_l11e-06_l20.001!0.6869191505787671!0.4302265999480853!0.5621326425592864!0.7233601105598312!0.7665228524301283!!!!!!!!!!!!!!!!!!!!!!!!
dalesBN!5.0!15-10-07!0.0001!0.2255107492208481!75.0!<class 'models.Dales_BN_CNN.DalesBNCNN'>!!! dalesBN/results.txt!0.00015!5.0!!0.0001!!0.59744753953388!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.05)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.4800566945223682!!!0.05!0.15287886525670322!!!!0.7305757377099934!-2.26807334475208!512.0!-1.2958114519715311! dalesBN/dalesBN_5_lr0.00015_l20.0001!0.6148647616225029!0.4772748163282593!0.5184345559632414!0.6630341047583751!0.7136294589970212!!!!!!!!!!!!!!!!!!!!!!!!
dalesBN!5.0!15-10-07!0.01!0.20276500284671786!100.0!<class 'models.Dales_BN_CNN.DalesBNCNN'>!!! dalesBN/results.txt!0.001!5.0!!1e-06!!0.5251129183379245!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.1)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.4588504603972948!!!0.1!0.2571510972291186!!!!0.7142973590560107!-1.873834209481937!512.0!-1.4482509021957717! dalesBN/dalesBN_5_lr0.001_l11e-06_l20.01!0.59534139122392!0.2972054113469602!0.4289745746156191!0.6272512441613929!0.6767919703417302!!!!!!!!!!!!!!!!!!!!!!!!
dalesBN!6.0!15-10-07!0.001!0.2378546088933945!100.0!<class 'models.Dales_BN_CNN.DalesBNCNN'>!!! dalesBN/results.txt!0.001!5.0!!0.0001!!0.6382716259160331!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.1)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.6320526938016989!!!0.1!0.2249725085910228!!!!0.7913873419912236!-2.4083650150099154!512.0!-1.9566212495168047! dalesBN/dalesBN_6_lr0.001_l10.0001_l20.001!0.68971907117256!0.453648922280576!0.5551143154999144!0.7320362151619727!0.7608396054651427!!!!!!!!!!!!!!!!!!!!!!!!
dalesBN!7.0!15-10-07!0.01!0.20221632868051528!100.0!<class 'models.Dales_BN_CNN.DalesBNCNN'>!!! dalesBN/results.txt!0.001!5.0!!0.0001!!0.5340085922626147!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.1)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.4677747419446684!!!0.1!0.20893631904721327!!!!0.6719823126081939!-1.6098646420453275!512.0!-1.4216006497542064! dalesBN/dalesBN_7_lr0.001_l10.0001_l20.01!0.5945316847391334!0.3072413704699961!0.4128601803593953!0.6414200806542257!0.7139896450903226!!!!!!!!!!!!!!!!!!!!!!!!
dalesBN!8.0!15-10-07!0.001!0.1947058379650116!100.0!<class 'models.Dales_BN_CNN.DalesBNCNN'>!!! dalesBN/results.txt!0.0001!5.0!!1e-06!!0.5256995979378558!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.1)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.5118597470834515!!!0.1!0.20532745817724526!!!!0.6701022365843365!-2.088995810898936!512.0!-1.1530448558429878! dalesBN/dalesBN_8_lr0.0001_l11e-06_l20.001!0.5617764349446637!0.4384785409190366!0.5049990453837595!0.5676800326121473!0.5555639358296717!!!!!!!!!!!!!!!!!!!!!!!!
dalesBN!9.0!15-10-07!0.01!0.15208300352096554!100.0!<class 'models.Dales_BN_CNN.DalesBNCNN'>!!! dalesBN/results.txt!0.0001!5.0!!1e-06!!0.3638380042315314!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.1)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!!!!0.1!!!!!!-1.1784180007391951!512.0!0.6173313160737356! dalesBN/dalesBN_9_lr0.0001_l11e-06_l20.01!0.3652560213217793!0.30304555222862034!0.31671784781300394!0.4240343862602742!0.4101362135339792!!!!!!!!!!!!!!!!!!!!!!!!
stackedbncnn!0.0! 15-10-07!0.005!0.5561112761497498!85.0!<class 'models.stacked_BN_CNN.StackedBNCNN'>! True!! stackedbncnn/results.txt!0.005!!0.0!0.0001! True!0.7082749151179811!StackedBNCNN(#  (sequential): Sequential(#    (0): StackedConv2d(#      (convs): Sequential(#        (0): Conv2d(40, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (2): ReLU()#        (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (4): ReLU()#        (5): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (6): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (7): ReLU()#        (8): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (9): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (10): ReLU()#        (11): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (12): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (13): ReLU()#        (14): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (15): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (16): ReLU()#        (17): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (18): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1))#        (19): ReLU()#        (20): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#      )#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): StackedConv2d(#      (convs): Sequential(#        (0): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (2): ReLU()#        (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (4): ReLU()#        (5): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (6): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (7): ReLU()#        (8): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (9): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (10): ReLU()#        (11): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (12): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1))#        (13): ReLU()#        (14): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#      )#    )#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3503598961801284! all!!0.05!0.09176791581223592! naturalscene!!!0.5462702888068143!-3.14616136277603!512.0!-3.0614153521401017! stackedbncnn/stackedbncnn_0_lr0.005!0.7421496051810109!0.6575327300554726!0.6284004441713278!0.7828839027485615!0.7304078934335332!!!!!!!!!!!!!!!!!!!!!!!!
stackedbncnn!1.0! 15-10-07!0.005!0.5969836711883545!85.0!<class 'models.stacked_BN_CNN.StackedBNCNN'>! True!! stackedbncnn/results.txt!0.001!!0.0!0.0001! True!0.7024297909734989!StackedBNCNN(#  (sequential): Sequential(#    (0): StackedConv2d(#      (convs): Sequential(#        (0): Conv2d(40, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (2): ReLU()#        (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (4): ReLU()#        (5): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (6): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (7): ReLU()#        (8): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (9): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (10): ReLU()#        (11): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (12): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (13): ReLU()#        (14): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (15): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (16): ReLU()#        (17): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (18): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1))#        (19): ReLU()#        (20): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#      )#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): StackedConv2d(#      (convs): Sequential(#        (0): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (2): ReLU()#        (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (4): ReLU()#        (5): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (6): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (7): ReLU()#        (8): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (9): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (10): ReLU()#        (11): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (12): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1))#        (13): ReLU()#        (14): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#      )#    )#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3773218582271914! all!!0.05!0.09133797817512017! naturalscene!!!0.5946758073628828!-3.465311909872662!512.0!-3.3583688341368543! stackedbncnn/stackedbncnn_1_lr0.001!0.7590078195456499!0.6333083207354383!0.6180391986938361!0.7746546667684535!0.7271389491241166!!!!!!!!!!!!!!!!!!!!!!!!
stackedbncnn!2.0! 15-10-07!0.005!0.6280916929244995!85.0!<class 'models.stacked_BN_CNN.StackedBNCNN'>! True!! stackedbncnn/results.txt!0.0005!!0.0!0.0001! True!0.6619414119095097!StackedBNCNN(#  (sequential): Sequential(#    (0): StackedConv2d(#      (convs): Sequential(#        (0): Conv2d(40, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (2): ReLU()#        (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (4): ReLU()#        (5): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (6): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (7): ReLU()#        (8): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (9): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (10): ReLU()#        (11): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (12): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (13): ReLU()#        (14): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (15): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (16): ReLU()#        (17): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (18): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1))#        (19): ReLU()#        (20): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#      )#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): StackedConv2d(#      (convs): Sequential(#        (0): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (2): ReLU()#        (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (4): ReLU()#        (5): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (6): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (7): ReLU()#        (8): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (9): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (10): ReLU()#        (11): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (12): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1))#        (13): ReLU()#        (14): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#      )#    )#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3759030879460874! all!!0.05!0.0991788904903518! naturalscene!!!0.6484583489020855!-3.709186151376497!512.0!-3.5179586216036114! stackedbncnn/stackedbncnn_2_lr0.0005!0.7245219451794727!0.5787131760944715!0.5526023796907841!0.7496094523699565!0.7042601062128637!!!!!!!!!!!!!!!!!!!!!!!!
stackedbncnn!3.0! 15-10-07!0.005!0.6472457647323608!85.0!<class 'models.stacked_BN_CNN.StackedBNCNN'>! True!! stackedbncnn/results.txt!0.0001!!0.0!0.0001! True!0.6320901461739339!StackedBNCNN(#  (sequential): Sequential(#    (0): StackedConv2d(#      (convs): Sequential(#        (0): Conv2d(40, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (2): ReLU()#        (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (4): ReLU()#        (5): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (6): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (7): ReLU()#        (8): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (9): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (10): ReLU()#        (11): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (12): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (13): ReLU()#        (14): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (15): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (16): ReLU()#        (17): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (18): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1))#        (19): ReLU()#        (20): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#      )#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): StackedConv2d(#      (convs): Sequential(#        (0): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (2): ReLU()#        (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (4): ReLU()#        (5): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (6): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (7): ReLU()#        (8): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (9): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (10): ReLU()#        (11): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (12): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1))#        (13): ReLU()#        (14): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#      )#    )#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3642116037044751! all!!0.05!0.09052884923242452! naturalscene!!!0.5887983877962161!-3.71578751646016!512.0!-3.3772376787892417! stackedbncnn/stackedbncnn_3_lr0.0001!0.6828305291563928!0.5889901776311655!0.5004839497057435!0.7089158105740244!0.6792302638023434!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!16.0! 15-10-07!0.01!0.4721647202968597!100.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [8, 16]! absbnbncnn/results.txt!0.006999999999999999!!16.0!0.0001! False!0.5947220181348353!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 16, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=10816, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4470157430949858! all!!0.1!0.09627739465384216! naturalscene!!!0.7288033970687221!-2.33880438456708!512.0!-1.4967070282946224! absbnbncnn/absbnbncnn_16_chans[8, 16]_lr0.007_l20.01!0.6494029312453795!0.3707613143714039!0.511282992326236!0.6977753826393874!0.7443874700917694!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!17.0! 15-10-07!0.001!0.5604448318481445!100.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [8, 16]! absbnbncnn/results.txt!0.006999999999999999!!16.0!0.0001! False!0.6997736264294947!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 16, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=10816, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4109318060176959! all!!0.1!0.1674413756558212! naturalscene!!!0.6380496709532326!-3.0462294151700284!512.0!-3.0025127615062965! absbnbncnn/absbnbncnn_17_chans[8, 16]_lr0.007_l20.001!0.7015726728783419!0.6317911357516268!0.6348107245121404!0.7697996304896133!0.7608939685157509!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!18.0! 15-10-07!0.01!0.5018137693405151!100.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [8, 16]! absbnbncnn/results.txt!0.005!!16.0!0.0001! False!0.6385313139320044!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 16, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=10816, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.454420514915118! all!!0.1!0.1393143152537952! naturalscene!!!0.6982942078866412!-2.528498410369476!512.0!-2.4198184726192267! absbnbncnn/absbnbncnn_18_chans[8, 16]_lr0.005_l20.01!0.6550556162832419!0.5592668064138389!0.5254727978423982!0.6887791567237832!0.7640821923967596!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!19.0! 15-10-07!0.001!0.5610637068748474!100.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [8, 16]! absbnbncnn/results.txt!0.005!!16.0!0.0001! False!0.6918903574675526!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 16, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=10816, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4151891419086796! all!!0.1!0.15590793477083054! naturalscene!!!0.6722874827708822!-3.0690041472109915!512.0!-3.0193940486333304! absbnbncnn/absbnbncnn_19_chans[8, 16]_lr0.005_l20.001!0.7158143398847983!0.6266257803339456!0.6181248372667303!0.742338430513386!0.7565483993389029!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!20.0! 15-10-07!0.01!0.5490962862968445!100.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [8, 16]! absbnbncnn/results.txt!0.001!!16.0!0.0001! False!0.6912913443461468!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 16, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=10816, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4313996143386747! all!!0.1!0.13788654755935836! naturalscene!!!0.6685183808019832!-2.7801065336165567!512.0!-3.1354994615685428! absbnbncnn/absbnbncnn_20_chans[8, 16]_lr0.001_l20.01!0.6979551317153879!0.631403723955753!0.6080243090613643!0.7678468352276009!0.7512267217706279!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!21.0! 15-10-07!0.001!0.6108153462409973!100.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [8, 16]! absbnbncnn/results.txt!0.001!!16.0!0.0001! False!0.7287405824225394!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 16, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=10816, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3414662151867485! all!!0.1!0.11566986425978998! naturalscene!!!0.561307407587631!-3.408283958967275!512.0!-3.2072502641058236! absbnbncnn/absbnbncnn_21_chans[8, 16]_lr0.001_l20.001!0.7644743886286718!0.6306278403344436!0.6504541195184209!0.781262369667144!0.8168841939640166!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!22.0! 15-10-07!0.01!0.5354322791099548!100.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [8, 16]! absbnbncnn/results.txt!0.0001!!16.0!0.0001! False!0.6718170290896917!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 16, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=10816, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3593050426674124! all!!0.1!0.0929905494029056! naturalscene!!!0.6119044560637839!-2.801851573932584!512.0!-2.523051861368004! absbnbncnn/absbnbncnn_22_chans[8, 16]_lr0.0001_l20.01!0.7105716587048253!0.6027911987260176!0.6069982756611638!0.7555991465145769!0.6831248658418738!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!23.0! 15-10-07!0.001!0.6520722508430481!100.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [8, 16]! absbnbncnn/results.txt!0.0001!!16.0!0.0001! False!0.6795179431691593!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 16, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=10816, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3163797471931568! all!!0.1!0.0823178586004595! naturalscene!!!0.5414962281086764!-3.5599987661496906!512.0!-3.5281076672563363! absbnbncnn/absbnbncnn_23_chans[8, 16]_lr0.0001_l20.001!0.7230334206677365!0.5790359148857077!0.5909273121189369!0.7664620784003177!0.7381309897730977!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!24.0! 15-10-07!0.01!0.5244188904762268!100.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [8, 24]! absbnbncnn/results.txt!0.006999999999999999!!16.0!0.0001! False!0.6399907638938803!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 24, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=16224, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4602431722033284! all!!0.1!0.1409554149165669! naturalscene!!!0.7310277884187476!-2.7066686045530157!512.0!-2.5743959650353645! absbnbncnn/absbnbncnn_24_chans[8, 24]_lr0.007_l20.01!0.7037507092131436!0.5234395872218208!0.5641310370473882!0.7302948366352594!0.6783376493517896!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!25.0! 15-10-07!0.001!0.5674821138381958!100.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [8, 24]! absbnbncnn/results.txt!0.006999999999999999!!16.0!0.0001! False!0.7022749271023881!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 24, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=16224, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4271816119071762! all!!0.1!0.1414131169503811! naturalscene!!!0.6674598071492003!-3.0849178982715983!512.0!-3.108982929294143! absbnbncnn/absbnbncnn_25_chans[8, 24]_lr0.007_l20.001!0.7175956991700193!0.6380092259913963!0.6230420404493544!0.7694461521498515!0.7632815177513191!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!26.0! 15-10-07!0.01!0.4805602431297302!100.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [8, 24]! absbnbncnn/results.txt!0.005!!16.0!0.0001! False!0.6137642029389824!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 24, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=16224, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4947498248132977! all!!0.1!0.2011582400148205! naturalscene!!!0.7132036351373338!-2.431782386871125!512.0!-2.1717680930451024! absbnbncnn/absbnbncnn_26_chans[8, 24]_lr0.005_l20.01!0.651242548798687!0.5436376672801492!0.5103079407194814!0.6826820519332701!0.6809508059633239!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!27.0! 15-10-07!0.001!0.5489233732223511!100.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [8, 24]! absbnbncnn/results.txt!0.005!!16.0!0.0001! False!0.6857105057356175!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 24, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=16224, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4285649809289115! all!!0.1!0.16211732630164807! naturalscene!!!0.6291479359180889!-2.9915331617379803!512.0!-3.1253743787729036! absbnbncnn/absbnbncnn_27_chans[8, 24]_lr0.005_l20.001!0.6972992758845837!0.5944436369937708!0.6203257627421784!0.7346438889248412!0.7818399641327136!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!28.0! 15-10-07!0.01!0.5517508387565613!100.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [8, 24]! absbnbncnn/results.txt!0.001!!16.0!0.0001! False!0.6903844691407892!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 24, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=16224, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4034080174806956! all!!0.1!0.13421204807656836! naturalscene!!!0.6515617842100608!-2.8264925172426043!512.0!-2.9139206254876626! absbnbncnn/absbnbncnn_28_chans[8, 24]_lr0.001_l20.01!0.7246849464405808!0.6127420569580626!0.6079374327242391!0.7448137036155921!0.7617442059654717!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!29.0! 15-10-07!0.001!0.6051783561706543!100.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [8, 24]! absbnbncnn/results.txt!0.001!!16.0!0.0001! False!0.7222034987467674!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 24, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=16224, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3597900857675016! all!!0.1!0.09253377760406688! naturalscene!!!0.6064990464160921!-3.366134278015493!512.0!-3.2745231955796044! absbnbncnn/absbnbncnn_29_chans[8, 24]_lr0.001_l20.001!0.7479996675287781!0.6468094199876618!0.6265924463789294!0.777294570353626!0.8123213894848414!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!30.0! 15-10-07!0.01!0.5444165468215942!100.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [8, 24]! absbnbncnn/results.txt!0.0001!!16.0!0.0001! False!0.6882500696281797!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 24, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=16224, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3550245419651681! all!!0.1!0.11250259238070888! naturalscene!!!0.5822432593684904!-2.811526903919145!512.0!-2.73569111458346! absbnbncnn/absbnbncnn_30_chans[8, 24]_lr0.0001_l20.01!0.7320207099806468!0.6512106282208698!0.6187045353237675!0.7553452002703192!0.6839692743452953!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!31.0! 15-10-07!0.001!0.6562126278877258!100.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [8, 24]! absbnbncnn/results.txt!0.0001!!16.0!0.0001! False!0.6744951550743992!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 24, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=16224, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3190946828117611! all!!0.1!0.08215491972037035! naturalscene!!!0.5738358733462751!-3.58545950473164!512.0!-3.43880651231666! absbnbncnn/absbnbncnn_31_chans[8, 24]_lr0.0001_l20.001!0.7238213419886921!0.577497177865146!0.5877141056026851!0.7651368515479231!0.7183062983675501!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!32.0! 15-10-07!0.01!0.4598429203033447!100.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [8, 64]! absbnbncnn/results.txt!0.006999999999999999!!16.0!0.0001! False!0.5667939119183951!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 64, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=43264, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4814389451940825! all!!0.1!0.14731757839726864! naturalscene!!!0.7333531436007369!-2.21467561671457!512.0!-2.1257048565894365! absbnbncnn/absbnbncnn_32_chans[8, 64]_lr0.007_l20.01!0.6436932708723135!0.38544747799902185!0.5215779323568644!0.6925442295118872!0.5907066488518886!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!33.0! 15-10-07!0.001!0.5421313047409058!100.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [8, 64]! absbnbncnn/results.txt!0.006999999999999999!!16.0!0.0001! False!0.6758960578747073!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 64, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=43264, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3965349905454058! all!!0.1!0.14978634444742078! naturalscene!!!0.6193080951426031!-3.0150167501530136!512.0!-3.0535031964082013! absbnbncnn/absbnbncnn_33_chans[8, 64]_lr0.007_l20.001!0.7077065611241621!0.6064797108472131!0.6017829679950226!0.7205597984183985!0.7429512509887404!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!34.0! 15-10-07!0.01!0.4012107849121094!100.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [8, 64]! absbnbncnn/results.txt!0.005!!16.0!0.0001! False!0.5203166979109858!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 64, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=43264, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.5214568551467916! all!!0.1!0.20131058675247301! naturalscene!!!0.7346559408833083!-1.91376246445072!512.0!-1.7680063260813768! absbnbncnn/absbnbncnn_34_chans[8, 64]_lr0.005_l20.01!0.6022736606429946!0.4415196667231125!0.4715159002115851!0.5996894867531791!0.4865847752240576!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!35.0! 15-10-07!0.001!0.5490682721137999!100.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [8, 64]! absbnbncnn/results.txt!0.005!!16.0!0.0001! False!0.6949244082167213!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 64, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=43264, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4201401872621664! all!!0.1!0.17022513109164336! naturalscene!!!0.6675400725752241!-3.0371945915718426!512.0!-3.0480859501876694! absbnbncnn/absbnbncnn_35_chans[8, 64]_lr0.005_l20.001!0.7259153154822353!0.6247857560369853!0.6190288037516747!0.7447926174151752!0.7600995483975356!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!36.0! 15-10-07!0.01!0.5308744907379149!100.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [8, 64]! absbnbncnn/results.txt!0.001!!16.0!0.0001! False!0.6720362492811149!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 64, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=43264, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4347628734292009! all!!0.1!0.1433379901452023! naturalscene!!!0.6624658461775736!-2.763481427641476!512.0!-2.768342344881603! absbnbncnn/absbnbncnn_36_chans[8, 64]_lr0.001_l20.01!0.6885629462012254!0.6086320809641194!0.5857072523125405!0.7411848754209198!0.7360940915067703!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!40.0! 15-10-07!0.01!0.4973137378692627!100.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [16, 16]! absbnbncnn/results.txt!0.006999999999999999!!40.0!0.0001! False!0.6319899667135196!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 16, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(16, 16, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=10816, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4825915865989529! all!!0.1!0.1742756799780275! naturalscene!!!0.7254414402056738!-2.5655972720271323!512.0!-2.128015451820829! absbnbncnn/absbnbncnn_40_chans[16, 16]_lr0.007_l20.01!0.6641173984120858!0.5587993110670542!0.5203695227792275!0.7022600690921226!0.7144035322171075!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!41.0! 15-10-07!0.001!0.564356803894043!100.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [16, 16]! absbnbncnn/results.txt!0.006999999999999999!!40.0!0.0001! False!0.6969823635743856!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 16, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(16, 16, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=10816, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.41037865877212737! all!!0.1!0.14638435397234986! naturalscene!!!0.666243590838078!-3.1162910788666967!512.0!-3.09506142612554! absbnbncnn/absbnbncnn_41_chans[16, 16]_lr0.007_l20.001!0.7294553561124648!0.6184361625046898!0.6263849699814099!0.7575053379436681!0.7531299913296953!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!42.0! 15-10-07!0.01!0.5005820989608765!100.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [16, 16]! absbnbncnn/results.txt!0.005!!40.0!0.0001! False!0.6338086246412451!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 16, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(16, 16, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=10816, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.469984403877823! all!!0.1!0.1399632320952077! naturalscene!!!0.7361424080814042!-2.5462475892825003!512.0!-2.284572524746181! absbnbncnn/absbnbncnn_42_chans[16, 16]_lr0.005_l20.01!0.6480052828087393!0.5418988743887138!0.5422578571115918!0.6972979637073277!0.739583145189853!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!43.0! 15-10-07!0.001!0.558976948261261!100.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [16, 16]! absbnbncnn/results.txt!0.005!!40.0!0.0001! False!0.6963334616795802!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 16, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(16, 16, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=10816, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4183425707373328! all!!0.1!0.1618863952534786! naturalscene!!!0.6153939545728464!-3.0799530514404965!512.0!-3.0293820513034007! absbnbncnn/absbnbncnn_43_chans[16, 16]_lr0.005_l20.001!0.7162948009788376!0.6368230573197426!0.6124892849301218!0.7557849400939971!0.7602752250752017!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!44.0! 15-10-07!0.01!0.5280449986457825!100.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [16, 16]! absbnbncnn/results.txt!0.001!!40.0!0.0001! False!0.6815858330792535!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 16, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(16, 16, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=10816, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4177636738795157! all!!0.1!0.13779520871843595! naturalscene!!!0.6528804541809822!-2.842541654365275!512.0!-3.0435895574555616! absbnbncnn/absbnbncnn_44_chans[16, 16]_lr0.001_l20.01!0.691169917172593!0.6120541844219789!0.604545337370826!0.7199815101137771!0.7801782163170923!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!45.0! 15-10-07!0.001!0.6134458780288696!100.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [16, 16]! absbnbncnn/results.txt!0.001!!40.0!0.0001! False!0.7390946989798752!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 16, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(16, 16, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=10816, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3709128833243508! all!!0.1!0.09951886992386877! naturalscene!!!0.5660032677444089!-3.4087910855337866!512.0!-3.1797806921131277! absbnbncnn/absbnbncnn_45_chans[16, 16]_lr0.001_l20.001!0.7706194007947976!0.6405983528987697!0.6564446159259117!0.8007946576811444!0.8270164675987525!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!46.0! 15-10-07!0.01!0.5429168939590454!100.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [16, 16]! absbnbncnn/results.txt!0.0001!!40.0!0.0001! False!0.7010186021712652!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 16, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(16, 16, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=10816, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.35971569239880785! all!!0.1!0.1260365337664845! naturalscene!!!0.6185912528928456!-2.845507737737975!512.0!-2.4858307053982567! absbnbncnn/absbnbncnn_46_chans[16, 16]_lr0.0001_l20.01!0.7253702489469329!0.6384933515421789!0.5920672436326044!0.7690171311013752!0.7801450356332347!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!47.0! 15-10-07!0.001!0.6761770844459534!100.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [16, 16]! absbnbncnn/results.txt!0.0001!!40.0!0.0001! False!0.6823855211947061!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 16, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(16, 16, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=10816, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3284515716545699! all!!0.1!0.1104402944414128! naturalscene!!!0.5954748947722359!-3.659890102225371!512.0!-3.626555843729875! absbnbncnn/absbnbncnn_47_chans[16, 16]_lr0.0001_l20.001!0.7158333614845429!0.5880907072677674!0.5632596847794407!0.7583764548506766!0.7863673975911022!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!48.0! 15-10-07!0.01!0.4796430468559265!100.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [16, 24]! absbnbncnn/results.txt!0.006999999999999999!!40.0!0.0001! False!0.6077340556212041!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 16, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(16, 24, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=16224, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3645862530345888! all!!0.1!0.10721308697086084! naturalscene!!!0.6016838250140751!-2.5527623853172834!512.0!-2.095289633241918! absbnbncnn/absbnbncnn_48_chans[16, 24]_lr0.007_l20.01!0.6684158357558098!0.4127251445532207!0.5544560209129408!0.7033441842468957!0.6997290926371538!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!49.0! 15-10-07!0.001!0.5474950075149536!100.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [16, 24]! absbnbncnn/results.txt!0.006999999999999999!!40.0!0.0001! False!0.6893538801156098!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 16, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(16, 24, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=16224, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.42228744056243! all!!0.1!0.15969019696114234! naturalscene!!!0.6568721262607479!-3.0609342097157266!512.0!-3.0983971120931537! absbnbncnn/absbnbncnn_49_chans[16, 24]_lr0.007_l20.001!0.7025694926128975!0.6169183013911549!0.6225709122161839!0.7501353850529494!0.7545753093048635!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!50.0! 15-10-07!0.01!0.4773261547088623!100.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [16, 24]! absbnbncnn/results.txt!0.005!!40.0!0.0001! False!0.6236437736724867!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 16, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(16, 24, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=16224, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.47824140358502! all!!0.1!0.2100061116764516! naturalscene!!!0.7288523015918702!-2.5109589509834533!512.0!-2.002939805654023! absbnbncnn/absbnbncnn_50_chans[16, 24]_lr0.005_l20.01!0.6217920215255506!0.5623128278595492!0.5121133176898552!0.6758656283935862!0.7461350728938922!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!51.0! 15-10-07!0.001!0.5489718914031982!100.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [16, 24]! absbnbncnn/results.txt!0.005!!40.0!0.0001! False!0.6884026412209256!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 16, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(16, 24, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=16224, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4257517839763905! all!!0.1!0.09952743889680107! naturalscene!!!0.6807106989657993!-3.0941961728609524!512.0!-3.1126901557199744! absbnbncnn/absbnbncnn_51_chans[16, 24]_lr0.005_l20.001!0.6930491402324053!0.6232624890290278!0.6155034305764847!0.7400607791738869!0.7701373670928238!!!!!!!!!!!!!!!!!!!!!!!!
absbnstackedbncnn!0.0!15-10-07!0.005!0.5635052919387817!85.0!<class 'torchdeepretina.models.AbsBNStackedBNCNN'>!True![8, 8]!absbnstackedbncnn/results.txt!0.005!!0.0!0.0001!True!0.7216225284145412!AbsBNStackedBNCNN(#  (sequential): Sequential(#    (0): StackedConv2d(#      (convs): Sequential(#        (0): Conv2d(40, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (2): ReLU()#        (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (4): ReLU()#        (5): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (6): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (7): ReLU()#        (8): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (9): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (10): ReLU()#        (11): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (12): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (13): ReLU()#        (14): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (15): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (16): ReLU()#        (17): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (18): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1))#        (19): ReLU()#        (20): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#      )#    )#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): StackedConv2d(#      (convs): Sequential(#        (0): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (2): ReLU()#        (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (4): ReLU()#        (5): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (6): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (7): ReLU()#        (8): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (9): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (10): ReLU()#        (11): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (12): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1))#        (13): ReLU()#        (14): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#      )#    )#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3783602483552217!all!!0.05!0.09563841528163644!naturalscene!!!0.6154242023112084!-3.1639945620325363!512.0!-3.072794719437661!absbnstackedbncnn/absbnstackedbncnn_0_lr0.005!0.7469378849429609!0.6590492317264903!0.6537440944354715!0.8033271013889522!0.7450543295788309!!!!!!!!!!!!!!!!!!!!!!!!
absbnstackedbncnn!1.0!15-10-07!0.005!0.6085760593414307!85.0!<class 'torchdeepretina.models.AbsBNStackedBNCNN'>!True![8, 8]!absbnstackedbncnn/results.txt!0.001!!0.0!0.0001!True!0.6840037422461074!AbsBNStackedBNCNN(#  (sequential): Sequential(#    (0): StackedConv2d(#      (convs): Sequential(#        (0): Conv2d(40, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (2): ReLU()#        (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (4): ReLU()#        (5): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (6): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (7): ReLU()#        (8): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (9): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (10): ReLU()#        (11): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (12): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (13): ReLU()#        (14): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (15): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (16): ReLU()#        (17): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (18): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1))#        (19): ReLU()#        (20): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#      )#    )#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): StackedConv2d(#      (convs): Sequential(#        (0): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (2): ReLU()#        (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (4): ReLU()#        (5): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (6): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (7): ReLU()#        (8): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (9): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (10): ReLU()#        (11): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (12): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1))#        (13): ReLU()#        (14): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#      )#    )#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3676238686201104!all!!0.05!0.10712805863219303!naturalscene!!!0.5709792867596293!-3.522576569971456!512.0!-3.3865561629732834!absbnstackedbncnn/absbnstackedbncnn_1_lr0.001!0.7516917943275024!0.6301805457133226!0.5856318721121283!0.776684618528023!0.6758298805495606!!!!!!!!!!!!!!!!!!!!!!!!
absbnstackedbncnn!2.0!15-10-07!0.005!0.6420964002609253!85.0!<class 'torchdeepretina.models.AbsBNStackedBNCNN'>!True![8, 8]!absbnstackedbncnn/results.txt!0.0005!!0.0!0.0001!True!0.6599000639770266!AbsBNStackedBNCNN(#  (sequential): Sequential(#    (0): StackedConv2d(#      (convs): Sequential(#        (0): Conv2d(40, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (2): ReLU()#        (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (4): ReLU()#        (5): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (6): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (7): ReLU()#        (8): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (9): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (10): ReLU()#        (11): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (12): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (13): ReLU()#        (14): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (15): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (16): ReLU()#        (17): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (18): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1))#        (19): ReLU()#        (20): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#      )#    )#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): StackedConv2d(#      (convs): Sequential(#        (0): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (2): ReLU()#        (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (4): ReLU()#        (5): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (6): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (7): ReLU()#        (8): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (9): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (10): ReLU()#        (11): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (12): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1))#        (13): ReLU()#        (14): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#      )#    )#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3889455407830117!all!!0.05!0.09202895961548813!naturalscene!!!0.6595864176382492!-3.7686187156544912!512.0!-3.56424909228881!absbnstackedbncnn/absbnstackedbncnn_2_lr0.0005!0.7199498287177645!0.5420713823300953!0.5778296113217081!0.7654883565622118!0.6941611409533532!!!!!!!!!!!!!!!!!!!!!!!!
absbnstackedbncnn!3.0!15-10-07!0.005!0.6463409066200256!85.0!<class 'torchdeepretina.models.AbsBNStackedBNCNN'>!True![8, 8]!absbnstackedbncnn/results.txt!0.0001!!0.0!0.0001!True!0.6129614668690404!AbsBNStackedBNCNN(#  (sequential): Sequential(#    (0): StackedConv2d(#      (convs): Sequential(#        (0): Conv2d(40, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (2): ReLU()#        (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (4): ReLU()#        (5): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (6): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (7): ReLU()#        (8): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (9): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (10): ReLU()#        (11): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (12): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (13): ReLU()#        (14): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (15): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (16): ReLU()#        (17): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (18): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1))#        (19): ReLU()#        (20): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#      )#    )#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): StackedConv2d(#      (convs): Sequential(#        (0): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (2): ReLU()#        (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (4): ReLU()#        (5): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (6): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (7): ReLU()#        (8): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (9): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (10): ReLU()#        (11): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (12): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1))#        (13): ReLU()#        (14): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#      )#    )#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.35551892317947026!all!!0.05!0.08616209088686387!naturalscene!!!0.5662036137487031!-3.758584696602857!512.0!-3.3915430510249283!absbnstackedbncnn/absbnstackedbncnn_3_lr0.0001!0.7035406075555591!0.52138132292853!0.5014140459975243!0.7097316203076601!0.6287397375559288!!!!!!!!!!!!!!!!!!!!!!!!
absbnpractical!0.0!15-10-07!0.01!0.4971951544284821!50.0!<class 'torchdeepretina.models.AbsBNPracticalBNCNN'>!True!!absbnpractical/results.txt!0.01!!0.0!5e-05!False!0.6383762918188369!AbsBNPracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.125)#    (2): ReLU()#    (3): Flatten()#    (4): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.25)#    (8): ReLU()#    (9): Flatten()#    (10): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.5753930165769182!all!!0.25!0.1997303432815386!naturalscene!!!0.7914727562368467!-2.438986284880257!512.0!-2.4405934115675336!absbnpractical/absbnpractical_0_lr0.01_l20.01!0.651740269363234!0.5189539653499805!0.5507544932518196!0.7192970066182339!0.7511357245109167!!!!!!!!!!!!!!!!!!!!!!!!
absbnpractical!1.0!15-10-07!0.001!0.5004790425300598!50.0!<class 'torchdeepretina.models.AbsBNPracticalBNCNN'>!True!!absbnpractical/results.txt!0.01!!0.0!5e-05!False!0.6371884311883489!AbsBNPracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.125)#    (2): ReLU()#    (3): Flatten()#    (4): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.25)#    (8): ReLU()#    (9): Flatten()#    (10): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.47863034377492597!all!!0.25!0.16748227674654798!naturalscene!!!0.721532973089037!-2.7014986839409514!512.0!-2.7776432794795256!absbnpractical/absbnpractical_1_lr0.01_l20.001!0.6611753023505106!0.5744562078881407!0.5646286226630449!0.7040130603934336!0.6816689626466147!!!!!!!!!!!!!!!!!!!!!!!!
absbnpractical!2.0!15-10-07!0.01!0.4712895452976227!50.0!<class 'torchdeepretina.models.AbsBNPracticalBNCNN'>!True!!absbnpractical/results.txt!0.005!!0.0!5e-05!False!0.6028255148768297!AbsBNPracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.125)#    (2): ReLU()#    (3): Flatten()#    (4): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.25)#    (8): ReLU()#    (9): Flatten()#    (10): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4741329084443761!all!!0.25!0.1853632375315284!naturalscene!!!0.7271944616382535!-2.349416782728328!512.0!-2.482309582844027!absbnpractical/absbnpractical_2_lr0.005_l20.01!0.6255489438725558!0.4839083609271032!0.5140954458114342!0.6829598618438233!0.7076149619292317!!!!!!!!!!!!!!!!!!!!!!!!
absbnpractical!3.0!15-10-07!0.001!0.5195291638374329!50.0!<class 'torchdeepretina.models.AbsBNPracticalBNCNN'>!True!!absbnpractical/results.txt!0.005!!0.0!5e-05!False!0.6685967021064224!AbsBNPracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.125)#    (2): ReLU()#    (3): Flatten()#    (4): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.25)#    (8): ReLU()#    (9): Flatten()#    (10): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4260833928893382!all!!0.25!0.11931505299704424!naturalscene!!!0.7096349629321322!-2.8668935129904995!512.0!-2.9042467849201783!absbnpractical/absbnpractical_3_lr0.005_l20.001!0.6800642464363112!0.6195641245351396!0.6015364743310787!0.7319718260654311!0.7098468391641514!!!!!!!!!!!!!!!!!!!!!!!!
absbnpractical!4.0!15-10-07!0.01!0.5391499996185303!50.0!<class 'torchdeepretina.models.AbsBNPracticalBNCNN'>!True!!absbnpractical/results.txt!0.001!!0.0!5e-05!False!0.6772286655607921!AbsBNPracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.125)#    (2): ReLU()#    (3): Flatten()#    (4): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.25)#    (8): ReLU()#    (9): Flatten()#    (10): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4359852378756547!all!!0.25!0.1404748092226192!naturalscene!!!0.6798729771771632!-2.8664114559757583!512.0!-3.1824643988678867!absbnpractical/absbnpractical_4_lr0.001_l20.01!0.6933332637862061!0.6335571354715632!0.61730980598335!0.736983559942016!0.7049595626208252!!!!!!!!!!!!!!!!!!!!!!!!
absbnpractical!5.0!15-10-07!0.001!0.5815051794052124!50.0!<class 'torchdeepretina.models.AbsBNPracticalBNCNN'>!True!!absbnpractical/results.txt!0.001!!0.0!5e-05!False!0.7003947869172583!AbsBNPracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.125)#    (2): ReLU()#    (3): Flatten()#    (4): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.25)#    (8): ReLU()#    (9): Flatten()#    (10): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3841966447345809!all!!0.25!0.13603430397548266!naturalscene!!!0.6700155066367368!-3.190250809376056!512.0!-3.1594378042194875!absbnpractical/absbnpractical_5_lr0.001_l20.001!0.6997586669055054!0.6289772366659203!0.6296485001544314!0.7574742687728065!0.7861152620876275!!!!!!!!!!!!!!!!!!!!!!!!
absbnpractical!6.0!15-10-07!0.01!0.5939509272575378!50.0!<class 'torchdeepretina.models.AbsBNPracticalBNCNN'>!True!!absbnpractical/results.txt!0.0001!!0.0!5e-05!False!0.6755218825854961!AbsBNPracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.125)#    (2): ReLU()#    (3): Flatten()#    (4): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.25)#    (8): ReLU()#    (9): Flatten()#    (10): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3531299441450393!all!!0.25!0.09336198814258014!naturalscene!!!0.6326625638025664!-3.1392145250357832!512.0!-3.1192682300770684!absbnpractical/absbnpractical_6_lr0.0001_l20.01!0.7151789296711399!0.6062982690061307!0.5721988538412246!0.7602202485596264!0.7237131118493583!!!!!!!!!!!!!!!!!!!!!!!!
absbnpractical!7.0!15-10-07!0.001!0.5948200821876526!50.0!<class 'torchdeepretina.models.AbsBNPracticalBNCNN'>!True!!absbnpractical/results.txt!0.0001!!0.0!5e-05!False!0.6836881695406694!AbsBNPracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.125)#    (2): ReLU()#    (3): Flatten()#    (4): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.25)#    (8): ReLU()#    (9): Flatten()#    (10): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3662331233781479!all!!0.25!0.10327413511962874!naturalscene!!!0.6099331636740948!-3.136730179527766!512.0!-3.1931848768232163!absbnpractical/absbnpractical_7_lr0.0001_l20.001!0.7262759863731826!0.6329244753445655!0.595786481720784!0.7553142227534941!0.7081396815113208!!!!!!!!!!!!!!!!!!!!!!!!
absbndalesbncnn!0.0!15-10-07!0.01!0.3825822472572327!85.0!<class 'torchdeepretina.models.AbsBNDalesBNCNN'>!True!!absbndalesbncnn/results.txt!0.005!!0.0!1e-05!True!0.4823700732388612!AbsBNDalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (3): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (10): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.5525892535472491!all!!0.15!0.21047624033103984!naturalscene!!!0.7227693034991431!-1.5746494623162357!512.0!-1.5447908058856683!absbndalesbncnn/absbndalesbncnn_0_lr0.005_l20.01!0.4728647164734977!0.2633997948589662!0.36646470665971936!0.5711864842370586!0.7379346639650641!!!!!!!!!!!!!!!!!!!!!!!!
absbndalesbncnn!1.0!15-10-07!0.001!0.4435694813728333!85.0!<class 'torchdeepretina.models.AbsBNDalesBNCNN'>!True!!absbndalesbncnn/results.txt!0.005!!0.0!1e-05!True!0.5579590567578706!AbsBNDalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (3): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (10): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.4673293915662916!all!!0.15!0.13760573049815222!naturalscene!!!0.6828889272963223!-2.2360089792565163!512.0!-2.2662202488756966!absbndalesbncnn/absbndalesbncnn_1_lr0.005_l20.001!0.6419995184022523!0.3269737295651759!0.4648281455958999!0.6902383370177693!0.6657555532082559!!!!!!!!!!!!!!!!!!!!!!!!
absbndalesbncnn!2.0!15-10-07!0.01!0.4294974803924561!85.0!<class 'torchdeepretina.models.AbsBNDalesBNCNN'>!True!!absbndalesbncnn/results.txt!0.001!!0.0!1e-05!True!0.5292914008609559!AbsBNDalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (3): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (10): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.5496047840304258!all!!0.15!0.2107983065685678!naturalscene!!!0.7565755710377772!-1.9248032705186904!512.0!-2.021200181941822!absbndalesbncnn/absbndalesbncnn_2_lr0.001_l20.01!0.5654070317634212!0.31226790726260745!0.4254424223642047!0.6036035787715519!0.7397360641429942!!!!!!!!!!!!!!!!!!!!!!!!
absbndalesbncnn!3.0!15-10-07!0.001!0.4789120554924011!85.0!<class 'torchdeepretina.models.AbsBNDalesBNCNN'>!True!!absbndalesbncnn/results.txt!0.001!!0.0!1e-05!True!0.5774274032684582!AbsBNDalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (3): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (10): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.4644783675433677!all!!0.15!0.12691062667942332!naturalscene!!!0.7183669667171136!-2.3767077513769563!512.0!-2.385072118388962!absbndalesbncnn/absbndalesbncnn_3_lr0.001_l20.001!0.6103696398939727!0.41014076079062795!0.4617066821848162!0.6648910517582275!0.7400288817146469!!!!!!!!!!!!!!!!!!!!!!!!
absbndalesbncnn!4.0!15-10-07!0.01!0.5248218178749084!85.0!<class 'torchdeepretina.models.AbsBNDalesBNCNN'>!True!!absbndalesbncnn/results.txt!0.0005!!0.0!1e-05!True!0.6545117344221053!AbsBNDalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (3): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (10): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.4006570663284186!all!!0.15!0.11050445517026193!naturalscene!!!0.6750844574975662!-2.5761334772023683!512.0!-2.88463372896922!absbndalesbncnn/absbndalesbncnn_4_lr0.0005_l20.01!0.692555696166454!0.5042327374589807!0.5553556545632968!0.732531438137963!0.7878831457838321!!!!!!!!!!!!!!!!!!!!!!!!
absbndalesbncnn!5.0!15-10-07!0.001!0.5211287140846252!85.0!<class 'torchdeepretina.models.AbsBNDalesBNCNN'>!True!!absbndalesbncnn/results.txt!0.0005!!0.0!1e-05!True!0.6336612826026984!AbsBNDalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (3): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (10): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.3911741639824944!all!!0.15!0.12018333534856156!naturalscene!!!0.6816489799664153!-2.6910605302493487!512.0!-2.604483849009739!absbndalesbncnn/absbndalesbncnn_5_lr0.0005_l20.001!0.6624148538208642!0.4931117670603193!0.5871665813986945!0.7212969162711945!0.7043162944624198!!!!!!!!!!!!!!!!!!!!!!!!
absbndalesbncnn!6.0!15-10-07!0.01!0.5048439502716064!85.0!<class 'torchdeepretina.models.AbsBNDalesBNCNN'>!True!!absbndalesbncnn/results.txt!0.0001!!0.0!1e-05!True!0.6150922856639939!AbsBNDalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (3): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (10): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.4486470412082362!all!!0.15!0.1150186941616116!naturalscene!!!0.7166242316684982!-2.467699642005189!512.0!-2.3842578691019303!absbndalesbncnn/absbndalesbncnn_6_lr0.0001_l20.01!0.623899072047484!0.4917076882392192!0.5191519464743667!0.6936474768473402!0.7470552447115594!!!!!!!!!!!!!!!!!!!!!!!!
absbndalesbncnn!7.0!15-10-07!0.001!0.4921069145202637!85.0!<class 'torchdeepretina.models.AbsBNDalesBNCNN'>!True!!absbndalesbncnn/results.txt!0.0001!!0.0!1e-05!True!0.5855599494195924!AbsBNDalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (3): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (10): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.3753030530986862!all!!0.15!0.10659269784319696!naturalscene!!!0.596390109135824!-2.3461528493268458!512.0!-2.339017622645315!absbndalesbncnn/absbndalesbncnn_7_lr0.0001_l20.001!0.6230925783246293!0.4301091235589923!0.5150808363077538!0.645919880929074!0.7135973279775129!!!!!!!!!!!!!!!!!!!!!!!!
dalessscnn!0.0!15-10-07!0.01!!85.0!<class 'torchdeepretina.models.DalesSSCNN'>!True!!dalessscnn/results.txt!0.005!!0.0!1e-05!True!!DalesSSCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (3): ReLU()#    (4): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (5): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (6): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (7): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (8): ReLU()#    (9): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (10): Flatten()#    (11): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (12): ScaleShift(shape=5, scale=True, shift=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!!all!!0.15!!naturalscene!!!!inf!512.0!!dalessscnn/dalessscnn_0_lr0.005_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
dalessscnn!1.0!15-10-07!0.001!!85.0!<class 'torchdeepretina.models.DalesSSCNN'>!True!!dalessscnn/results.txt!0.005!!0.0!1e-05!True!!DalesSSCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (3): ReLU()#    (4): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (5): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (6): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (7): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (8): ReLU()#    (9): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (10): Flatten()#    (11): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (12): ScaleShift(shape=5, scale=True, shift=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!!all!!0.15!!naturalscene!!!!inf!512.0!!dalessscnn/dalessscnn_1_lr0.005_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
dalessscnn!2.0!15-10-07!0.01!-0.08268164098262787!85.0!<class 'torchdeepretina.models.DalesSSCNN'>!True!!dalessscnn/results.txt!0.001!!0.0!1e-05!True!-0.03449528077353938!DalesSSCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (3): ReLU()#    (4): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (5): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (6): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (7): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (8): ReLU()#    (9): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (10): Flatten()#    (11): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (12): ScaleShift(shape=5, scale=True, shift=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!!all!!0.15!!naturalscene!!!!0.9832465597407308!512.0!0.9532887194316118!dalessscnn/dalessscnn_2_lr0.001_l20.01!-0.04741515745322946!-0.043336208610399!-0.03302080628849178!-0.033380512560789284!-0.015323718954787385!!!!!!!!!!!!!!!!!!!!!!!!
dalessscnn!3.0!15-10-07!0.001!-0.0035522307734936476!85.0!<class 'torchdeepretina.models.DalesSSCNN'>!True!!dalessscnn/results.txt!0.001!!0.0!1e-05!True!-0.0042269036835208456!DalesSSCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (3): ReLU()#    (4): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (5): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (6): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (7): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (8): ReLU()#    (9): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (10): Flatten()#    (11): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (12): ScaleShift(shape=5, scale=True, shift=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!!all!!0.15!!naturalscene!!!!2.9434943605346473e+28!512.0!3.8586473871467296e+28!dalessscnn/dalessscnn_3_lr0.001_l20.001!-0.03393443835877527!0.010903882471722592!0.020083070453499104!-0.022825030991927325!0.0046379980078766715!!!!!!!!!!!!!!!!!!!!!!!!
dalessscnn!4.0!15-10-07!0.01!0.3877500593662262!85.0!<class 'torchdeepretina.models.DalesSSCNN'>!True!!dalessscnn/results.txt!0.0005!!0.0!1e-05!True!0.43832442700596347!DalesSSCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (3): ReLU()#    (4): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (5): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (6): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (7): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (8): ReLU()#    (9): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (10): Flatten()#    (11): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (12): ScaleShift(shape=5, scale=True, shift=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.5700716255197902!all!!0.15!0.20651301874057326!naturalscene!!!0.7849585846689932!-1.798003830791059!512.0!-1.8205428703106463!dalessscnn/dalessscnn_4_lr0.0005_l20.01!0.43715710841908784!0.2745977158877135!0.35195070738175904!0.50478213183031!0.6231344715109473!!!!!!!!!!!!!!!!!!!!!!!!
dalessscnn!5.0!15-10-07!0.001!0.2869127094745636!85.0!<class 'torchdeepretina.models.DalesSSCNN'>!True!!dalessscnn/results.txt!0.0005!!0.0!1e-05!True!0.3266649983529417!DalesSSCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (3): ReLU()#    (4): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (5): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (6): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (7): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (8): ReLU()#    (9): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (10): Flatten()#    (11): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (12): ScaleShift(shape=5, scale=True, shift=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!!all!!0.15!!naturalscene!!!!-1.289913944458957!512.0!-0.26929785779475424!dalessscnn/dalessscnn_5_lr0.0005_l20.001!0.3392415202386306!0.22992415470698396!0.2922372764183709!0.3802405950633755!0.3916814453373476!!!!!!!!!!!!!!!!!!!!!!!!
dalessscnn!6.0!15-10-07!0.01!0.3951882719993591!85.0!<class 'torchdeepretina.models.DalesSSCNN'>!True!!dalessscnn/results.txt!0.0001!!0.0!1e-05!True!0.4706098406492273!DalesSSCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (3): ReLU()#    (4): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (5): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (6): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (7): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (8): ReLU()#    (9): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (10): Flatten()#    (11): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (12): ScaleShift(shape=5, scale=True, shift=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4696743186010654!all!!0.15!0.20231958171285505!naturalscene!!!0.7769042131199173!-1.7797083979480244!512.0!-1.5931972890189172!dalessscnn/dalessscnn_6_lr0.0001_l20.01!0.5067488048170526!0.3210420424415498!0.4352923228750368!0.5224172532780519!0.5675487798344453!!!!!!!!!!!!!!!!!!!!!!!!
dalessscnn!7.0!15-10-07!0.001!0.3593490719795227!85.0!<class 'torchdeepretina.models.DalesSSCNN'>!True!!dalessscnn/results.txt!0.0001!!0.0!1e-05!True!0.4229442657309068!DalesSSCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (3): ReLU()#    (4): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (5): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (6): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (7): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (8): ReLU()#    (9): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (10): Flatten()#    (11): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (12): ScaleShift(shape=5, scale=True, shift=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4579466577015751!all!!0.15!0.18331612617578144!naturalscene!!!0.6419842726097216!-1.6205428662747818!512.0!-0.3071445983413241!dalessscnn/dalessscnn_7_lr0.0001_l20.001!0.4407373379657389!0.3267139220325613!0.389709367182272!0.4832927138098192!0.4742679876641427!!!!!!!!!!!!!!!!!!!!!!!!
bncnn!0.0!15-10-07!0.01!0.4970860481262207!70.0!<class 'torchdeepretina.models.BNCNN'>!True![8, 8]!bncnn/results.txt!0.005!!0.0!0.0001!False!0.6441167405439875!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4278611131814721!all!!0.05!0.14314239506033793!naturalscene!!!0.7266836482992692!-2.661611063537914!512.0!-2.4638358336051165!bncnn/bncnn_0_lr0.005_l20.01!0.6535744613782462!0.5623784473575553!0.5576527610481555!0.7000836109609481!0.7468944219750323!!!!!!!!!!!!!!!!!!!!!!!!
bncnn!1.0!15-10-07!0.001!0.5678633451461792!70.0!<class 'torchdeepretina.models.BNCNN'>!True![8, 8]!bncnn/results.txt!0.005!!1.0!0.0001!False!0.7079318287461576!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3961764575810859!all!!0.05!0.10637879498846822!naturalscene!!!0.7001476574510717!-3.2092365782544983!512.0!-3.0610899006293035!bncnn/bncnn_1_lr0.005_l20.001!0.7080344948691628!0.6403217019901423!0.6419247105885489!0.7533041754539395!0.7960740608289947!!!!!!!!!!!!!!!!!!!!!!!!
bncnn!2.0!15-10-07!0.0001!0.6281460523605347!70.0!<class 'torchdeepretina.models.BNCNN'>!True![8, 8]!bncnn/results.txt!0.005!!1.0!0.0001!False!0.677601628830234!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4119885971783453!all!!0.05!0.15316902335470786!naturalscene!!!0.6345154778743729!-3.740650052038972!512.0!-3.554465472100128!bncnn/bncnn_2_lr0.005_l20.0001!0.701292396278688!0.5512948052398405!0.6099223079583834!0.7697445206168017!0.755754114057456!!!!!!!!!!!!!!!!!!!!!!!!
bncnn!3.0!15-10-07!0.001!0.6285377740859985!70.0!<class 'torchdeepretina.models.BNCNN'>!True![8, 8]!bncnn/results.txt!0.001!!1.0!0.0001!False!0.6974588975700906!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.34113061199440475!all!!0.05!0.10117530152112074!naturalscene!!!0.5762997271723732!-3.5736890220354405!512.0!-3.54254016471823!bncnn/bncnn_3_lr0.001_l20.001!0.7284907099764251!0.6268114766958782!0.5886000623480675!0.7621078599907132!0.7812843788393689!!!!!!!!!!!!!!!!!!!!!!!!
bncnn!4.0!15-10-07!0.0001!0.6870697140693665!70.0!<class 'torchdeepretina.models.BNCNN'>!True![8, 8]!bncnn/results.txt!0.001!!1.0!0.0001!False!0.6735441593091481!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.33950015841296194!all!!0.05!0.0990840428998474!naturalscene!!!0.5892793347330554!-3.9590707562448033!512.0!-3.7276022565340097!bncnn/bncnn_4_lr0.001_l20.0001!0.717993898294103!0.562210040010767!0.5381792828613062!0.7706176005048474!0.7787199748747173!!!!!!!!!!!!!!!!!!!!!!!!
bncnn!5.0!15-10-07!0.001!0.661774754524231!70.0!<class 'torchdeepretina.models.BNCNN'>!True![8, 8]!bncnn/results.txt!0.0005!!1.0!0.0001!False!0.6893112328725725!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.33858247936086266!all!!0.05!0.10829852772400593!naturalscene!!!0.5746303580082076!-3.662562555677032!512.0!-3.8323723460278414!bncnn/bncnn_5_lr0.0005_l20.001!0.7146653814240381!0.5811679195221566!0.6160054676112566!0.761452954798391!0.7732644410070193!!!!!!!!!!!!!!!!!!!!!!!!
bncnn!6.0!15-10-07!0.0001!0.6953994631767273!70.0!<class 'torchdeepretina.models.BNCNN'>!True![8, 8]!bncnn/results.txt!0.0005!!1.0!0.0001!False!0.6443476976410407!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3425795105617491!all!!0.05!0.09693088550660048!naturalscene!!!0.5819391473962081!-3.946459060340985!512.0!-3.6223994918342215!bncnn/bncnn_6_lr0.0005_l20.0001!0.709871270503674!0.5466229735832778!0.5178503099288084!0.7004082428215216!0.7469856913679216!!!!!!!!!!!!!!!!!!!!!!!!
dalesskip!0.0!15-10-07!0.001!0.3894068598747253!70.0!<class 'torchdeepretina.models.DalesSkipBNCNN'>!True![8, 8]!dalesskip/results.txt!0.01!!0.0!1e-05!False!0.4796238070340021!DalesSkipBNCNN(#  (sequential): Sequential(#    (0): DalesSkipConnection(#      (sequential): Sequential(#        (0): AbsConv2d(#          (conv): Conv2d(40, 2, kernel_size=(15, 15), stride=(1, 1), padding=(7, 7))#        )#        (1): Flatten()#        (2): BatchNorm1d(5000, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (3): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#        (4): ReLU()#        (5): Reshape()#        (6): DaleActivations(n_chan=2, neg_p=1, n_neg_chan=2)#      )#    )#    (1): AbsConv2d(#      (conv): Conv2d(42, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (2): Flatten()#    (3): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (4): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (5): ReLU()#    (6): Reshape()#    (7): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (8): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (12): ReLU()#    (13): Reshape()#    (14): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (15): Flatten()#    (16): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (17): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (18): Softplus(beta=1, threshold=20)#  )#)#!0.5373681812233735!all!!0.05!0.11700576975085705!naturalscene!!!0.6886459030151083!-1.6057454965458018!512.0!-1.6204155109140632!dalesskip/dalesskip_0_lr0.01!0.4656772130420816!0.2632533835056428!0.3888923766482963!0.5673324978571713!0.7129635641168183!!!!!!!!!!!!!!!!!!!!!!!!
dalesskip!1.0!15-10-07!0.001!0.5207783579826355!70.0!<class 'torchdeepretina.models.DalesSkipBNCNN'>!True![8, 8]!dalesskip/results.txt!0.001!!0.0!1e-05!False!0.6389544203491377!DalesSkipBNCNN(#  (sequential): Sequential(#    (0): DalesSkipConnection(#      (sequential): Sequential(#        (0): AbsConv2d(#          (conv): Conv2d(40, 2, kernel_size=(15, 15), stride=(1, 1), padding=(7, 7))#        )#        (1): Flatten()#        (2): BatchNorm1d(5000, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (3): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#        (4): ReLU()#        (5): Reshape()#        (6): DaleActivations(n_chan=2, neg_p=1, n_neg_chan=2)#      )#    )#    (1): AbsConv2d(#      (conv): Conv2d(42, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (2): Flatten()#    (3): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (4): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (5): ReLU()#    (6): Reshape()#    (7): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (8): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (12): ReLU()#    (13): Reshape()#    (14): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (15): Flatten()#    (16): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (17): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (18): Softplus(beta=1, threshold=20)#  )#)#!0.5627837822341828!all!!0.05!0.124958641516157!naturalscene!!!0.7259198563273648!-2.540341563713856!512.0!-2.6258775251833866!dalesskip/dalesskip_1_lr0.001!0.6702755398864275!0.4974582432727018!0.5447160313893243!0.7329258241887834!0.7493964630084521!!!!!!!!!!!!!!!!!!!!!!!!
dalesskip!2.0!15-10-07!0.001!0.5308011174201965!70.0!<class 'torchdeepretina.models.DalesSkipBNCNN'>!True![8, 8]!dalesskip/results.txt!0.0001!!0.0!1e-05!False!0.655176147687215!DalesSkipBNCNN(#  (sequential): Sequential(#    (0): DalesSkipConnection(#      (sequential): Sequential(#        (0): AbsConv2d(#          (conv): Conv2d(40, 2, kernel_size=(15, 15), stride=(1, 1), padding=(7, 7))#        )#        (1): Flatten()#        (2): BatchNorm1d(5000, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (3): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#        (4): ReLU()#        (5): Reshape()#        (6): DaleActivations(n_chan=2, neg_p=1, n_neg_chan=2)#      )#    )#    (1): AbsConv2d(#      (conv): Conv2d(42, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (2): Flatten()#    (3): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (4): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (5): ReLU()#    (6): Reshape()#    (7): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (8): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (12): ReLU()#    (13): Reshape()#    (14): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (15): Flatten()#    (16): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (17): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (18): Softplus(beta=1, threshold=20)#  )#)#!0.3653637412556117!all!!0.05!0.12507923711029448!naturalscene!!!0.6119654757970762!-2.6461675729866663!512.0!-2.822022361188192!dalesskip/dalesskip_2_lr0.0001!0.6782867098215004!0.5544793850286553!0.5940855317703405!0.7349728159643873!0.7140562958511908!!!!!!!!!!!!!!!!!!!!!!!!
dalesskip!3.0!15-10-07!0.001!0.507881760597229!70.0!<class 'torchdeepretina.models.DalesSkipBNCNN'>!True![8, 8]!dalesskip/results.txt!1e-05!!0.0!1e-05!False!0.6236771371734968!DalesSkipBNCNN(#  (sequential): Sequential(#    (0): DalesSkipConnection(#      (sequential): Sequential(#        (0): AbsConv2d(#          (conv): Conv2d(40, 2, kernel_size=(15, 15), stride=(1, 1), padding=(7, 7))#        )#        (1): Flatten()#        (2): BatchNorm1d(5000, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (3): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#        (4): ReLU()#        (5): Reshape()#        (6): DaleActivations(n_chan=2, neg_p=1, n_neg_chan=2)#      )#    )#    (1): AbsConv2d(#      (conv): Conv2d(42, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (2): Flatten()#    (3): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (4): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (5): ReLU()#    (6): Reshape()#    (7): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (8): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (12): ReLU()#    (13): Reshape()#    (14): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (15): Flatten()#    (16): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (17): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (18): Softplus(beta=1, threshold=20)#  )#)#!0.4578879199347461!all!!0.05!0.16458227220607852!naturalscene!!!0.7413022757119558!-1.836886234109488!512.0!-1.8525092042820688!dalesskip/dalesskip_3_lr1e-05!0.6592407803219781!0.5276448251216281!0.5313255214664073!0.6576750793460938!0.7424994796113769!!!!!!!!!!!!!!!!!!!!!!!!
dalesskip!4.0!15-10-07!0.001!0.4360457956790924!70.0!<class 'torchdeepretina.models.DalesSkipBNCNN'>!True![8, 8]!dalesskip/results.txt!1e-06!!0.0!1e-05!False!0.5232283042976681!DalesSkipBNCNN(#  (sequential): Sequential(#    (0): DalesSkipConnection(#      (sequential): Sequential(#        (0): AbsConv2d(#          (conv): Conv2d(40, 2, kernel_size=(15, 15), stride=(1, 1), padding=(7, 7))#        )#        (1): Flatten()#        (2): BatchNorm1d(5000, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (3): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#        (4): ReLU()#        (5): Reshape()#        (6): DaleActivations(n_chan=2, neg_p=1, n_neg_chan=2)#      )#    )#    (1): AbsConv2d(#      (conv): Conv2d(42, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (2): Flatten()#    (3): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (4): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (5): ReLU()#    (6): Reshape()#    (7): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (8): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (12): ReLU()#    (13): Reshape()#    (14): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (15): Flatten()#    (16): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (17): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (18): Softplus(beta=1, threshold=20)#  )#)#!0.2987369321479381!all!!0.05!0.14884719697798868!naturalscene!!!0.4219893403777433!-1.2585422244614066!512.0!-1.5147592277156945!dalesskip/dalesskip_4_lr1e-06!0.5660587932352685!0.3977597368731767!0.43723043134981465!0.5644078071391787!0.6506847528909019!!!!!!!!!!!!!!!!!!!!!!!!
practicalmeanbncnn!0.0!15-10-07!0.001!0.33478888869285583!50.0!<class 'torchdeepretina.models.PracticalMeanBNCNN'>!True![8, 8]!practicalmeanbncnn/results.txt!0.01!!0.0!5e-05!False!0.4020591289090232!PracticalMeanBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.125)#    (2): ReLU()#    (3): Flatten()#    (4): MeanOnlyBatchNorm1d()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.25)#    (8): ReLU()#    (9): Flatten()#    (10): MeanOnlyBatchNorm1d()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3122152565441853!all!!0.25!0.16407642330782682!naturalscene!!!0.4771290275035195!-1.2921834408332276!512.0!-1.311324432524998!practicalmeanbncnn/practicalmeanbncnn_0_lr0.01_l20.001!0.3700203363089715!0.2531170851332771!0.3069842935696223!0.41368671851472505!0.6664872110185203!!!!!!!!!!!!!!!!!!!!!!!!
practicalmeanbncnn!1.0!15-10-07!0.0001!0.5371328592300415!50.0!<class 'torchdeepretina.models.PracticalMeanBNCNN'>!True![8, 8]!practicalmeanbncnn/results.txt!0.01!!0.0!5e-05!False!0.6751907319782353!PracticalMeanBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.125)#    (2): ReLU()#    (3): Flatten()#    (4): MeanOnlyBatchNorm1d()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.25)#    (8): ReLU()#    (9): Flatten()#    (10): MeanOnlyBatchNorm1d()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4122587701542136!all!!0.25!0.09947229469232853!naturalscene!!!0.7143239330601073!-3.014036803583574!512.0!-3.083989274556734!practicalmeanbncnn/practicalmeanbncnn_1_lr0.01_l20.0001!0.6917833322571616!0.6129944743274391!0.6264224184211092!0.7454918939897947!0.6992615408956718!!!!!!!!!!!!!!!!!!!!!!!!
practicalmeanbncnn!2.0!15-10-07!0.001!0.5085324645042419!50.0!<class 'torchdeepretina.models.PracticalMeanBNCNN'>!True![8, 8]!practicalmeanbncnn/results.txt!0.005!!0.0!5e-05!False!0.6445183206721734!PracticalMeanBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.125)#    (2): ReLU()#    (3): Flatten()#    (4): MeanOnlyBatchNorm1d()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.25)#    (8): ReLU()#    (9): Flatten()#    (10): MeanOnlyBatchNorm1d()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4461776891210077!all!!0.25!0.1651973914595929!naturalscene!!!0.7276119988115646!-2.7836622570614646!512.0!-2.933456405004108!practicalmeanbncnn/practicalmeanbncnn_2_lr0.005_l20.001!0.6702571669359981!0.5951096408547855!0.5839270064646627!0.7310846996437277!0.6422130894616932!!!!!!!!!!!!!!!!!!!!!!!!
practicalmeanbncnn!3.0!15-10-07!0.0001!0.5493503808975221!50.0!<class 'torchdeepretina.models.PracticalMeanBNCNN'>!True![8, 8]!practicalmeanbncnn/results.txt!0.005!!0.0!5e-05!False!0.6730311060903555!PracticalMeanBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.125)#    (2): ReLU()#    (3): Flatten()#    (4): MeanOnlyBatchNorm1d()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.25)#    (8): ReLU()#    (9): Flatten()#    (10): MeanOnlyBatchNorm1d()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.38468072735144143!all!!0.25!0.0935244079669246!naturalscene!!!0.6562512337115028!-3.0746583933204548!512.0!-3.06315997265483!practicalmeanbncnn/practicalmeanbncnn_3_lr0.005_l20.0001!0.6915456571245638!0.6353134328409638!0.6130559209676112!0.7242307281261066!0.7010097913925325!!!!!!!!!!!!!!!!!!!!!!!!
practicalmeanbncnn!4.0!15-10-07!0.001!0.5877969861030579!50.0!<class 'torchdeepretina.models.PracticalMeanBNCNN'>!True![8, 8]!practicalmeanbncnn/results.txt!0.001!!0.0!5e-05!False!0.7024181793125305!PracticalMeanBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.125)#    (2): ReLU()#    (3): Flatten()#    (4): MeanOnlyBatchNorm1d()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.25)#    (8): ReLU()#    (9): Flatten()#    (10): MeanOnlyBatchNorm1d()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3882272569628956!all!!0.25!0.11537548382505898!naturalscene!!!0.6696458729167655!-3.1970323340385747!512.0!-3.5717763304695835!practicalmeanbncnn/practicalmeanbncnn_4_lr0.001_l20.001!0.7214045079714285!0.6302740873664475!0.6229614885680711!0.7519622625689936!0.7854885500877119!!!!!!!!!!!!!!!!!!!!!!!!
practicalmeanbncnn!5.0!15-10-07!0.0001!0.5970863103866577!50.0!<class 'torchdeepretina.models.PracticalMeanBNCNN'>!True![8, 8]!practicalmeanbncnn/results.txt!0.001!!0.0!5e-05!False!0.6884802908130639!PracticalMeanBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.125)#    (2): ReLU()#    (3): Flatten()#    (4): MeanOnlyBatchNorm1d()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.25)#    (8): ReLU()#    (9): Flatten()#    (10): MeanOnlyBatchNorm1d()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3723515812586203!all!!0.25!0.10325108678704696!naturalscene!!!0.6384046493132862!-3.3700327057824047!512.0!-3.3046349172265765!practicalmeanbncnn/practicalmeanbncnn_5_lr0.001_l20.0001!0.7133030569005022!0.6128940377355045!0.6234656788694891!0.7437323478543363!0.7490063327054879!!!!!!!!!!!!!!!!!!!!!!!!
practicalmeanbncnn!6.0!15-10-07!0.001!0.5909155607223511!50.0!<class 'torchdeepretina.models.PracticalMeanBNCNN'>!True![8, 8]!practicalmeanbncnn/results.txt!0.0001!!0.0!5e-05!False!0.6890130526127587!PracticalMeanBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.125)#    (2): ReLU()#    (3): Flatten()#    (4): MeanOnlyBatchNorm1d()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.25)#    (8): ReLU()#    (9): Flatten()#    (10): MeanOnlyBatchNorm1d()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.36318547043564936!all!!0.25!0.09807860430872734!naturalscene!!!0.6055750755951635!-3.1954679515207154!512.0!-3.172763458220652!practicalmeanbncnn/practicalmeanbncnn_6_lr0.0001_l20.001!0.7301713438045204!0.5965305783146325!0.6155453384570428!0.7625835776712052!0.7402344248163923!!!!!!!!!!!!!!!!!!!!!!!!
practicalmeanbncnn!7.0!15-10-07!0.0001!0.5868760347366333!50.0!<class 'torchdeepretina.models.PracticalMeanBNCNN'>!True![8, 8]!practicalmeanbncnn/results.txt!0.0001!!0.0!5e-05!False!0.6911913910426917!PracticalMeanBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.125)#    (2): ReLU()#    (3): Flatten()#    (4): MeanOnlyBatchNorm1d()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.25)#    (8): ReLU()#    (9): Flatten()#    (10): MeanOnlyBatchNorm1d()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3674375173571865!all!!0.25!0.10254105413391358!naturalscene!!!0.6206147845801518!-3.138765951177473!512.0!-3.177856418689771!practicalmeanbncnn/practicalmeanbncnn_7_lr0.0001_l20.0001!0.7249151330096641!0.6375540662713247!0.6304076306589059!0.7553013851686144!0.7077787401049491!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!52.0!15-10-07!0.001!0.5399245023727417!85.0!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![10, 10]!absbnbncnn/results.txt!0.006999999999999999!!52.0!0.0001!False!0.6784158445154137!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 10, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(10, 10, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=6760, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4405858105292567!all!!0.1!0.14383089258891754!naturalscene!!!0.6468977531174582!-3.0038218633082123!512.0!-2.9357738233549755!absbnbncnn/absbnbncnn_52_lr0.007_chans[10, 10]!0.6979535200290597!0.6158191358467889!0.5967945920412321!0.7460382851012356!0.7354736895587521!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!53.0!15-10-07!0.001!0.5560445189476013!85.0!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![12, 12]!absbnbncnn/results.txt!0.006999999999999999!!52.0!0.0001!False!0.6837617258729489!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 12, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(12, 12, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=8112, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4090953810771106!all!!0.1!0.1500873220548099!naturalscene!!!0.6824536830348975!-3.0572602752466898!512.0!-3.068256038245454!absbnbncnn/absbnbncnn_53_lr0.007_chans[12, 12]!0.7180632855220372!0.6124559123368836!0.6173298310944871!0.7468417715146375!0.7241178288966992!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!54.0!15-10-07!0.001!0.5537539720535278!85.0!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![14, 14]!absbnbncnn/results.txt!0.006999999999999999!!52.0!0.0001!False!0.6937052264340805!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 14, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(14, 14, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=9464, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4164280730565201!all!!0.1!0.1557824769626229!naturalscene!!!0.6526862151795565!-3.067173482066366!512.0!-3.1491870978752567!absbnbncnn/absbnbncnn_54_lr0.007_chans[14, 14]!0.7026622856227432!0.6379294708120973!0.603839623986512!0.7539366164239929!0.7701581353250574!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!55.0!15-10-07!0.001!0.5647026300430298!85.0!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![18, 18]!absbnbncnn/results.txt!0.006999999999999999!!52.0!0.0001!False!0.7024403182250942!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 18, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(18, 18, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=12168, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4446050788284945!all!!0.1!0.15869621244025006!naturalscene!!!0.6983851651322964!-3.0830936014742147!512.0!-3.020285425978364!absbnbncnn/absbnbncnn_55_lr0.007_chans[18, 18]!0.7344584218789236!0.622443098669128!0.6245481183598792!0.7585600363965325!0.7721919158210084!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!56.0!15-10-07!0.001!0.6166962385177612!85.0!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![10, 10]!absbnbncnn/results.txt!0.001!!52.0!0.0001!False!0.7181983001146246!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 10, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(10, 10, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=6760, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3424688035926854!all!!0.1!0.13269434949994507!naturalscene!!!0.5827782348843654!-3.4401590669496747!512.0!-3.6254300316730217!absbnbncnn/absbnbncnn_56_lr0.001_chans[10, 10]!0.7374366916975835!0.6375349872904077!0.6240910536191092!0.7809592646442325!0.8109695033217901!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!57.0!15-10-07!0.001!0.6221537590026855!85.0!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![12, 12]!absbnbncnn/results.txt!0.001!!52.0!0.0001!False!0.7296393486975459!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 12, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(12, 12, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=8112, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3724136988494559!all!!0.1!0.13649261200376642!naturalscene!!!0.5819462300177961!-3.4086858463862724!512.0!-3.229655254057433!absbnbncnn/absbnbncnn_57_lr0.001_chans[12, 12]!0.76951724197465!0.6150919087093066!0.6534434516720279!0.7963911648433307!0.8137529762884143!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!58.0!15-10-07!0.001!0.6154800057411194!85.0!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![14, 14]!absbnbncnn/results.txt!0.001!!52.0!0.0001!False!0.7333298432503259!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 14, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(14, 14, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=9464, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3724265343266411!all!!0.1!0.12479392050948013!naturalscene!!!0.6059489086846028!-3.3740410743615565!512.0!-3.1371123686905777!absbnbncnn/absbnbncnn_58_lr0.001_chans[14, 14]!0.7753731306943124!0.6638788492307904!0.6310414755975375!0.7876733463016451!0.808682414427344!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!59.0!15-10-07!0.001!0.6196966171264648!85.0!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![18, 18]!absbnbncnn/results.txt!0.001!!52.0!0.0001!False!0.7203616999280097!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 18, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(18, 18, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=12168, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.38623436735794!all!!0.1!0.12301322206820466!naturalscene!!!0.6673926473237508!-3.329116469774492!512.0!-3.039629488497667!absbnbncnn/absbnbncnn_59_lr0.001_chans[18, 18]!0.7643225513094931!0.6146221498454193!0.6450643206924217!0.7477269892313421!0.8300724885613728!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!60.0!15-10-07!0.001!0.6279265284538269!85.0!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![10, 10]!absbnbncnn/results.txt!0.0005!!52.0!0.0001!False!0.7352902060473074!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 10, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(10, 10, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=6760, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.35565674716013723!all!!0.1!0.09213907071428612!naturalscene!!!0.6257097108669829!-3.460608425543138!512.0!-3.2947783948380684!absbnbncnn/absbnbncnn_60_lr0.0005_chans[10, 10]!0.7486903995058048!0.6603555075695375!0.6491754436086914!0.7870769900313627!0.8311526895211411!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!61.0!15-10-07!0.001!0.6382166147232056!85.0!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![12, 12]!absbnbncnn/results.txt!0.0005!!52.0!0.0001!False!0.7061256270139304!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 12, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(12, 12, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=8112, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3484639705387972!all!!0.1!0.13241748430231987!naturalscene!!!0.5956108549431804!-3.546645037099427!512.0!-3.4338971350676735!absbnbncnn/absbnbncnn_61_lr0.0005_chans[12, 12]!0.7331596202499462!0.6420309726139415!0.5913994854685959!0.7742332825037962!0.7898047742333725!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!62.0!15-10-07!0.001!0.6355225443840027!85.0!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![14, 14]!absbnbncnn/results.txt!0.0005!!52.0!0.0001!False!0.7109497971362094!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 14, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(14, 14, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=9464, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3442065156579984!all!!0.1!0.12153855142725015!naturalscene!!!0.5639077187972745!-3.5585499636907563!512.0!-3.4073686743809963!absbnbncnn/absbnbncnn_62_lr0.0005_chans[14, 14]!0.7245885607866246!0.6501046526981165!0.5869261952976773!0.7757174251573951!0.817412151741234!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!63.0!15-10-07!0.001!0.6605109572410583!85.0!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![18, 18]!absbnbncnn/results.txt!0.0005!!52.0!0.0001!False!0.7314612931919375!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 18, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(18, 18, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=12168, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3507510922217681!all!!0.1!0.10956363200108124!naturalscene!!!0.6134863059528398!-3.631352676165768!512.0!-3.5084322528906338!absbnbncnn/absbnbncnn_63_lr0.0005_chans[18, 18]!0.7361446655985943!0.6545239904649242!0.6371180653911555!0.7879712470437958!0.8415484974612181!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!64.0!15-10-07!0.001!0.6374444961547852!85.0!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![10, 10]!absbnbncnn/results.txt!0.0001!!52.0!0.0001!False!0.6757732625037155!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 10, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(10, 10, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=6760, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.33080297190214725!all!!0.1!0.08409848507395483!naturalscene!!!0.5928209572972906!-3.5175245928368777!512.0!-3.5308439926469872!absbnbncnn/absbnbncnn_64_lr0.0001_chans[10, 10]!0.7106475207332914!0.615712592472051!0.5697490867558677!0.7530175668408212!0.7297395457165463!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!65.0!15-10-07!0.001!0.647318959236145!85.0!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![12, 12]!absbnbncnn/results.txt!0.0001!!52.0!0.0001!False!0.688022571241657!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 12, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(12, 12, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=8112, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3338577464399425!all!!0.1!0.08161055646773363!naturalscene!!!0.6106332369306133!-3.5625131633666487!512.0!-3.5486111834172336!absbnbncnn/absbnbncnn_65_lr0.0001_chans[12, 12]!0.7268158406127243!0.6097187283751622!0.5892730810597773!0.7697146077214078!0.7445905984392137!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!66.0!15-10-07!0.001!0.6555579304695129!85.0!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![14, 14]!absbnbncnn/results.txt!0.0001!!52.0!0.0001!False!0.6847654204635266!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 14, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(14, 14, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=9464, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3343648377630897!all!!0.1!0.08662543929486502!naturalscene!!!0.6087994738836574!-3.605575490501312!512.0!-3.5088033971165715!absbnbncnn/absbnbncnn_66_lr0.0001_chans[14, 14]!0.7152859283797897!0.5766052233923276!0.6004911640215348!0.7469206211026328!0.7845241654213484!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!67.0!15-10-07!0.001!0.6748298406600952!85.0!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![18, 18]!absbnbncnn/results.txt!0.0001!!52.0!0.0001!False!0.6882629492436007!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 18, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(18, 18, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=12168, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3222539331632203!all!!0.1!0.09844769097497487!naturalscene!!!0.5585849597703665!-3.656154806617518!512.0!-3.6010000078196764!absbnbncnn/absbnbncnn_67_lr0.0001_chans[18, 18]!0.7358321424915257!0.6109802572904923!0.551538187853305!0.7648577121683466!0.7781064464143331!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!68.0!15-10-07!0.001!0.6238882541656494!70.0!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![10, 8]!absbnbncnn/results.txt!0.001!!68.0!0.0001!False!0.7361639759196503!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 10, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(10, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3498114949136261!all!!0.1!0.13193681655180145!naturalscene!!!0.6402449319360913!-3.4132570502984576!512.0!-3.1826914277284235!absbnbncnn/absbnbncnn_68_lr0.001_chans[10, 8]!0.7630847094667574!0.6514609383058673!0.6597180903731641!0.7754610053628421!0.8310951360896202!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!69.0!15-10-07!0.001!0.6171442270278931!70.0!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![12, 8]!absbnbncnn/results.txt!0.001!!68.0!0.0001!False!0.7277536288012288!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 12, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(12, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3675476125287744!all!!0.1!0.13795621636248115!naturalscene!!!0.5833112614647104!-3.3813323476555484!512.0!-3.340402796811395!absbnbncnn/absbnbncnn_69_lr0.001_chans[12, 8]!0.7525063130736537!0.6416119747260625!0.6369138779080279!0.7722490391535058!0.8354869391448944!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!70.0!15-10-07!0.001!0.5829132199287415!70.0!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![12, 10]!absbnbncnn/results.txt!0.001!!68.0!0.0001!False!0.6964920854485689!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 12, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(12, 10, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=6760, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3796849266506439!all!!0.1!0.12941788080090708!naturalscene!!!0.6200055632252721!-3.3217058989077493!512.0!-3.213057222172938!absbnbncnn/absbnbncnn_70_lr0.001_chans[12, 10]!0.6952664576624434!0.6338587347380528!0.6067325421467602!0.7545004329893485!0.7921022597062396!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!71.0!15-10-07!0.001!0.616470217704773!70.0!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![10, 8]!absbnbncnn/results.txt!0.0005!!68.0!0.0001!False!0.7266500563637431!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 10, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(10, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3807144716494748!all!!0.1!0.13571274650420725!naturalscene!!!0.5782329311814596!-3.4330753026864467!512.0!-3.295411198891816!absbnbncnn/absbnbncnn_71_lr0.0005_chans[10, 8]!0.7282561155461108!0.6454600286829583!0.6585786245200008!0.7725528495773759!0.8284026634922701!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!72.0!15-10-07!0.001!0.635663628578186!70.0!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![12, 8]!absbnbncnn/results.txt!0.0005!!68.0!0.0001!False!0.7134813467140271!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 12, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(12, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.32462794030484304!all!!0.1!0.1300767414222801!naturalscene!!!0.5993431338041575!-3.416285938267255!512.0!-3.538566963413905!absbnbncnn/absbnbncnn_72_lr0.0005_chans[12, 8]!0.7411126346491879!0.6468089315972972!0.590614710529534!0.7685827641797938!0.8202876926143227!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!73.0!15-10-07!0.001!0.5990094542503357!70.0!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![12, 10]!absbnbncnn/results.txt!0.0005!!68.0!0.0001!False!0.6718134842392415!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 12, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(12, 10, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=6760, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3814363410594934!all!!0.1!0.1361870642956336!naturalscene!!!0.6443322070215689!-3.4623796269185223!512.0!-3.0900440530240303!absbnbncnn/absbnbncnn_73_lr0.0005_chans[12, 10]!0.6930160484309069!0.5984106686594569!0.5741577792040381!0.7064152641371165!0.7870676607646889!!!!!!!!!!!!!!!!!!!!!!!!
repeatability!0.0!15-10-07!0.001!0.598263144493103!70.0!<class 'torchdeepretina.models.BNCNN'>!True![8, 8]!repeatability/results.txt!0.0025!!0.0!0.0001!False!0.6945236420417724!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3629826359640471!all!!0.05!0.11253468449043616!naturalscene!!!0.6141049236048562!-3.4089135091588867!512.0!-3.2148587476909603!repeatability/repeatability_0_lr0.0025_noise0.05!0.7088295099642302!0.6030740124704875!0.5939693917333254!0.7620789115562014!0.8046663844846176!!!!!!!!!!!!!!!!!!!!!!!!
repeatability!1.0!15-10-07!0.001!0.581103503704071!70.0!<class 'torchdeepretina.models.BNCNN'>!True![8, 8]!repeatability/results.txt!0.0025!!0.0!0.0001!False!0.7129538285105278!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3699873820318521!all!!0.1!0.10023708191005187!naturalscene!!!0.6204159185972359!-3.242257546515486!512.0!-3.2417783623128344!repeatability/repeatability_1_lr0.0025_noise0.1!0.7055916004306834!0.6475537433418593!0.6477406192409538!0.7552682984100844!0.8086148811290583!!!!!!!!!!!!!!!!!!!!!!!!
repeatability!2.0!15-10-07!0.001!0.5933810472488403!70.0!<class 'torchdeepretina.models.BNCNN'>!True![8, 8]!repeatability/results.txt!0.0025!!0.0!0.0001!False!0.6983685863055625!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.35268256269286713!all!!0.05!0.1077576613791855!naturalscene!!!0.6545932416141242!-3.3916230609873663!512.0!-3.381704365597761!repeatability/repeatability_2_lr0.0025_noise0.05!0.7365796400187479!0.622407843069559!0.6077781689198913!0.7476747795107997!0.7774025000088148!!!!!!!!!!!!!!!!!!!!!!!!
repeatability!3.0!15-10-07!0.001!0.5597920417785645!70.0!<class 'torchdeepretina.models.BNCNN'>!True![8, 8]!repeatability/results.txt!0.0025!!0.0!0.0001!False!0.6914029911316568!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4194638947233512!all!!0.1!0.17960328807382858!naturalscene!!!0.6395568346140714!-3.1610318792711376!512.0!-3.07856733617482!repeatability/repeatability_3_lr0.0025_noise0.1!0.7072253904857366!0.6173131496864684!0.6219090523087427!0.747144434708226!0.7634229284691102!!!!!!!!!!!!!!!!!!!!!!!!
repeatability!4.0!15-10-07!0.001!0.6030332446098328!70.0!<class 'torchdeepretina.models.BNCNN'>!True![8, 8]!repeatability/results.txt!0.0025!!0.0!0.0001!False!0.7036084728752436!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3838949855071058!all!!0.05!0.1043202342001443!naturalscene!!!0.6493314518817784!-3.3747665467665025!512.0!-3.5652304509429085!repeatability/repeatability_4_lr0.0025_noise0.05!0.7319622834924209!0.6276374778750214!0.6448266263817917!0.7593675264438152!0.7542484501831689!!!!!!!!!!!!!!!!!!!!!!!!
repeatability!5.0!15-10-07!0.001!0.5939200520515442!70.0!<class 'torchdeepretina.models.BNCNN'>!True![8, 8]!repeatability/results.txt!0.0025!!0.0!0.0001!False!0.7101856837939755!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.41934405035527295!all!!0.1!0.10948742516576304!naturalscene!!!0.5956582072133638!-3.2646419223437304!512.0!-3.161426638037665!repeatability/repeatability_5_lr0.0025_noise0.1!0.7446525661599792!0.5858205506621224!0.6421321909796631!0.7564687436185439!0.8218543675495686!!!!!!!!!!!!!!!!!!!!!!!!
repeatability!10.0!15-10-07!0.001!0.6083119511604309!70.0!<class 'torchdeepretina.models.BNCNN'>!True![8, 8]!repeatability/results.txt!0.0025!!6.0!0.0001!True!0.6939834573413619!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3790370633838755!all!!0.1!0.09232434557270733!naturalscene!!!0.6566935203051946!-3.5115532844494552!512.0!-3.642461813615228!repeatability/repeatability_10_noise0.1_lr0.0025!0.7161080892104691!0.5942346886186655!0.5966302896191942!0.771465573964352!0.7914786452941288!!!!!!!!!!!!!!!!!!!!!!!!
repeatability!11.0!15-10-07!0.001!0.6063013672828674!70.0!<class 'torchdeepretina.models.BNCNN'>!True![8, 8]!repeatability/results.txt!0.0025!!6.0!0.0001!True!0.6847204288143727!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3755704965029593!all!!0.1!0.12626726479957234!naturalscene!!!0.6128411377826417!-3.5240118708545807!512.0!-3.28871415431604!repeatability/repeatability_11_noise0.1_lr0.0025!0.6979528516632171!0.6004383577992249!0.6147609022963857!0.7547116850365884!0.7557383472764475!!!!!!!!!!!!!!!!!!!!!!!!
repeatability!6.0!15-10-07!0.001!0.6010485887527466!70.0!<class 'torchdeepretina.models.BNCNN'>!True![8, 8]!repeatability/results.txt!0.0025!!6.0!0.0001!True!0.6816927033749408!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3672349132560031!all!!0.05!0.1014312206338733!naturalscene!!!0.6097898978508886!-3.5419689443855797!512.0!-3.2620599658410354!repeatability/repeatability_6_noise0.05_lr0.0025!0.7058603828333623!0.5909648222596647!0.5701478428781077!0.7652327905635721!0.7762576783399975!!!!!!!!!!!!!!!!!!!!!!!!
repeatability!7.0!15-10-07!0.001!0.6051474809646606!70.0!<class 'torchdeepretina.models.BNCNN'>!True![8, 8]!repeatability/results.txt!0.0025!!6.0!0.0001!True!0.6951382384319491!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3847246630858991!all!!0.05!0.12608759680013548!naturalscene!!!0.6278678238071959!-3.5983258557715208!512.0!-3.4342331335625205!repeatability/repeatability_7_noise0.05_lr0.0025!0.7201387688938571!0.6212870725989409!0.5955696735104126!0.7555739617079088!0.7831217154486262!!!!!!!!!!!!!!!!!!!!!!!!
repeatability!8.0!15-10-07!0.001!0.6046943664550781!70.0!<class 'torchdeepretina.models.BNCNN'>!True![8, 8]!repeatability/results.txt!0.0025!!6.0!0.0001!True!0.6685430527399178!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.378946274070812!all!!0.05!0.09909108677726944!naturalscene!!!0.6126032099875466!-3.5866409576136964!512.0!-3.4736378968314967!repeatability/repeatability_8_noise0.05_lr0.0025!0.7226491284051646!0.5822500327930679!0.5523965481383665!0.7213908790982909!0.7640286752646989!!!!!!!!!!!!!!!!!!!!!!!!
repeatability!9.0!15-10-07!0.001!0.6101062297821045!70.0!<class 'torchdeepretina.models.BNCNN'>!True![8, 8]!repeatability/results.txt!0.0025!!6.0!0.0001!True!0.7043439997267327!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.379163545349569!all!!0.1!0.1438095712593281!naturalscene!!!0.6506030034511313!-3.5680755531446247!512.0!-3.3726692801203173!repeatability/repeatability_9_noise0.1_lr0.0025!0.7208981250511165!0.618350140469036!0.6403409623384665!0.7548005054756671!0.7873302652993773!!!!!!!!!!!!!!!!!!!!!!!!
drone!0.0!15-10-07!!!!<class 'torchdeepretina.models.BNCNN'>!True![8, 8]!!!!!!False!0.7176220165331384!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.38827089418532656!all!!!0.15374126984010295!naturalscene!!!0.5543004495104654!!!!drone!0.7827878527239668!0.6201097695181608!0.6197668843714698!0.7846954233645296!0.7807501526875655!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!74.0!15-10-07!0.001!0.5539083480834961!85.0!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![10, 12]!absbnbncnn/results.txt!0.005!!74.0!0.0001!False!0.6958067617529606!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 10, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(10, 12, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=8112, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.43554732599432094!all!!0.1!0.15547746919848068!naturalscene!!!0.6702740087594297!-3.0561698389269107!512.0!-2.9712998648952635!absbnbncnn/absbnbncnn_74_lr0.005_chans[10, 12]!0.7107939289760958!0.6360004119679189!0.6245880333397796!0.7610146598022636!0.7466367746787453!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!75.0!15-10-07!0.001!0.5565077066421509!85.0!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![10, 14]!absbnbncnn/results.txt!0.005!!74.0!0.0001!False!0.6931418706232897!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 10, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(10, 14, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=9464, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4321431368400818!all!!0.1!0.16376224780224274!naturalscene!!!0.6858993690993018!-3.0836512432918286!512.0!-3.1115954628767213!absbnbncnn/absbnbncnn_75_lr0.005_chans[10, 14]!0.7207707992759569!0.6390707786094839!0.6088575976378378!0.7478529345914321!0.7491572430017375!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!76.0!15-10-07!0.001!0.5613074898719788!85.0!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![12, 14]!absbnbncnn/results.txt!0.005!!74.0!0.0001!False!0.6872710488077697!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 12, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(12, 14, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=9464, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.41635791737454414!all!!0.1!0.1617431051053522!naturalscene!!!0.6421614053905672!-3.0545570634608894!512.0!-3.1526917913928627!absbnbncnn/absbnbncnn_76_lr0.005_chans[12, 14]!0.7062713141406088!0.6164203115671366!0.6337435588983145!0.7513496265196307!0.7285704329131582!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!77.0!15-10-07!0.001!0.6131240129470825!85.0!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![10, 12]!absbnbncnn/results.txt!0.001!!74.0!0.0001!False!0.7375524511893236!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 10, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(10, 12, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=8112, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3646110034073279!all!!0.1!0.11622607743960862!naturalscene!!!0.5905617833707211!-3.4195965203045!512.0!-3.308094227466063!absbnbncnn/absbnbncnn_77_lr0.001_chans[10, 12]!0.7488207633690853!0.6403351097003203!0.6640484652601744!0.7936964870699447!0.8408614305470935!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!78.0!15-10-07!0.001!0.6296961903572083!85.0!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![10, 14]!absbnbncnn/results.txt!0.001!!74.0!0.0001!False!0.72266432447017!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 10, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(10, 14, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=9464, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3709409245075213!all!!0.1!0.17857789938808175!naturalscene!!!0.6079057224208573!-3.430877948778248!512.0!-3.5192758844568743!absbnbncnn/absbnbncnn_78_lr0.001_chans[10, 14]!0.754246508265111!0.6188365089467964!0.6516814737660971!0.7709850036405693!0.8175721277322764!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!79.0!15-10-07!0.001!0.6125084161758423!85.0!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![12, 14]!absbnbncnn/results.txt!0.001!!74.0!0.0001!False!0.7205945740632137!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 12, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(12, 14, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=9464, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.37635215073052747!all!!0.1!0.11828194104883988!naturalscene!!!0.6314144081926991!-3.4403310161909912!512.0!-3.3074370309739605!absbnbncnn/absbnbncnn_79_lr0.001_chans[12, 14]!0.7458131277596824!0.6508022791508071!0.6309857944316597!0.7592566644279202!0.8161150045459993!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!80.0!15-10-07!0.001!0.6220482587814331!85.0!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![10, 12]!absbnbncnn/results.txt!0.0005!!74.0!0.0001!False!0.7356072142645731!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 10, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(10, 12, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=8112, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3297329105311826!all!!0.1!0.12078484958813825!naturalscene!!!0.5399762393054772!-3.466324405432826!512.0!-3.2815799167525257!absbnbncnn/absbnbncnn_80_lr0.0005_chans[10, 12]!0.7523871347628502!0.6554106889401526!0.6603349948526376!0.7999626112038477!0.8099406415633771!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!81.0!15-10-07!0.001!0.6456187963485718!85.0!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![10, 14]!absbnbncnn/results.txt!0.0005!!74.0!0.0001!False!0.7226565382938563!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 10, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(10, 14, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=9464, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3823405703359559!all!!0.1!0.1109478095521188!naturalscene!!!0.5607250761617901!-3.5133975165282263!512.0!-3.5089970872904814!absbnbncnn/absbnbncnn_81_lr0.0005_chans[10, 14]!0.7504197556060879!0.6475358205748395!0.6251159803552581!0.7849805864535708!0.8052305484795255!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!82.0!15-10-07!0.001!0.6398096680641174!85.0!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![12, 14]!absbnbncnn/results.txt!0.0005!!74.0!0.0001!False!0.7386357172603532!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 12, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(12, 14, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=9464, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3356841735818927!all!!0.1!0.11746523953069125!naturalscene!!!0.5925621053670974!-3.550304062765648!512.0!-3.2461225984457998!absbnbncnn/absbnbncnn_82_lr0.0005_chans[12, 14]!0.7607231000535781!0.6444963696671888!0.6630974743143278!0.7855216231490656!0.8393400191176055!!!!!!!!!!!!!!!!!!!!!!!!
dalesdoubleskip!0.0!15-10-07!0.001!0.5094748735427856!70.0!<class 'torchdeepretina.models.DalesDoubleSkipBNCNN'>!True![8, 8]!dalesdoubleskip/results.txt!0.001!!0.0!1e-05!False!0.6399327040812159!DalesDoubleSkipBNCNN(#  (sequential): Sequential(#    (0): DalesSkipConnection(#      (sequential): Sequential(#        (0): AbsConv2d(#          (conv): Conv2d(40, 2, kernel_size=(15, 15), stride=(1, 1), padding=(7, 7))#        )#        (1): Flatten()#        (2): BatchNorm1d(5000, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (3): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#        (4): ReLU()#        (5): Reshape()#        (6): DaleActivations(n_chan=2, neg_p=1, n_neg_chan=2)#      )#    )#    (1): AbsConv2d(#      (conv): Conv2d(42, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (2): Flatten()#    (3): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (4): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (5): ReLU()#    (6): Reshape()#    (7): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (8): DalesSkipConnection(#      (sequential): Sequential(#        (0): AbsConv2d(#          (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), padding=(5, 5))#        )#        (1): Flatten()#        (2): BatchNorm1d(10368, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (3): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#        (4): ReLU()#        (5): Reshape()#        (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#      )#    )#    (9): Flatten()#    (10): AbsLinear(#      (linear): Linear(in_features=20736, out_features=5, bias=True)#    )#    (11): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (12): Softplus(beta=1, threshold=20)#  )#)#!0.5271096594693996!all!!0.05!0.12393425351734033!naturalscene!!!0.7033047577642976!-2.521547667985588!512.0!-2.4531513751291643!dalesdoubleskip/dalesdoubleskip_0_lr0.001_l20.001!0.6782653661382215!0.4617318180234116!0.5589588821510374!0.7223712973851085!0.7783361567083004!!!!!!!!!!!!!!!!!!!!!!!!
dalesdoubleskip!1.0!15-10-07!0.01!0.4426553249359131!70.0!<class 'torchdeepretina.models.DalesDoubleSkipBNCNN'>!True![8, 8]!dalesdoubleskip/results.txt!0.001!!0.0!1e-05!False!0.5510641348348895!DalesDoubleSkipBNCNN(#  (sequential): Sequential(#    (0): DalesSkipConnection(#      (sequential): Sequential(#        (0): AbsConv2d(#          (conv): Conv2d(40, 2, kernel_size=(15, 15), stride=(1, 1), padding=(7, 7))#        )#        (1): Flatten()#        (2): BatchNorm1d(5000, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (3): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#        (4): ReLU()#        (5): Reshape()#        (6): DaleActivations(n_chan=2, neg_p=1, n_neg_chan=2)#      )#    )#    (1): AbsConv2d(#      (conv): Conv2d(42, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (2): Flatten()#    (3): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (4): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (5): ReLU()#    (6): Reshape()#    (7): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (8): DalesSkipConnection(#      (sequential): Sequential(#        (0): AbsConv2d(#          (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), padding=(5, 5))#        )#        (1): Flatten()#        (2): BatchNorm1d(10368, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (3): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#        (4): ReLU()#        (5): Reshape()#        (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#      )#    )#    (9): Flatten()#    (10): AbsLinear(#      (linear): Linear(in_features=20736, out_features=5, bias=True)#    )#    (11): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (12): Softplus(beta=1, threshold=20)#  )#)#!0.4757688434230364!all!!0.05!0.14844672154070568!naturalscene!!!0.7079538166891184!-1.9159503451479687!512.0!-2.098411154919268!dalesdoubleskip/dalesdoubleskip_1_lr0.001_l20.01!0.6131800254618841!0.3075190145234029!0.4606068000624207!0.6723223093152201!0.7016925248115193!!!!!!!!!!!!!!!!!!!!!!!!
dalesdoubleskip!2.0!15-10-07!0.001!0.5186439752578735!70.0!<class 'torchdeepretina.models.DalesDoubleSkipBNCNN'>!True![8, 8]!dalesdoubleskip/results.txt!0.0001!!0.0!1e-05!False!0.6407723481373467!DalesDoubleSkipBNCNN(#  (sequential): Sequential(#    (0): DalesSkipConnection(#      (sequential): Sequential(#        (0): AbsConv2d(#          (conv): Conv2d(40, 2, kernel_size=(15, 15), stride=(1, 1), padding=(7, 7))#        )#        (1): Flatten()#        (2): BatchNorm1d(5000, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (3): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#        (4): ReLU()#        (5): Reshape()#        (6): DaleActivations(n_chan=2, neg_p=1, n_neg_chan=2)#      )#    )#    (1): AbsConv2d(#      (conv): Conv2d(42, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (2): Flatten()#    (3): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (4): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (5): ReLU()#    (6): Reshape()#    (7): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (8): DalesSkipConnection(#      (sequential): Sequential(#        (0): AbsConv2d(#          (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), padding=(5, 5))#        )#        (1): Flatten()#        (2): BatchNorm1d(10368, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (3): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#        (4): ReLU()#        (5): Reshape()#        (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#      )#    )#    (9): Flatten()#    (10): AbsLinear(#      (linear): Linear(in_features=20736, out_features=5, bias=True)#    )#    (11): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (12): Softplus(beta=1, threshold=20)#  )#)#!0.4618277946422582!all!!0.05!0.11358322975747945!naturalscene!!!0.7643614485428869!-2.453127323974312!512.0!-2.629346457583688!dalesdoubleskip/dalesdoubleskip_2_lr0.0001_l20.001!0.6851721706316883!0.4995028723636761!0.5586250478490437!0.7049807408084466!0.7555809090338791!!!!!!!!!!!!!!!!!!!!!!!!
dalesdoubleskip!3.0!15-10-07!0.01!0.4861560463905335!70.0!<class 'torchdeepretina.models.DalesDoubleSkipBNCNN'>!True![8, 8]!dalesdoubleskip/results.txt!0.0001!!0.0!1e-05!False!0.5998805859329657!DalesDoubleSkipBNCNN(#  (sequential): Sequential(#    (0): DalesSkipConnection(#      (sequential): Sequential(#        (0): AbsConv2d(#          (conv): Conv2d(40, 2, kernel_size=(15, 15), stride=(1, 1), padding=(7, 7))#        )#        (1): Flatten()#        (2): BatchNorm1d(5000, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (3): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#        (4): ReLU()#        (5): Reshape()#        (6): DaleActivations(n_chan=2, neg_p=1, n_neg_chan=2)#      )#    )#    (1): AbsConv2d(#      (conv): Conv2d(42, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (2): Flatten()#    (3): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (4): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (5): ReLU()#    (6): Reshape()#    (7): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (8): DalesSkipConnection(#      (sequential): Sequential(#        (0): AbsConv2d(#          (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), padding=(5, 5))#        )#        (1): Flatten()#        (2): BatchNorm1d(10368, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (3): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#        (4): ReLU()#        (5): Reshape()#        (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#      )#    )#    (9): Flatten()#    (10): AbsLinear(#      (linear): Linear(in_features=20736, out_features=5, bias=True)#    )#    (11): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (12): Softplus(beta=1, threshold=20)#  )#)#!0.4866895722681202!all!!0.05!0.17367264443228053!naturalscene!!!0.7254856225423512!-2.1566160753661507!512.0!-2.140718878917596!dalesdoubleskip/dalesdoubleskip_3_lr0.0001_l20.01!0.6380827694123806!0.42284095825923135!0.5130111674499719!0.6860507244235721!0.7394173101196725!!!!!!!!!!!!!!!!!!!!!!!!
dalesdoubleskip!4.0!15-10-07!0.001!0.5290235280990601!70.0!<class 'torchdeepretina.models.DalesDoubleSkipBNCNN'>!True![8, 8]!dalesdoubleskip/results.txt!1e-05!!0.0!1e-05!False!0.6064387059280569!DalesDoubleSkipBNCNN(#  (sequential): Sequential(#    (0): DalesSkipConnection(#      (sequential): Sequential(#        (0): AbsConv2d(#          (conv): Conv2d(40, 2, kernel_size=(15, 15), stride=(1, 1), padding=(7, 7))#        )#        (1): Flatten()#        (2): BatchNorm1d(5000, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (3): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#        (4): ReLU()#        (5): Reshape()#        (6): DaleActivations(n_chan=2, neg_p=1, n_neg_chan=2)#      )#    )#    (1): AbsConv2d(#      (conv): Conv2d(42, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (2): Flatten()#    (3): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (4): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (5): ReLU()#    (6): Reshape()#    (7): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (8): DalesSkipConnection(#      (sequential): Sequential(#        (0): AbsConv2d(#          (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), padding=(5, 5))#        )#        (1): Flatten()#        (2): BatchNorm1d(10368, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (3): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#        (4): ReLU()#        (5): Reshape()#        (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#      )#    )#    (9): Flatten()#    (10): AbsLinear(#      (linear): Linear(in_features=20736, out_features=5, bias=True)#    )#    (11): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (12): Softplus(beta=1, threshold=20)#  )#)#!0.4533233913385374!all!!0.05!0.10313128485247687!naturalscene!!!0.7431368770130742!-1.8001818349009011!512.0!-2.101465343719428!dalesdoubleskip/dalesdoubleskip_4_lr1e-05_l20.001!0.6499164351992508!0.4758970714734253!0.476568830904084!0.674963329091543!0.7548478629719818!!!!!!!!!!!!!!!!!!!!!!!!
dalesdoubleskip!5.0!15-10-07!0.01!0.4646638035774231!70.0!<class 'torchdeepretina.models.DalesDoubleSkipBNCNN'>!True![8, 8]!dalesdoubleskip/results.txt!1e-05!!0.0!1e-05!False!0.5361273962018438!DalesDoubleSkipBNCNN(#  (sequential): Sequential(#    (0): DalesSkipConnection(#      (sequential): Sequential(#        (0): AbsConv2d(#          (conv): Conv2d(40, 2, kernel_size=(15, 15), stride=(1, 1), padding=(7, 7))#        )#        (1): Flatten()#        (2): BatchNorm1d(5000, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (3): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#        (4): ReLU()#        (5): Reshape()#        (6): DaleActivations(n_chan=2, neg_p=1, n_neg_chan=2)#      )#    )#    (1): AbsConv2d(#      (conv): Conv2d(42, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (2): Flatten()#    (3): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (4): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (5): ReLU()#    (6): Reshape()#    (7): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (8): DalesSkipConnection(#      (sequential): Sequential(#        (0): AbsConv2d(#          (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), padding=(5, 5))#        )#        (1): Flatten()#        (2): BatchNorm1d(10368, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (3): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#        (4): ReLU()#        (5): Reshape()#        (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#      )#    )#    (9): Flatten()#    (10): AbsLinear(#      (linear): Linear(in_features=20736, out_features=5, bias=True)#    )#    (11): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (12): Softplus(beta=1, threshold=20)#  )#)#!0.5212522037965901!all!!0.05!0.17761669126416516!naturalscene!!!0.7559118177485157!-1.4802480094685453!512.0!-1.4211691505557609!dalesdoubleskip/dalesdoubleskip_5_lr1e-05_l20.01!0.5821432513588898!0.4165218237709197!0.4572913505347441!0.6007998028151249!0.6238807525295401!!!!!!!!!!!!!!!!!!!!!!!!
bncnnbnormmomentum!0.0!15-10-07!0.001!0.570519745349884!70.0!<class 'torchdeepretina.models.BNCNN'>!True![8, 8]!bncnnbnormmomentum/results.txt!0.0025!!0.0!0.0001!False!0.7072390742619821!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3762922620232738!all!!0.1!0.13559708699404827!naturalscene!!!0.6322506007672404!-3.1694356052044825!512.0!-3.0642195936943613!bncnnbnormmomentum/bncnnbnormmomentum_0_lr0.0025!0.7098938394271386!0.6366285232529708!0.6147204202395921!0.7639851138476934!0.8109674745425156!!!!!!!!!!!!!!!!!!!!!!0.01!False!
bncnnbnormmomentum!1.0!15-10-07!0.001!0.6188282370567322!70.0!<class 'torchdeepretina.models.BNCNN'>!True![8, 8]!bncnnbnormmomentum/results.txt!0.001!!0.0!0.0001!False!0.7292728999667284!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3442972243516091!all!!0.1!0.11567861397543555!naturalscene!!!0.5790454215617752!-3.421138136635!512.0!-3.398002225773598!bncnnbnormmomentum/bncnnbnormmomentum_1_lr0.001!0.763669453338365!0.6356054856215655!0.6654163433576297!0.7649318791855809!0.816741338330501!!!!!!!!!!!!!!!!!!!!!!0.01!False!
bncnnbnormmomentum!2.0!15-10-07!0.001!0.6357755064964294!70.0!<class 'torchdeepretina.models.BNCNN'>!True![8, 8]!bncnnbnormmomentum/results.txt!0.0005!!0.0!0.0001!False!0.7265860605544051!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3322259746840402!all!!0.1!0.1204809166017464!naturalscene!!!0.6005479825926441!-3.5143224254452803!512.0!-3.5382644931174583!bncnnbnormmomentum/bncnnbnormmomentum_2_lr0.0005!0.7508828272623403!0.6340213281288088!0.6503681144002054!0.7782662472029933!0.8193917857776776!!!!!!!!!!!!!!!!!!!!!!0.01!False!
dalesskip!10.0!15-10-07!0.001!0.4983119070529938!70.0!<class 'torchdeepretina.models.DalesSkipBNCNN'>!True![14, 14]!dalesskip/results.txt!0.0001!!5.0!1e-05!False!0.6292608084164647!DalesSkipBNCNN(#  (sequential): Sequential(#    (0): DalesSkipConnection(#      (sequential): Sequential(#        (0): AbsConv2d(#          (conv): Conv2d(40, 2, kernel_size=(15, 15), stride=(1, 1), padding=(7, 7))#        )#        (1): Flatten()#        (2): BatchNorm1d(5000, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (3): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#        (4): ReLU()#        (5): Reshape()#        (6): DaleActivations(n_chan=2, neg_p=1, n_neg_chan=2)#      )#    )#    (1): AbsConv2d(#      (conv): Conv2d(42, 14, kernel_size=(15, 15), stride=(1, 1))#    )#    (2): Flatten()#    (3): BatchNorm1d(18144, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (4): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (5): ReLU()#    (6): Reshape()#    (7): DaleActivations(n_chan=14, neg_p=0.5, n_neg_chan=7)#    (8): AbsConv2d(#      (conv): Conv2d(14, 14, kernel_size=(11, 11), stride=(1, 1))#    )#    (9): Flatten()#    (10): BatchNorm1d(9464, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (12): ReLU()#    (13): Reshape()#    (14): DaleActivations(n_chan=14, neg_p=0.5, n_neg_chan=7)#    (15): Flatten()#    (16): AbsLinear(#      (linear): Linear(in_features=9464, out_features=5, bias=True)#    )#    (17): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (18): Softplus(beta=1, threshold=20)#  )#)#!0.29809476239992583!all!!0.05!0.12543042528131154!naturalscene!!!0.5565905339046651!-2.7807651411174468!512.0!-1.8671887479162248!dalesskip/dalesskip_10_chans[14, 14]_lr0.0001!0.6412703485376968!0.5623821690680396!0.5563342648681094!0.6868586503935091!0.6994586092149686!!!!!!!!!!!!!!!!!!!!!!!!
dalesskip!11.0!15-10-07!0.001!0.4620953500270844!70.0!<class 'torchdeepretina.models.DalesSkipBNCNN'>!True![8, 14]!dalesskip/results.txt!0.005!!5.0!1e-05!False!0.5832354200886142!DalesSkipBNCNN(#  (sequential): Sequential(#    (0): DalesSkipConnection(#      (sequential): Sequential(#        (0): AbsConv2d(#          (conv): Conv2d(40, 2, kernel_size=(15, 15), stride=(1, 1), padding=(7, 7))#        )#        (1): Flatten()#        (2): BatchNorm1d(5000, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (3): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#        (4): ReLU()#        (5): Reshape()#        (6): DaleActivations(n_chan=2, neg_p=1, n_neg_chan=2)#      )#    )#    (1): AbsConv2d(#      (conv): Conv2d(42, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (2): Flatten()#    (3): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (4): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (5): ReLU()#    (6): Reshape()#    (7): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (8): AbsConv2d(#      (conv): Conv2d(8, 14, kernel_size=(11, 11), stride=(1, 1))#    )#    (9): Flatten()#    (10): BatchNorm1d(9464, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (12): ReLU()#    (13): Reshape()#    (14): DaleActivations(n_chan=14, neg_p=0.5, n_neg_chan=7)#    (15): Flatten()#    (16): AbsLinear(#      (linear): Linear(in_features=9464, out_features=5, bias=True)#    )#    (17): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (18): Softplus(beta=1, threshold=20)#  )#)#!0.3397276129827106!all!!0.05!0.11648568377975768!naturalscene!!!0.6066444159244871!-2.278012682230045!512.0!-2.3069866550800726!dalesskip/dalesskip_11_chans[8, 14]_lr0.005!0.6418663311056745!0.32864876114035074!0.4932793879925007!0.6892303808996769!0.7631522393048681!!!!!!!!!!!!!!!!!!!!!!!!
dalesskip!12.0!15-10-07!0.001!0.5370152592658997!70.0!<class 'torchdeepretina.models.DalesSkipBNCNN'>!True![8, 14]!dalesskip/results.txt!0.001!!5.0!1e-05!False!0.6787704966583039!DalesSkipBNCNN(#  (sequential): Sequential(#    (0): DalesSkipConnection(#      (sequential): Sequential(#        (0): AbsConv2d(#          (conv): Conv2d(40, 2, kernel_size=(15, 15), stride=(1, 1), padding=(7, 7))#        )#        (1): Flatten()#        (2): BatchNorm1d(5000, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (3): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#        (4): ReLU()#        (5): Reshape()#        (6): DaleActivations(n_chan=2, neg_p=1, n_neg_chan=2)#      )#    )#    (1): AbsConv2d(#      (conv): Conv2d(42, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (2): Flatten()#    (3): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (4): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (5): ReLU()#    (6): Reshape()#    (7): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (8): AbsConv2d(#      (conv): Conv2d(8, 14, kernel_size=(11, 11), stride=(1, 1))#    )#    (9): Flatten()#    (10): BatchNorm1d(9464, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (12): ReLU()#    (13): Reshape()#    (14): DaleActivations(n_chan=14, neg_p=0.5, n_neg_chan=7)#    (15): Flatten()#    (16): AbsLinear(#      (linear): Linear(in_features=9464, out_features=5, bias=True)#    )#    (17): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (18): Softplus(beta=1, threshold=20)#  )#)#!0.2231654291112726!all!!0.05!0.11503987039467453!naturalscene!!!0.4296763671294968!-2.6909983522212344!512.0!-2.7897924440751916!dalesskip/dalesskip_12_chans[8, 14]_lr0.001!0.6963695764406665!0.5659680703334853!0.6050198335752757!0.7371023459958189!0.7893926569462731!!!!!!!!!!!!!!!!!!!!!!!!
dalesskip!13.0!15-10-07!0.001!0.5278326272964478!70.0!<class 'torchdeepretina.models.DalesSkipBNCNN'>!True![8, 14]!dalesskip/results.txt!0.0001!!5.0!1e-05!False!0.6485891415823032!DalesSkipBNCNN(#  (sequential): Sequential(#    (0): DalesSkipConnection(#      (sequential): Sequential(#        (0): AbsConv2d(#          (conv): Conv2d(40, 2, kernel_size=(15, 15), stride=(1, 1), padding=(7, 7))#        )#        (1): Flatten()#        (2): BatchNorm1d(5000, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (3): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#        (4): ReLU()#        (5): Reshape()#        (6): DaleActivations(n_chan=2, neg_p=1, n_neg_chan=2)#      )#    )#    (1): AbsConv2d(#      (conv): Conv2d(42, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (2): Flatten()#    (3): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (4): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (5): ReLU()#    (6): Reshape()#    (7): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (8): AbsConv2d(#      (conv): Conv2d(8, 14, kernel_size=(11, 11), stride=(1, 1))#    )#    (9): Flatten()#    (10): BatchNorm1d(9464, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (12): ReLU()#    (13): Reshape()#    (14): DaleActivations(n_chan=14, neg_p=0.5, n_neg_chan=7)#    (15): Flatten()#    (16): AbsLinear(#      (linear): Linear(in_features=9464, out_features=5, bias=True)#    )#    (17): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (18): Softplus(beta=1, threshold=20)#  )#)#!0.4892273319742773!all!!0.05!0.16882799043952607!naturalscene!!!0.6810682148072865!-2.553043195474921!512.0!-2.4601001382965486!dalesskip/dalesskip_13_chans[8, 14]_lr0.0001!0.6835477689864179!0.5274203626589007!0.5564210906005727!0.7140741072580254!0.7614823784075995!!!!!!!!!!!!!!!!!!!!!!!!
dalesskip!5.0!15-10-07!0.001!0.42920440435409546!70.0!<class 'torchdeepretina.models.DalesSkipBNCNN'>!True![14, 8]!dalesskip/results.txt!0.005!!5.0!1e-05!False!0.5289339039551489!DalesSkipBNCNN(#  (sequential): Sequential(#    (0): DalesSkipConnection(#      (sequential): Sequential(#        (0): AbsConv2d(#          (conv): Conv2d(40, 2, kernel_size=(15, 15), stride=(1, 1), padding=(7, 7))#        )#        (1): Flatten()#        (2): BatchNorm1d(5000, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (3): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#        (4): ReLU()#        (5): Reshape()#        (6): DaleActivations(n_chan=2, neg_p=1, n_neg_chan=2)#      )#    )#    (1): AbsConv2d(#      (conv): Conv2d(42, 14, kernel_size=(15, 15), stride=(1, 1))#    )#    (2): Flatten()#    (3): BatchNorm1d(18144, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (4): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (5): ReLU()#    (6): Reshape()#    (7): DaleActivations(n_chan=14, neg_p=0.5, n_neg_chan=7)#    (8): AbsConv2d(#      (conv): Conv2d(14, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (12): ReLU()#    (13): Reshape()#    (14): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (15): Flatten()#    (16): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (17): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (18): Softplus(beta=1, threshold=20)#  )#)#!0.31265510864576035!all!!0.05!0.0985570729253788!naturalscene!!!0.5821551311763045!-2.0253658785314763!512.0!-1.9767902158109791!dalesskip/dalesskip_5_chans[14, 8]_lr0.005!0.5610943220756185!0.30886866244432765!0.4510010948790032!0.6032664187970697!0.7204390215797257!!!!!!!!!!!!!!!!!!!!!!!!
dalesskip!6.0!15-10-07!0.001!0.5062054991722107!70.0!<class 'torchdeepretina.models.DalesSkipBNCNN'>!True![14, 8]!dalesskip/results.txt!0.001!!5.0!1e-05!False!0.6351128359925386!DalesSkipBNCNN(#  (sequential): Sequential(#    (0): DalesSkipConnection(#      (sequential): Sequential(#        (0): AbsConv2d(#          (conv): Conv2d(40, 2, kernel_size=(15, 15), stride=(1, 1), padding=(7, 7))#        )#        (1): Flatten()#        (2): BatchNorm1d(5000, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (3): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#        (4): ReLU()#        (5): Reshape()#        (6): DaleActivations(n_chan=2, neg_p=1, n_neg_chan=2)#      )#    )#    (1): AbsConv2d(#      (conv): Conv2d(42, 14, kernel_size=(15, 15), stride=(1, 1))#    )#    (2): Flatten()#    (3): BatchNorm1d(18144, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (4): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (5): ReLU()#    (6): Reshape()#    (7): DaleActivations(n_chan=14, neg_p=0.5, n_neg_chan=7)#    (8): AbsConv2d(#      (conv): Conv2d(14, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (12): ReLU()#    (13): Reshape()#    (14): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (15): Flatten()#    (16): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (17): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (18): Softplus(beta=1, threshold=20)#  )#)#!0.2720530123046777!all!!0.05!0.12881015437825896!naturalscene!!!0.6543865401075265!-2.4684469004921605!512.0!-2.6064079073622453!dalesskip/dalesskip_6_chans[14, 8]_lr0.001!0.6779295481535093!0.4470694148875704!0.5691030749199693!0.7097855346984409!0.7716766073032034!!!!!!!!!!!!!!!!!!!!!!!!
dalesskip!7.0!15-10-07!0.001!0.5263829231262207!70.0!<class 'torchdeepretina.models.DalesSkipBNCNN'>!True![14, 8]!dalesskip/results.txt!0.0001!!5.0!1e-05!False!0.6534650576775559!DalesSkipBNCNN(#  (sequential): Sequential(#    (0): DalesSkipConnection(#      (sequential): Sequential(#        (0): AbsConv2d(#          (conv): Conv2d(40, 2, kernel_size=(15, 15), stride=(1, 1), padding=(7, 7))#        )#        (1): Flatten()#        (2): BatchNorm1d(5000, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (3): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#        (4): ReLU()#        (5): Reshape()#        (6): DaleActivations(n_chan=2, neg_p=1, n_neg_chan=2)#      )#    )#    (1): AbsConv2d(#      (conv): Conv2d(42, 14, kernel_size=(15, 15), stride=(1, 1))#    )#    (2): Flatten()#    (3): BatchNorm1d(18144, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (4): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (5): ReLU()#    (6): Reshape()#    (7): DaleActivations(n_chan=14, neg_p=0.5, n_neg_chan=7)#    (8): AbsConv2d(#      (conv): Conv2d(14, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (12): ReLU()#    (13): Reshape()#    (14): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (15): Flatten()#    (16): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (17): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (18): Softplus(beta=1, threshold=20)#  )#)#!0.3752668676070842!all!!0.05!0.12322187357589234!naturalscene!!!0.7228384268609008!-2.6737977042457097!512.0!-2.8231839865961774!dalesskip/dalesskip_7_chans[14, 8]_lr0.0001!0.656474040943015!0.5700065003794313!0.5679072710849191!0.7098060783424959!0.763131397637918!!!!!!!!!!!!!!!!!!!!!!!!
dalesskip!8.0!15-10-07!0.001!0.4571321904659271!70.0!<class 'torchdeepretina.models.DalesSkipBNCNN'>!True![14, 14]!dalesskip/results.txt!0.005!!5.0!1e-05!False!0.5639566602129834!DalesSkipBNCNN(#  (sequential): Sequential(#    (0): DalesSkipConnection(#      (sequential): Sequential(#        (0): AbsConv2d(#          (conv): Conv2d(40, 2, kernel_size=(15, 15), stride=(1, 1), padding=(7, 7))#        )#        (1): Flatten()#        (2): BatchNorm1d(5000, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (3): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#        (4): ReLU()#        (5): Reshape()#        (6): DaleActivations(n_chan=2, neg_p=1, n_neg_chan=2)#      )#    )#    (1): AbsConv2d(#      (conv): Conv2d(42, 14, kernel_size=(15, 15), stride=(1, 1))#    )#    (2): Flatten()#    (3): BatchNorm1d(18144, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (4): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (5): ReLU()#    (6): Reshape()#    (7): DaleActivations(n_chan=14, neg_p=0.5, n_neg_chan=7)#    (8): AbsConv2d(#      (conv): Conv2d(14, 14, kernel_size=(11, 11), stride=(1, 1))#    )#    (9): Flatten()#    (10): BatchNorm1d(9464, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (12): ReLU()#    (13): Reshape()#    (14): DaleActivations(n_chan=14, neg_p=0.5, n_neg_chan=7)#    (15): Flatten()#    (16): AbsLinear(#      (linear): Linear(in_features=9464, out_features=5, bias=True)#    )#    (17): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (18): Softplus(beta=1, threshold=20)#  )#)#!0.2603489157894328!all!!0.05!0.09653842846025801!naturalscene!!!0.5625162609701087!-2.1927420934311046!512.0!-2.274433371936812!dalesskip/dalesskip_8_chans[14, 14]_lr0.005!0.6377104553140658!0.32892229692131103!0.4483020054324183!0.6756195088623004!0.7292290345348217!!!!!!!!!!!!!!!!!!!!!!!!
dalesskip!9.0!15-10-07!0.001!0.5191307067871094!70.0!<class 'torchdeepretina.models.DalesSkipBNCNN'>!True![14, 14]!dalesskip/results.txt!0.001!!5.0!1e-05!False!0.6251084464201343!DalesSkipBNCNN(#  (sequential): Sequential(#    (0): DalesSkipConnection(#      (sequential): Sequential(#        (0): AbsConv2d(#          (conv): Conv2d(40, 2, kernel_size=(15, 15), stride=(1, 1), padding=(7, 7))#        )#        (1): Flatten()#        (2): BatchNorm1d(5000, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (3): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#        (4): ReLU()#        (5): Reshape()#        (6): DaleActivations(n_chan=2, neg_p=1, n_neg_chan=2)#      )#    )#    (1): AbsConv2d(#      (conv): Conv2d(42, 14, kernel_size=(15, 15), stride=(1, 1))#    )#    (2): Flatten()#    (3): BatchNorm1d(18144, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (4): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (5): ReLU()#    (6): Reshape()#    (7): DaleActivations(n_chan=14, neg_p=0.5, n_neg_chan=7)#    (8): AbsConv2d(#      (conv): Conv2d(14, 14, kernel_size=(11, 11), stride=(1, 1))#    )#    (9): Flatten()#    (10): BatchNorm1d(9464, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (12): ReLU()#    (13): Reshape()#    (14): DaleActivations(n_chan=14, neg_p=0.5, n_neg_chan=7)#    (15): Flatten()#    (16): AbsLinear(#      (linear): Linear(in_features=9464, out_features=5, bias=True)#    )#    (17): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (18): Softplus(beta=1, threshold=20)#  )#)#!0.1858735757799444!all!!0.05!0.1027623030713872!naturalscene!!!0.2880270459114606!-2.5080327477030804!512.0!-2.9196122403163827!dalesskip/dalesskip_9_chans[14, 14]_lr0.001!0.6862863564932102!0.3785868559169797!0.5527830401359847!0.7243630280103042!0.7835229515441927!!!!!!!!!!!!!!!!!!!!!!!!
bncnnchanssearch!0.0!15-10-07!0.001!0.5690587759017944!70.0!<class 'torchdeepretina.models.BNCNN'>!True![8, 10]!bncnnchanssearch/results.txt!0.0025!!0.0!0.0001!False!0.7108720034009354!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 10, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(6760, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=6760, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3847641916285785!all!!0.1!0.13759152841555042!naturalscene!!!0.6883983283963738!-3.2630441929600003!512.0!-3.116107711685254!bncnnchanssearch/bncnnchanssearch_0_lr0.0025_chans[8, 10]!0.7260833196284325!0.6667652119830623!0.6454176556878432!0.774575372497225!0.7415184572081136!!!!!!!!!!!!!!!!!!!!!!!!
bncnnchanssearch!10.0!15-10-07!0.001!0.5806233286857605!70.0!<class 'torchdeepretina.models.BNCNN'>!True![12, 12]!bncnnchanssearch/results.txt!0.0025!!9.0!0.0001!False!0.71266978176559!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 12, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(15552, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(12, 12, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(8112, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=8112, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3855980279902769!all!!0.1!0.10526203507629026!naturalscene!!!0.6673699905168639!-3.218533245866295!512.0!-3.2065967413247565!bncnnchanssearch/bncnnchanssearch_10_lr0.0025_chans[12, 12]!0.7329720309989437!0.6351105357232013!0.6282365728426875!0.7712515869574901!0.7957781823056278!!!!!!!!!!!!!!!!!!!!!!!!
bncnnchanssearch!11.0!15-10-07!0.001!0.622497022151947!70.0!<class 'torchdeepretina.models.BNCNN'>!True![10, 10]!bncnnchanssearch/results.txt!0.001!!9.0!0.0001!False!0.7215658084902153!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 10, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(12960, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(10, 10, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(6760, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=6760, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3735732735994705!all!!0.1!0.09910252171245887!naturalscene!!!0.5814281498635678!-3.4115432011775484!512.0!-3.3867011689151694!bncnnchanssearch/bncnnchanssearch_11_lr0.001_chans[10, 10]!0.7481689266059355!0.6239353236165969!0.6197633569253688!0.773909542120185!0.8420518931829907!!!!!!!!!!!!!!!!!!!!!!!!
bncnnchanssearch!12.0!15-10-07!0.001!0.6206035017967224!70.0!<class 'torchdeepretina.models.BNCNN'>!True![12, 12]!bncnnchanssearch/results.txt!0.001!!9.0!0.0001!False!0.7337797469700037!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 12, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(15552, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(12, 12, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(8112, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=8112, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3651150178216315!all!!0.1!0.1067969109162558!naturalscene!!!0.6252438553186462!-3.4532390255733847!512.0!-3.269416253396412!bncnnchanssearch/bncnnchanssearch_12_lr0.001_chans[12, 12]!0.7327999059851441!0.683329883909041!0.657284155138594!0.7751484688362653!0.8203363209809743!!!!!!!!!!!!!!!!!!!!!!!!
bncnnchanssearch!13.0!15-10-07!0.001!0.6375501155853271!70.0!<class 'torchdeepretina.models.BNCNN'>!True![10, 10]!bncnnchanssearch/results.txt!0.0005!!9.0!0.0001!False!0.7008766718095166!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 10, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(12960, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(10, 10, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(6760, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=6760, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3365142961921708!all!!0.1!0.13234709769541522!naturalscene!!!0.6035929241199708!-3.4969151890295844!512.0!-3.6480358477332633!bncnnchanssearch/bncnnchanssearch_13_lr0.0005_chans[10, 10]!0.7383112588249219!0.6269134328043435!0.5934160156171261!0.7686553518857959!0.7770872999153955!!!!!!!!!!!!!!!!!!!!!!!!
bncnnchanssearch!14.0!15-10-07!0.001!0.6359397172927856!70.0!<class 'torchdeepretina.models.BNCNN'>!True![12, 12]!bncnnchanssearch/results.txt!0.0005!!9.0!0.0001!False!0.7229744843615347!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 12, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(15552, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(12, 12, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(8112, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=8112, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.350628368026051!all!!0.1!0.13662252649948467!naturalscene!!!0.5998647251396312!-3.574569453660899!512.0!-3.361284055709985!bncnnchanssearch/bncnnchanssearch_14_lr0.0005_chans[12, 12]!0.748815273115469!0.6649514873619792!0.6360280240785533!0.7691237748764818!0.7959538623751902!!!!!!!!!!!!!!!!!!!!!!!!
bncnnchanssearch!15.0!15-10-07!0.001!0.5916778445243835!70.0!<class 'torchdeepretina.models.BNCNN'>!True![12, 10]!bncnnchanssearch/results.txt!0.0025!!15.0!0.0001!False!0.7150274779420409!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 12, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(15552, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(12, 10, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(6760, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=6760, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.37081128917527206!all!!0.1!0.1191749166056831!naturalscene!!!0.5702266156519381!-3.255714369215757!512.0!-3.108539404133261!bncnnchanssearch/bncnnchanssearch_15_lr0.0025_chans[12, 10]!0.7616456099619993!0.6105998032043972!0.6271858125034695!0.7839947995776512!0.7917113644626871!!!!!!!!!!!!!!!!!!!!!!!!
bncnnchanssearch!16.0!15-10-07!0.001!0.592801570892334!70.0!<class 'torchdeepretina.models.BNCNN'>!True![12, 8]!bncnnchanssearch/results.txt!0.0025!!15.0!0.0001!False!0.7253117795529492!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 12, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(15552, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(12, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3773210061797015!all!!0.1!0.1343106885798336!naturalscene!!!0.6219399216979717!-3.283463626605533!512.0!-3.2600575450218456!bncnnchanssearch/bncnnchanssearch_16_lr0.0025_chans[12, 8]!0.7333632506310848!0.6514058509782893!0.6426984505709065!0.7830776819033186!0.8160136636811467!!!!!!!!!!!!!!!!!!!!!!!!
bncnnchanssearch!17.0!15-10-07!0.001!0.6023279428482056!70.0!<class 'torchdeepretina.models.BNCNN'>!True![10, 8]!bncnnchanssearch/results.txt!0.0025!!15.0!0.0001!False!0.7029609393375089!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 10, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(12960, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(10, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3746161529745616!all!!0.1!0.10477929690468528!naturalscene!!!0.6387708959118467!-3.2884679619183546!512.0!-3.248844083624498!bncnnchanssearch/bncnnchanssearch_17_lr0.0025_chans[10, 8]!0.7387053007838389!0.6008305975033318!0.613794470606965!0.7562545817701078!0.8052197460233015!!!!!!!!!!!!!!!!!!!!!!!!
bncnnchanssearch!18.0!15-10-07!0.001!0.6164650917053223!70.0!<class 'torchdeepretina.models.BNCNN'>!True![12, 10]!bncnnchanssearch/results.txt!0.001!!15.0!0.0001!False!0.7241667378077911!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 12, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(15552, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(12, 10, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(6760, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=6760, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3731173095891265!all!!0.1!0.1123113906199198!naturalscene!!!0.5821320748386913!-3.4649012121140146!512.0!-3.301934241696654!bncnnchanssearch/bncnnchanssearch_18_lr0.001_chans[12, 10]!0.7411602600023727!0.6572690353190449!0.6477087851368625!0.778228456576558!0.7964671520041172!!!!!!!!!!!!!!!!!!!!!!!!
bncnnchanssearch!19.0!15-10-07!0.001!0.612765908241272!70.0!<class 'torchdeepretina.models.BNCNN'>!True![12, 8]!bncnnchanssearch/results.txt!0.001!!15.0!0.0001!False!0.7195910484474122!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 12, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(15552, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(12, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3598697439296093!all!!0.1!0.10173037504039804!naturalscene!!!0.6139598706075722!-3.411056449510393!512.0!-3.608766079868292!bncnnchanssearch/bncnnchanssearch_19_lr0.001_chans[12, 8]!0.7469770149442359!0.6517513383713132!0.6542113584935023!0.7723719021196767!0.7726436283083333!!!!!!!!!!!!!!!!!!!!!!!!
bncnnchanssearch!1.0!15-10-07!0.001!0.5648328065872192!70.0!<class 'torchdeepretina.models.BNCNN'>!True![8, 12]!bncnnchanssearch/results.txt!0.0025!!0.0!0.0001!False!0.7053228866057515!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 12, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(8112, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=8112, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3851511534451256!all!!0.1!0.08958314915563739!naturalscene!!!0.6777262657089889!-3.2582563014411634!512.0!-3.1710478860339206!bncnnchanssearch/bncnnchanssearch_1_lr0.0025_chans[8, 12]!0.7069427489816072!0.6344317503585941!0.6392393689427702!0.7424396943258288!0.8035608704199568!!!!!!!!!!!!!!!!!!!!!!!!
bncnnchanssearch!20.0!15-10-07!0.001!0.6165011525154114!70.0!<class 'torchdeepretina.models.BNCNN'>!True![10, 8]!bncnnchanssearch/results.txt!0.001!!15.0!0.0001!False!0.7278951675848324!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 10, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(12960, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(10, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3565897867865829!all!!0.1!0.09441815017056816!naturalscene!!!0.6150895348766334!-3.4201533932851267!512.0!-3.277970353148703!bncnnchanssearch/bncnnchanssearch_20_lr0.001_chans[10, 8]!0.734072563037141!0.6475223582518802!0.6513570398667395!0.7836276432188257!0.8228962335495751!!!!!!!!!!!!!!!!!!!!!!!!
bncnnchanssearch!21.0!15-10-07!0.001!0.6273883581161499!70.0!<class 'torchdeepretina.models.BNCNN'>!True![12, 10]!bncnnchanssearch/results.txt!0.0005!!15.0!0.0001!False!0.7168754001222244!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 12, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(15552, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(12, 10, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(6760, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=6760, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3480082972799876!all!!0.1!0.1228668948988274!naturalscene!!!0.6290689474861914!-3.5129124927664592!512.0!-3.3594700036974245!bncnnchanssearch/bncnnchanssearch_21_lr0.0005_chans[12, 10]!0.7537367929282507!0.632754179422812!0.6224278000260158!0.7660158773614283!0.8094423508726152!!!!!!!!!!!!!!!!!!!!!!!!
bncnnchanssearch!22.0!15-10-07!0.001!0.6473690867424011!70.0!<class 'torchdeepretina.models.BNCNN'>!True![12, 8]!bncnnchanssearch/results.txt!0.0005!!15.0!0.0001!False!0.7304102139788149!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 12, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(15552, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(12, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.331775450809817!all!!0.1!0.09451365011043766!naturalscene!!!0.5684826063302074!-3.5239152755492773!512.0!-3.3521559059008723!bncnnchanssearch/bncnnchanssearch_22_lr0.0005_chans[12, 8]!0.7484734464480749!0.6592271198950764!0.5921189668774219!0.7873619613396645!0.8648695753338372!!!!!!!!!!!!!!!!!!!!!!!!
bncnnchanssearch!23.0!15-10-07!0.001!0.6333225965499878!70.0!<class 'torchdeepretina.models.BNCNN'>!True![10, 8]!bncnnchanssearch/results.txt!0.0005!!15.0!0.0001!False!0.7169125405929785!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 10, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(12960, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(10, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3396985043169131!all!!0.1!0.1144568655243472!naturalscene!!!0.5949397626985574!-3.482301966996574!512.0!-3.333477778422457!bncnnchanssearch/bncnnchanssearch_23_lr0.0005_chans[10, 8]!0.7626729708806959!0.6099518058950236!0.6215034435364645!0.768064847110703!0.8223696355420056!!!!!!!!!!!!!!!!!!!!!!!!
bncnnchanssearch!2.0!15-10-07!0.001!0.5913375616073608!70.0!<class 'torchdeepretina.models.BNCNN'>!True![10, 12]!bncnnchanssearch/results.txt!0.0025!!0.0!0.0001!False!0.7200963124941573!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 10, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(12960, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(10, 12, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(8112, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=8112, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4064478857365655!all!!0.1!0.1402198038495554!naturalscene!!!0.6808101080880159!-3.2679584185462187!512.0!-3.324409402405945!bncnnchanssearch/bncnnchanssearch_2_lr0.0025_chans[10, 12]!0.7348286700563107!0.6717028581176787!0.6426869385770451!0.7638816611744718!0.7873814345452806!!!!!!!!!!!!!!!!!!!!!!!!
bncnnchanssearch!3.0!15-10-07!0.001!0.5915056467056274!70.0!<class 'torchdeepretina.models.BNCNN'>!True![8, 10]!bncnnchanssearch/results.txt!0.001!!0.0!0.0001!False!0.706923896979236!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 10, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(6760, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=6760, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3661668145426378!all!!0.1!0.1386769234479369!naturalscene!!!0.6122232063076337!-3.3708057079919325!512.0!-3.2526243425705617!bncnnchanssearch/bncnnchanssearch_3_lr0.001_chans[8, 10]!0.7197064657438067!0.6442454012801043!0.6079636325006473!0.7508338049685621!0.8118701804030594!!!!!!!!!!!!!!!!!!!!!!!!
bncnnchanssearch!4.0!15-10-07!0.001!0.6261390447616577!70.0!<class 'torchdeepretina.models.BNCNN'>!True![8, 12]!bncnnchanssearch/results.txt!0.001!!0.0!0.0001!False!0.7282845748505451!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 12, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(8112, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=8112, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3321079891730925!all!!0.1!0.12834485157063186!naturalscene!!!0.6243246809246861!-3.4072640183105007!512.0!-3.557290375525554!bncnnchanssearch/bncnnchanssearch_4_lr0.001_chans[8, 12]!0.7645426265169541!0.6405697864209378!0.6622519098071645!0.7638687109531945!0.8101898405544743!!!!!!!!!!!!!!!!!!!!!!!!
bncnnchanssearch!5.0!15-10-07!0.001!0.6198949813842773!70.0!<class 'torchdeepretina.models.BNCNN'>!True![10, 12]!bncnnchanssearch/results.txt!0.001!!0.0!0.0001!False!0.7303675578089821!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 10, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(12960, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(10, 12, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(8112, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=8112, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3534628699307356!all!!0.1!0.08558175202609768!naturalscene!!!0.5768712414181376!-3.409823731958956!512.0!-3.2637808369105183!bncnnchanssearch/bncnnchanssearch_5_lr0.001_chans[10, 12]!0.759029415298569!0.6550098604844284!0.6369330034090737!0.7926243923765145!0.8082411174763254!!!!!!!!!!!!!!!!!!!!!!!!
bncnnchanssearch!6.0!15-10-07!0.001!0.6294716000556946!70.0!<class 'torchdeepretina.models.BNCNN'>!True![8, 10]!bncnnchanssearch/results.txt!0.0005!!0.0!0.0001!False!0.7187570276412307!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 10, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(6760, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=6760, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3398481257908845!all!!0.1!0.09792256850872716!naturalscene!!!0.5970401284609068!-3.4741581216297184!512.0!-3.3502886640828367!bncnnchanssearch/bncnnchanssearch_6_lr0.0005_chans[8, 10]!0.7470805550938475!0.6243579820694797!0.6240165486418593!0.764861347474803!0.8334687049261646!!!!!!!!!!!!!!!!!!!!!!!!
bncnnchanssearch!7.0!15-10-07!0.001!0.6289098858833313!70.0!<class 'torchdeepretina.models.BNCNN'>!True![8, 12]!bncnnchanssearch/results.txt!0.0005!!0.0!0.0001!False!0.7062216889566012!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 12, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(8112, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=8112, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3395627103848366!all!!0.1!0.09351212742473557!naturalscene!!!0.6016178247573952!-3.4831693020521426!512.0!-3.4096233440810466!bncnnchanssearch/bncnnchanssearch_7_lr0.0005_chans[8, 12]!0.7333478720157847!0.6296190826582209!0.6036143834238457!0.7698645577770646!0.7946625489080903!!!!!!!!!!!!!!!!!!!!!!!!
bncnnchanssearch!8.0!15-10-07!0.001!0.6314373016357422!70.0!<class 'torchdeepretina.models.BNCNN'>!True![10, 12]!bncnnchanssearch/results.txt!0.0005!!0.0!0.0001!False!0.7165373811963934!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 10, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(12960, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(10, 12, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(8112, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=8112, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.32914118256096336!all!!0.1!0.10099195996280202!naturalscene!!!0.6188710203224237!-3.517269139376161!512.0!-3.313938324668197!bncnnchanssearch/bncnnchanssearch_8_lr0.0005_chans[10, 12]!0.7470746892442164!0.6507313589123841!0.6103502063355276!0.7715322156533176!0.8029984358365218!!!!!!!!!!!!!!!!!!!!!!!!
bncnnchanssearch!9.0!15-10-07!0.001!0.5778949856758118!70.0!<class 'torchdeepretina.models.BNCNN'>!True![10, 10]!bncnnchanssearch/results.txt!0.0025!!9.0!0.0001!False!0.7055826398466807!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 10, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(12960, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(10, 10, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(6760, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=6760, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3649125117541821!all!!0.1!0.09406977938215748!naturalscene!!!0.6371720848950706!-3.232524380964392!512.0!-3.0957713218980643!bncnnchanssearch/bncnnchanssearch_9_lr0.0025_chans[10, 10]!0.7271764559478281!0.6357814481366949!0.6216065352553541!0.7549286547815959!0.7884201051119303!!!!!!!!!!!!!!!!!!!!!!!!
stackedbncnn!0.0!15-10-07!0.001!0.5624896287918091!50.0!<class 'torchdeepretina.models.StackedBNCNN'>!True![8, 8]!stackedbncnn/results.txt!0.005!!0.0!0.0001!False!0.7163741918926924!StackedBNCNN(#  (sequential): Sequential(#    (0): StackedConv2d(#      (convs): Sequential(#        (0): Conv2d(40, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (2): ReLU()#        (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (4): ReLU()#        (5): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (6): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (7): ReLU()#        (8): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (9): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (10): ReLU()#        (11): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (12): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (13): ReLU()#        (14): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (15): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (16): ReLU()#        (17): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (18): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1))#        (19): ReLU()#        (20): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#      )#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): StackedConv2d(#      (convs): Sequential(#        (0): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (2): ReLU()#        (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (4): ReLU()#        (5): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (6): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (7): ReLU()#        (8): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (9): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (10): ReLU()#        (11): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (12): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1))#        (13): ReLU()#        (14): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#      )#    )#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3563436576678936!all!!0.1!0.08136396604900838!naturalscene!!!0.6136360151987935!-3.2055415031956693!512.0!-3.124159562837668!stackedbncnn/stackedbncnn_0_lr0.005!0.7423680280016067!0.6450976335851341!0.6514623036545447!0.7922203104119651!0.7507226838102116!!!!!!!!!!!!!!!!!!!!!!0.01!!
stackedbncnn!1.0!15-10-07!0.001!0.6066433787345886!50.0!<class 'torchdeepretina.models.StackedBNCNN'>!True![8, 8]!stackedbncnn/results.txt!0.001!!0.0!0.0001!False!0.706016729502759!StackedBNCNN(#  (sequential): Sequential(#    (0): StackedConv2d(#      (convs): Sequential(#        (0): Conv2d(40, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (2): ReLU()#        (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (4): ReLU()#        (5): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (6): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (7): ReLU()#        (8): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (9): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (10): ReLU()#        (11): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (12): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (13): ReLU()#        (14): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (15): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (16): ReLU()#        (17): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (18): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1))#        (19): ReLU()#        (20): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#      )#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): StackedConv2d(#      (convs): Sequential(#        (0): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (2): ReLU()#        (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (4): ReLU()#        (5): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (6): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (7): ReLU()#        (8): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (9): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (10): ReLU()#        (11): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (12): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1))#        (13): ReLU()#        (14): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#      )#    )#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.36063759360130254!all!!0.1!0.09618626200393757!naturalscene!!!0.5970582530549043!-3.4566627255392284!512.0!-3.39179864978214!stackedbncnn/stackedbncnn_1_lr0.001!0.7541091667902431!0.6159060936121189!0.6210645086916079!0.8026509976074312!0.7363528808123937!!!!!!!!!!!!!!!!!!!!!!0.01!!
stackedbncnn!2.0!15-10-07!0.001!0.6076012849807739!50.0!<class 'torchdeepretina.models.StackedBNCNN'>!True![8, 8]!stackedbncnn/results.txt!0.0005!!0.0!0.0001!False!0.6770396020861587!StackedBNCNN(#  (sequential): Sequential(#    (0): StackedConv2d(#      (convs): Sequential(#        (0): Conv2d(40, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (2): ReLU()#        (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (4): ReLU()#        (5): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (6): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (7): ReLU()#        (8): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (9): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (10): ReLU()#        (11): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (12): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (13): ReLU()#        (14): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (15): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (16): ReLU()#        (17): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (18): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1))#        (19): ReLU()#        (20): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#      )#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): StackedConv2d(#      (convs): Sequential(#        (0): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (2): ReLU()#        (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (4): ReLU()#        (5): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (6): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (7): ReLU()#        (8): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (9): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (10): ReLU()#        (11): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (12): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1))#        (13): ReLU()#        (14): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#      )#    )#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.34649216103695857!all!!0.1!0.09673300542618184!naturalscene!!!0.5113783363550971!-3.4387505703562167!512.0!-3.427941930220186!stackedbncnn/stackedbncnn_2_lr0.0005!0.7347064852670692!0.6190528794385087!0.5787123312196173!0.7728792375459295!0.6798470769596688!!!!!!!!!!!!!!!!!!!!!!0.01!!
stackedbncnn!3.0!15-10-07!0.001!0.5989173054695129!50.0!<class 'torchdeepretina.models.StackedBNCNN'>!True![8, 8]!stackedbncnn/results.txt!0.0001!!0.0!0.0001!False!0.6543436215319361!StackedBNCNN(#  (sequential): Sequential(#    (0): StackedConv2d(#      (convs): Sequential(#        (0): Conv2d(40, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (2): ReLU()#        (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (4): ReLU()#        (5): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (6): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (7): ReLU()#        (8): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (9): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (10): ReLU()#        (11): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (12): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (13): ReLU()#        (14): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (15): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (16): ReLU()#        (17): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (18): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1))#        (19): ReLU()#        (20): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#      )#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): StackedConv2d(#      (convs): Sequential(#        (0): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (2): ReLU()#        (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (4): ReLU()#        (5): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (6): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (7): ReLU()#        (8): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (9): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (10): ReLU()#        (11): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (12): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1))#        (13): ReLU()#        (14): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#      )#    )#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3212437261556371!all!!0.1!0.08179319422200901!naturalscene!!!0.5281198288991743!-3.2294227681368546!512.0!-3.1362754063851748!stackedbncnn/stackedbncnn_3_lr0.0001!0.7118298502518805!0.5550272118323901!0.5396720343260486!0.7500132990504559!0.7151757121989055!!!!!!!!!!!!!!!!!!!!!!0.01!!
biasormomentum!0.0!15-10-07!0.001!0.6117659211158752!50.0!<class 'torchdeepretina.models.BNCNN'>!True![8, 8]!biasormomentum/results.txt!0.001!!0.0!0.0001!False!0.7353097618831346!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.34727189997720825!all!!0.1!0.10118017085911264!naturalscene!!!0.6141136356028795!-3.3111186176763217!512.0!-3.1907128124585142!biasormomentum/biasormomentum_0_bnorm_momentum0.01_linear_biasTrue!0.7564367759356512!0.6497871716348388!0.6635714261601143!0.7842818607238932!0.8224715749611755!!!!!!!!!!!!!!!!!!!!!!0.01!True!
biasormomentum!1.0!15-10-07!0.001!0.6130890846252441!50.0!<class 'torchdeepretina.models.BNCNN'>!True![8, 8]!biasormomentum/results.txt!0.001!!0.0!0.0001!False!0.727991923638574!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3359552564279097!all!!0.1!0.1099540473230384!naturalscene!!!0.5887164878134962!-3.304594254961201!512.0!-3.358531127393872!biasormomentum/biasormomentum_1_bnorm_momentum0.01_linear_biasFalse!0.7397266676905719!0.6656936129139728!0.6468314684040036!0.7826189754727143!0.8050888937116071!!!!!!!!!!!!!!!!!!!!!!0.01!False!
biasormomentum!2.0!15-10-07!0.001!0.6225267648696899!50.0!<class 'torchdeepretina.models.BNCNN'>!True![8, 8]!biasormomentum/results.txt!0.001!!0.0!0.0001!False!0.7309675322783532!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3579660963204697!all!!0.1!0.1376517660201137!naturalscene!!!0.5991882855962598!-3.29372832965707!512.0!-3.38863466186267!biasormomentum/biasormomentum_2_bnorm_momentum0.99_linear_biasTrue!0.7644545415779146!0.6527219545942279!0.6462173481728466!0.7690805029952411!0.8223633140515357!!!!!!!!!!!!!!!!!!!!!!0.99!True!
biasormomentum!3.0!15-10-07!0.001!0.6061695218086243!50.0!<class 'torchdeepretina.models.BNCNN'>!True![8, 8]!biasormomentum/results.txt!0.001!!0.0!0.0001!False!0.7128507912299159!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3363645457470643!all!!0.1!0.09768822911089282!naturalscene!!!0.5995377007064899!-3.304830090672362!512.0!-3.188229291920288!biasormomentum/biasormomentum_3_bnorm_momentum0.99_linear_biasFalse!0.7388931788060518!0.6162372186166774!0.6190616945236797!0.768886230672512!0.8211756335306593!!!!!!!!!!!!!!!!!!!!!!0.99!False!
scaleshift!0.0!15-10-07!0.01!!50.0!<class 'torchdeepretina.models.SSCNN'>!True![8, 8]!scaleshift/results.txt!0.002!!0.0!0.0001!False!!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!!all!!0.1!!naturalscene!!!!inf!512.0!!scaleshift/scaleshift_0_lr0.002_biasTrue_linear_biasTrue_shiftTrue_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!0.01!True!True
scaleshift!10.0!15-10-07!0.01!!50.0!<class 'torchdeepretina.models.SSCNN'>!False![8, 8]!scaleshift/results.txt!0.002!!0.0!0.0001!False!!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!!all!!0.1!!naturalscene!!!!inf!512.0!!scaleshift/scaleshift_10_lr0.002_biasFalse_linear_biasTrue_shiftFalse_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!0.01!True!False
scaleshift!11.0!15-10-07!0.001!!50.0!<class 'torchdeepretina.models.SSCNN'>!False![8, 8]!scaleshift/results.txt!0.002!!0.0!0.0001!False!!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!!all!!0.1!!naturalscene!!!!inf!512.0!!scaleshift/scaleshift_11_lr0.002_biasFalse_linear_biasTrue_shiftFalse_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!!0.01!True!False
scaleshift!12.0!15-10-07!0.01!0.00633418932557106!50.0!<class 'torchdeepretina.models.SSCNN'>!False![8, 8]!scaleshift/results.txt!0.002!!0.0!0.0001!False!-0.016047839859936106!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=False)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!!all!!0.1!!naturalscene!!!!0.9815784771877536!512.0!0.9748858156598088!scaleshift/scaleshift_12_lr0.002_biasFalse_linear_biasFalse_shiftTrue_l20.01!-0.03949453847685929!-0.029321514005464143!0.05452986960270822!-0.0475390857535376!-0.01841393066652772!!!!!!!!!!!!!!!!!!!!!!0.01!False!True
scaleshift!13.0!15-10-07!0.001!!50.0!<class 'torchdeepretina.models.SSCNN'>!False![8, 8]!scaleshift/results.txt!0.002!!0.0!0.0001!False!!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=False)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!!all!!0.1!!naturalscene!!!!inf!512.0!!scaleshift/scaleshift_13_lr0.002_biasFalse_linear_biasFalse_shiftTrue_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!!0.01!False!True
scaleshift!14.0!15-10-07!0.01!!50.0!<class 'torchdeepretina.models.SSCNN'>!False![8, 8]!scaleshift/results.txt!0.002!!0.0!0.0001!False!!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=False)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!!all!!0.1!!naturalscene!!!!inf!512.0!!scaleshift/scaleshift_14_lr0.002_biasFalse_linear_biasFalse_shiftFalse_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!0.01!False!False
scaleshift!15.0!15-10-07!0.001!!50.0!<class 'torchdeepretina.models.SSCNN'>!False![8, 8]!scaleshift/results.txt!0.002!!0.0!0.0001!False!!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=False)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!!all!!0.1!!naturalscene!!!!inf!512.0!!scaleshift/scaleshift_15_lr0.002_biasFalse_linear_biasFalse_shiftFalse_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!!0.01!False!False
scaleshift!16.0!15-10-07!0.01!0.5455551147460938!50.0!<class 'torchdeepretina.models.SSCNN'>!True![8, 8]!scaleshift/results.txt!0.001!!0.0!0.0001!False!0.6827945007127021!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.4296535178205971!all!!0.1!0.09711935281420724!naturalscene!!!0.7001476721191462!-2.9974270127657485!512.0!-1.3936646259502594!scaleshift/scaleshift_16_lr0.001_biasTrue_linear_biasTrue_shiftTrue_l20.01!0.7077947326547207!0.5796346529237892!0.5685916116301039!0.7650271206268704!0.7929243857280256!!!!!!!!!!!!!!!!!!!!!!0.01!True!True
scaleshift!17.0!15-10-07!0.001!-0.002952472772449255!50.0!<class 'torchdeepretina.models.SSCNN'>!True![8, 8]!scaleshift/results.txt!0.001!!0.0!0.0001!False!-0.0109934726664369!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!!all!!0.1!!naturalscene!!!!1.0000189565245745!512.0!1.0000277301675893!scaleshift/scaleshift_17_lr0.001_biasTrue_linear_biasTrue_shiftTrue_l20.001!0.005507974472069437!-0.01717516414946938!-0.022917291100163373!-0.0006052062402015729!-0.019777676314419613!!!!!!!!!!!!!!!!!!!!!!0.01!True!True
scaleshift!18.0!15-10-07!0.01!0.5280352234840393!50.0!<class 'torchdeepretina.models.SSCNN'>!True![8, 8]!scaleshift/results.txt!0.001!!0.0!0.0001!False!0.662490408766792!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.4269695235342657!all!!0.1!0.14367909818812094!naturalscene!!!0.7165994535830212!-2.907430450121561!512.0!-1.7712783159944592!scaleshift/scaleshift_18_lr0.001_biasTrue_linear_biasTrue_shiftFalse_l20.01!0.7045068706350095!0.5350231804656153!0.5520928053627261!0.7406291306180635!0.7802000567525458!!!!!!!!!!!!!!!!!!!!!!0.01!True!False
scaleshift!19.0!15-10-07!0.001!-0.0017809995915740726!50.0!<class 'torchdeepretina.models.SSCNN'>!True![8, 8]!scaleshift/results.txt!0.001!!0.0!0.0001!False!!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!!all!!0.1!!naturalscene!!!!1.0000417801589447!512.0!1.0000202849712037!scaleshift/scaleshift_19_lr0.001_biasTrue_linear_biasTrue_shiftFalse_l20.001!0.0014415834186865507!-0.005801720438652064!-0.003435961764590985!!-0.005091321176323162!!!!!!!!!!!!!!!!!!!!!!0.01!True!False
scaleshift!1.0!15-10-07!0.001!0.049626436084508896!50.0!<class 'torchdeepretina.models.SSCNN'>!True![8, 8]!scaleshift/results.txt!0.002!!0.0!0.0001!False!0.06050797802966217!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!!all!!0.1!!naturalscene!!!!0.8989474583265469!512.0!0.9216622954445484!scaleshift/scaleshift_1_lr0.002_biasTrue_linear_biasTrue_shiftTrue_l20.001!0.0011433337921227052!0.10045319414647012!0.10505146427451817!-0.004115845232284919!0.10000774316748484!!!!!!!!!!!!!!!!!!!!!!0.01!True!True
scaleshift!20.0!15-10-07!0.01!0.5306704640388489!50.0!<class 'torchdeepretina.models.SSCNN'>!True![8, 8]!scaleshift/results.txt!0.001!!0.0!0.0001!False!0.6698097778637954!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=False)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.3945485408331163!all!!0.1!0.08134536479568387!naturalscene!!!0.7155707076323121!-2.8874211857940995!512.0!-1.1845060701543844!scaleshift/scaleshift_20_lr0.001_biasTrue_linear_biasFalse_shiftTrue_l20.01!0.7008500579788426!0.5555927347866059!0.5793158211456814!0.7439155313175618!0.7693747440902854!!!!!!!!!!!!!!!!!!!!!!0.01!False!True
scaleshift!21.0!15-10-07!0.001!!50.0!<class 'torchdeepretina.models.SSCNN'>!True![8, 8]!scaleshift/results.txt!0.001!!0.0!0.0001!False!!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=False)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!!all!!0.1!!naturalscene!!!!inf!512.0!!scaleshift/scaleshift_21_lr0.001_biasTrue_linear_biasFalse_shiftTrue_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!!0.01!False!True
scaleshift!22.0!15-10-07!0.01!0.0526568666100502!50.0!<class 'torchdeepretina.models.SSCNN'>!True![8, 8]!scaleshift/results.txt!0.001!!0.0!0.0001!False!0.043393906149716284!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=False)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!!all!!0.1!!naturalscene!!!!0.9345018515759465!512.0!0.9209210119965064!scaleshift/scaleshift_22_lr0.001_biasTrue_linear_biasFalse_shiftFalse_l20.01!-0.002693285221646962!0.1336393677814773!0.07386240639146957!-0.012648645457226756!0.024809687254508214!!!!!!!!!!!!!!!!!!!!!!0.01!False!False
scaleshift!23.0!15-10-07!0.001!0.02737895585596561!50.0!<class 'torchdeepretina.models.SSCNN'>!True![8, 8]!scaleshift/results.txt!0.001!!0.0!0.0001!False!0.031541909362358164!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=False)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!!all!!0.1!!naturalscene!!!!0.9645565142279116!512.0!0.9534047006452966!scaleshift/scaleshift_23_lr0.001_biasTrue_linear_biasFalse_shiftFalse_l20.001!-0.0021077851779984207!-0.0017315162513262396!0.16931116514349714!-0.0025846555595522816!-0.005177661342829361!!!!!!!!!!!!!!!!!!!!!!0.01!False!False
scaleshift!24.0!15-10-07!0.01!0.05896957963705062!50.0!<class 'torchdeepretina.models.SSCNN'>!False![8, 8]!scaleshift/results.txt!0.001!!0.0!0.0001!False!0.042032231480416064!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!!all!!0.1!!naturalscene!!!!0.7578662149102441!512.0!0.7703333855144592!scaleshift/scaleshift_24_lr0.001_biasFalse_linear_biasTrue_shiftTrue_l20.01!-0.00921477400695438!0.14054357775431736!0.1010335024343024!-0.04800724105744148!0.025806092277856404!!!!!!!!!!!!!!!!!!!!!!0.01!True!True
scaleshift!25.0!15-10-07!0.001!-0.0015901129227131605!50.0!<class 'torchdeepretina.models.SSCNN'>!False![8, 8]!scaleshift/results.txt!0.001!!0.0!0.0001!False!-0.00394079941849669!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!!all!!0.1!!naturalscene!!!!0.999701769463437!512.0!0.9997651356081444!scaleshift/scaleshift_25_lr0.001_biasFalse_linear_biasTrue_shiftTrue_l20.001!-0.007157278580131645!-0.0018464639448651048!0.011292592870369636!-0.013154907900765834!-0.0088379395370905!!!!!!!!!!!!!!!!!!!!!!0.01!True!True
scaleshift!26.0!15-10-07!0.01!-0.00313971983268857!50.0!<class 'torchdeepretina.models.SSCNN'>!False![8, 8]!scaleshift/results.txt!0.001!!0.0!0.0001!False!-0.024736129771999016!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!!all!!0.1!!naturalscene!!!!1.0000128327991091!512.0!1.000034533045682!scaleshift/scaleshift_26_lr0.001_biasFalse_linear_biasTrue_shiftFalse_l20.01!-0.025571509094185863!-0.02437865570371517!-0.020998323340991838!-0.028312824238755988!-0.02441933648234624!!!!!!!!!!!!!!!!!!!!!!0.01!True!False
scaleshift!27.0!15-10-07!0.001!0.42185601592063904!50.0!<class 'torchdeepretina.models.SSCNN'>!False![8, 8]!scaleshift/results.txt!0.001!!0.0!0.0001!False!0.4906169181486391!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.35701966621946946!all!!0.1!0.09618623372693738!naturalscene!!!0.6479406409744921!-1.7241239625718978!512.0!-2.1458760664412693!scaleshift/scaleshift_27_lr0.001_biasFalse_linear_biasTrue_shiftFalse_l20.001!0.5289474812329692!0.3584473888513348!0.3834133765538468!0.5759444202274263!0.6063319238776185!!!!!!!!!!!!!!!!!!!!!!0.01!True!False
scaleshift!28.0!15-10-07!0.01!-0.0024158561136573553!50.0!<class 'torchdeepretina.models.SSCNN'>!False![8, 8]!scaleshift/results.txt!0.001!!0.0!0.0001!False!!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=False)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!!all!!0.1!!naturalscene!!!!1.0000129028323193!512.0!1.0000124946397255!scaleshift/scaleshift_28_lr0.001_biasFalse_linear_biasFalse_shiftTrue_l20.01!0.006513746573692843!!-0.02467481857806229!-0.012187480152717051!-0.02055796310733216!!!!!!!!!!!!!!!!!!!!!!0.01!False!True
scaleshift!29.0!15-10-07!0.001!-0.0016274958616122606!50.0!<class 'torchdeepretina.models.SSCNN'>!False![8, 8]!scaleshift/results.txt!0.001!!0.0!0.0001!False!-0.010403672868794768!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=False)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!!all!!0.1!!naturalscene!!!!1.0000133916263667!512.0!0.9999955692578796!scaleshift/scaleshift_29_lr0.001_biasFalse_linear_biasFalse_shiftTrue_l20.001!-0.008276316126303975!-0.005790761245656153!-0.011482817745155588!-0.007693401051227696!-0.018775068175630426!!!!!!!!!!!!!!!!!!!!!!0.01!False!True
scaleshift!2.0!15-10-07!0.01!!50.0!<class 'torchdeepretina.models.SSCNN'>!True![8, 8]!scaleshift/results.txt!0.002!!0.0!0.0001!False!!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!!all!!0.1!!naturalscene!!!!inf!512.0!!scaleshift/scaleshift_2_lr0.002_biasTrue_linear_biasTrue_shiftFalse_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!0.01!True!False
scaleshift!30.0!15-10-07!0.01!0.5322035551071167!50.0!<class 'torchdeepretina.models.SSCNN'>!False![8, 8]!scaleshift/results.txt!0.001!!0.0!0.0001!False!0.6789914880966543!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=False)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.397916361992944!all!!0.1!0.10876364681858776!naturalscene!!!0.7037418456764032!-2.9578330205756256!512.0!-1.6714390254781393!scaleshift/scaleshift_30_lr0.001_biasFalse_linear_biasFalse_shiftFalse_l20.01!0.7045060733810871!0.5589782863126487!0.5817187349930781!0.7549189783121635!0.7948353674842942!!!!!!!!!!!!!!!!!!!!!!0.01!False!False
scaleshift!31.0!15-10-07!0.001!0.5097213983535767!50.0!<class 'torchdeepretina.models.SSCNN'>!False![8, 8]!scaleshift/results.txt!0.001!!0.0!0.0001!False!0.6172155553717703!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=False)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.3431509307131251!all!!0.1!0.09959043044145477!naturalscene!!!0.5799479765318568!-2.8878386340709468!512.0!-2.8896444084744872!scaleshift/scaleshift_31_lr0.001_biasFalse_linear_biasFalse_shiftFalse_l20.001!0.6434213683583577!0.5051998561493523!0.5631289604070738!0.6829689796140477!0.6913586123300199!!!!!!!!!!!!!!!!!!!!!!0.01!False!False
scaleshift!32.0!15-10-07!0.01!0.533949077129364!50.0!<class 'torchdeepretina.models.SSCNN'>!True![8, 8]!scaleshift/results.txt!0.0002!!0.0!0.0001!False!0.6715124960717309!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.4603803363379795!all!!0.1!0.1460931334419006!naturalscene!!!0.7144000683198678!-2.8220343365029152!512.0!-1.6354480875968875!scaleshift/scaleshift_32_lr0.0002_biasTrue_linear_biasTrue_shiftTrue_l20.01!0.7133665083619054!0.5467370225522812!0.5815967741449222!0.768366120788396!0.7474960545111498!!!!!!!!!!!!!!!!!!!!!!0.01!True!True
scaleshift!33.0!15-10-07!0.001!0.6079961061477661!50.0!<class 'torchdeepretina.models.SSCNN'>!True![8, 8]!scaleshift/results.txt!0.0002!!0.0!0.0001!False!0.6784459156278716!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.3682972824500391!all!!0.1!0.12027095643252103!naturalscene!!!0.6244848931557189!-3.5686933947544466!512.0!-3.0492060041458897!scaleshift/scaleshift_33_lr0.0002_biasTrue_linear_biasTrue_shiftTrue_l20.001!0.7359394998184691!0.5636338478468189!0.585157671709249!0.7518184772264702!0.7556800815383504!!!!!!!!!!!!!!!!!!!!!!0.01!True!True
scaleshift!34.0!15-10-07!0.01!0.5670228600502014!50.0!<class 'torchdeepretina.models.SSCNN'>!True![8, 8]!scaleshift/results.txt!0.0002!!0.0!0.0001!False!0.7016645081037395!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.4083800792564841!all!!0.1!0.13975292471130613!naturalscene!!!0.6814716431175595!-3.003819464917996!512.0!-1.5801897065914092!scaleshift/scaleshift_34_lr0.0002_biasTrue_linear_biasTrue_shiftFalse_l20.01!0.7473446171265673!0.6119101052651154!0.5951803747140213!0.7730966241161477!0.7807908192968457!!!!!!!!!!!!!!!!!!!!!!0.01!True!False
scaleshift!35.0!15-10-07!0.001!0.6258285641670227!50.0!<class 'torchdeepretina.models.SSCNN'>!True![8, 8]!scaleshift/results.txt!0.0002!!0.0!0.0001!False!0.6856457158810063!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.3545730231707725!all!!0.1!0.09242560152182357!naturalscene!!!0.6629388193481324!-3.59145570142956!512.0!-3.3809812285584484!scaleshift/scaleshift_35_lr0.0002_biasTrue_linear_biasTrue_shiftFalse_l20.001!0.7085636909242241!0.5885056713373074!0.6074284130459379!0.7694735469783539!0.7542572571192081!!!!!!!!!!!!!!!!!!!!!!0.01!True!False
scaleshift!36.0!15-10-07!0.01!0.5533180832862854!50.0!<class 'torchdeepretina.models.SSCNN'>!True![8, 8]!scaleshift/results.txt!0.0002!!0.0!0.0001!False!0.7017525510744702!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=False)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.4201601379122605!all!!0.1!0.08814975986709421!naturalscene!!!0.7192812952006594!-3.0146458672182592!512.0!-1.2470540990376322!scaleshift/scaleshift_36_lr0.0002_biasTrue_linear_biasFalse_shiftTrue_l20.01!0.7461133308336866!0.60805504017429!0.6007484667163628!0.7966066033654595!0.757239314282552!!!!!!!!!!!!!!!!!!!!!!0.01!False!True
scaleshift!37.0!15-10-07!0.001!0.621562123298645!50.0!<class 'torchdeepretina.models.SSCNN'>!True![8, 8]!scaleshift/results.txt!0.0002!!0.0!0.0001!False!0.6808047101013144!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=False)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.354320477599762!all!!0.1!0.09902910786093376!naturalscene!!!0.6297532344262757!-3.628284416766908!512.0!-3.4358058323512517!scaleshift/scaleshift_37_lr0.0002_biasTrue_linear_biasFalse_shiftTrue_l20.001!0.6988567146460166!0.5992820584856801!0.5991118154486518!0.7612462127843127!0.7455267491419107!!!!!!!!!!!!!!!!!!!!!!0.01!False!True
scaleshift!38.0!15-10-07!0.01!0.5573756694793701!50.0!<class 'torchdeepretina.models.SSCNN'>!True![8, 8]!scaleshift/results.txt!0.0002!!0.0!0.0001!False!0.6976858765736165!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=False)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.40915676109193855!all!!0.1!0.1399836813038014!naturalscene!!!0.7230080101200804!-3.0112955861501565!512.0!-1.3637183390999779!scaleshift/scaleshift_38_lr0.0002_biasTrue_linear_biasFalse_shiftFalse_l20.01!0.7488447985989386!0.6048523934901501!0.6003974064878357!0.7682800933403326!0.7660546909508248!!!!!!!!!!!!!!!!!!!!!!0.01!False!False
scaleshift!39.0!15-10-07!0.001!0.6205087900161743!50.0!<class 'torchdeepretina.models.SSCNN'>!True![8, 8]!scaleshift/results.txt!0.0002!!0.0!0.0001!False!0.6540518914925411!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=False)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.4188524212458071!all!!0.1!0.12772924224746354!naturalscene!!!0.6299099297061933!-3.6133917757109097!512.0!-3.519215214718862!scaleshift/scaleshift_39_lr0.0002_biasTrue_linear_biasFalse_shiftFalse_l20.001!0.6624732661916829!0.5765291123396398!0.5618117011083764!0.7488954064149141!0.7205499714080918!!!!!!!!!!!!!!!!!!!!!!0.01!False!False
scaleshift!3.0!15-10-07!0.001!!50.0!<class 'torchdeepretina.models.SSCNN'>!True![8, 8]!scaleshift/results.txt!0.002!!0.0!0.0001!False!!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!!all!!0.1!!naturalscene!!!!1.0000078245705248!512.0!1.0000000000003622!scaleshift/scaleshift_3_lr0.002_biasTrue_linear_biasTrue_shiftFalse_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!!0.01!True!False
scaleshift!40.0!15-10-07!0.01!0.5527763962745667!50.0!<class 'torchdeepretina.models.SSCNN'>!False![8, 8]!scaleshift/results.txt!0.0002!!0.0!0.0001!False!0.7014054318840973!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.4051270259127718!all!!0.1!0.14508627484104122!naturalscene!!!0.7042246758936651!-2.9958197779245506!512.0!-1.661778590825088!scaleshift/scaleshift_40_lr0.0002_biasFalse_linear_biasTrue_shiftTrue_l20.01!0.7348965414658805!0.6203404354519493!0.5720493972563603!0.7701336434501345!0.8096071417961621!!!!!!!!!!!!!!!!!!!!!!0.01!True!True
scaleshift!41.0!15-10-07!0.001!0.6054655909538269!50.0!<class 'torchdeepretina.models.SSCNN'>!False![8, 8]!scaleshift/results.txt!0.0002!!0.0!0.0001!False!0.6833233742787896!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.3568033142682498!all!!0.1!0.08538283641598211!naturalscene!!!0.6413041033310408!-3.596661441106782!512.0!-3.4359563260622963!scaleshift/scaleshift_41_lr0.0002_biasFalse_linear_biasTrue_shiftTrue_l20.001!0.6941988916572872!0.6369137719085705!0.5838652529497887!0.7242873652791962!0.7773515895991061!!!!!!!!!!!!!!!!!!!!!!0.01!True!True
scaleshift!42.0!15-10-07!0.01!0.5453455448150635!50.0!<class 'torchdeepretina.models.SSCNN'>!False![8, 8]!scaleshift/results.txt!0.0002!!0.0!0.0001!False!0.6959874547718286!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.3867955522228679!all!!0.1!0.1228616087140734!naturalscene!!!0.6997051853688804!-2.9645393993340288!512.0!-1.276197823944858!scaleshift/scaleshift_42_lr0.0002_biasFalse_linear_biasTrue_shiftFalse_l20.01!0.7365558036394928!0.5988876312765453!0.5859481201495222!0.7890239754374931!0.7695217433560895!!!!!!!!!!!!!!!!!!!!!!0.01!True!False
scaleshift!43.0!15-10-07!0.001!0.6171038150787354!50.0!<class 'torchdeepretina.models.SSCNN'>!False![8, 8]!scaleshift/results.txt!0.0002!!0.0!0.0001!False!0.6772296276031876!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.35927254559906546!all!!0.1!0.10163480971542106!naturalscene!!!0.6676304710504731!-3.5697077257421044!512.0!-3.233071598531388!scaleshift/scaleshift_43_lr0.0002_biasFalse_linear_biasTrue_shiftFalse_l20.001!0.7188258729195107!0.5572803041340803!0.5777612779689408!0.7644785122984465!0.7678021706949597!!!!!!!!!!!!!!!!!!!!!!0.01!True!False
scaleshift!44.0!15-10-07!0.01!0.5496752858161926!50.0!<class 'torchdeepretina.models.SSCNN'>!False![8, 8]!scaleshift/results.txt!0.0002!!0.0!0.0001!False!0.7005938740471696!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=False)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.40341718805081705!all!!0.1!0.12797311681326584!naturalscene!!!0.7053275634155122!-2.967064707707136!512.0!-1.3656469643421587!scaleshift/scaleshift_44_lr0.0002_biasFalse_linear_biasFalse_shiftTrue_l20.01!0.7520005729293288!0.6075318152490017!0.6051738703519042!0.7823989382089558!0.7558641734966569!!!!!!!!!!!!!!!!!!!!!!0.01!False!True
scaleshift!45.0!15-10-07!0.001!0.5972675681114197!50.0!<class 'torchdeepretina.models.SSCNN'>!False![8, 8]!scaleshift/results.txt!0.0002!!0.0!0.0001!False!0.6704189357149771!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=False)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.3601721773460845!all!!0.1!0.07081155166281586!naturalscene!!!0.6470817803618507!-3.6066259156524874!512.0!-3.1647833996448758!scaleshift/scaleshift_45_lr0.0002_biasFalse_linear_biasFalse_shiftTrue_l20.001!0.6788675544820023!0.6200711246291875!0.5964388140281297!0.7346132193409348!0.7221039660946315!!!!!!!!!!!!!!!!!!!!!!0.01!False!True
scaleshift!46.0!15-10-07!0.01!0.5414384603500366!50.0!<class 'torchdeepretina.models.SSCNN'>!False![8, 8]!scaleshift/results.txt!0.0002!!0.0!0.0001!False!0.6898004190665229!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=False)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.430939747280214!all!!0.1!0.17353159769758209!naturalscene!!!0.7270312433287629!-2.9187250766639075!512.0!-1.2993220263857441!scaleshift/scaleshift_46_lr0.0002_biasFalse_linear_biasFalse_shiftFalse_l20.01!0.7447215809349615!0.5651909776999713!0.5945126515658508!0.7694170887286297!0.7751597964032011!!!!!!!!!!!!!!!!!!!!!!0.01!False!False
scaleshift!47.0!15-10-07!0.001!0.6208595037460327!50.0!<class 'torchdeepretina.models.SSCNN'>!False![8, 8]!scaleshift/results.txt!0.0002!!0.0!0.0001!False!0.6625308502084705!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=False)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.3904970419761682!all!!0.1!0.09920984338158048!naturalscene!!!0.6681966477806848!-3.5977573668075724!512.0!-3.3074613249829783!scaleshift/scaleshift_47_lr0.0002_biasFalse_linear_biasFalse_shiftFalse_l20.001!0.7173866907247974!0.5606259072926506!0.5695366986508134!0.7334416811385219!0.7316632732355691!!!!!!!!!!!!!!!!!!!!!!0.01!False!False
scaleshift!48.0!15-10-07!0.01!0.5409253835678101!50.0!<class 'torchdeepretina.models.SSCNN'>!True![8, 8]!scaleshift/results.txt!0.0001!!0.0!0.0001!False!0.701011825328847!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.41094367372108703!all!!0.1!0.0878968017180279!naturalscene!!!0.7249955776787261!-2.9528551333630246!512.0!-1.8198048407193708!scaleshift/scaleshift_48_lr0.0001_biasTrue_linear_biasTrue_shiftTrue_l20.01!0.7532365213279776!0.5998369681514149!0.6143180635972226!0.7789915475535641!0.7586760260140557!!!!!!!!!!!!!!!!!!!!!!0.01!True!True
scaleshift!49.0!15-10-07!0.001!0.5705261826515198!50.0!<class 'torchdeepretina.models.SSCNN'>!True![8, 8]!scaleshift/results.txt!0.0001!!0.0!0.0001!False!0.6710350195667998!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.3605568737781801!all!!0.1!0.09734873331100456!naturalscene!!!0.6242184086710716!-3.351443364249815!512.0!-3.1771856105609912!scaleshift/scaleshift_49_lr0.0001_biasTrue_linear_biasTrue_shiftTrue_l20.001!0.6973472893643253!0.5972816923437788!0.6019517687386985!0.7542180061465729!0.7043763412406233!!!!!!!!!!!!!!!!!!!!!!0.01!True!True
scaleshift!4.0!15-10-07!0.01!!50.0!<class 'torchdeepretina.models.SSCNN'>!True![8, 8]!scaleshift/results.txt!0.002!!0.0!0.0001!False!!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=False)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!!all!!0.1!!naturalscene!!!!inf!512.0!!scaleshift/scaleshift_4_lr0.002_biasTrue_linear_biasFalse_shiftTrue_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!0.01!False!True
scaleshift!50.0!15-10-07!0.01!0.5431033968925476!50.0!<class 'torchdeepretina.models.SSCNN'>!True![8, 8]!scaleshift/results.txt!0.0001!!0.0!0.0001!False!0.6959310885892109!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.4192601761274873!all!!0.1!0.14913795274642586!naturalscene!!!0.7164469721810319!-2.9853622052104942!512.0!-1.5742302234157253!scaleshift/scaleshift_50_lr0.0001_biasTrue_linear_biasTrue_shiftFalse_l20.01!0.7427846683887148!0.6005891997652524!0.5868402010135849!0.7766872591887595!0.7727541145897434!!!!!!!!!!!!!!!!!!!!!!0.01!True!False
scaleshift!51.0!15-10-07!0.001!0.5874724388122559!50.0!<class 'torchdeepretina.models.SSCNN'>!True![8, 8]!scaleshift/results.txt!0.0001!!0.0!0.0001!False!0.6867725001045288!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.3566236714531266!all!!0.1!0.10094839637815947!naturalscene!!!0.6448473546223591!-3.4124633303954415!512.0!-3.167081400539973!scaleshift/scaleshift_51_lr0.0001_biasTrue_linear_biasTrue_shiftFalse_l20.001!0.7222091982057667!0.6350312229055561!0.6010846909507864!0.7566647562070036!0.7188726322535314!!!!!!!!!!!!!!!!!!!!!!0.01!True!False
scaleshift!52.0!15-10-07!0.01!0.5258498191833496!50.0!<class 'torchdeepretina.models.SSCNN'>!True![8, 8]!scaleshift/results.txt!0.0001!!0.0!0.0001!False!0.6613900602673313!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=False)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.4871544399394918!all!!0.1!0.14842014001376766!naturalscene!!!0.7343570354455454!-2.784590984361744!512.0!-1.3164886309976285!scaleshift/scaleshift_52_lr0.0001_biasTrue_linear_biasFalse_shiftTrue_l20.01!0.7131392522496609!0.5192602554872974!0.5741761699746162!0.7530968214979697!0.7472778021271124!!!!!!!!!!!!!!!!!!!!!!0.01!False!True
scaleshift!53.0!15-10-07!0.001!0.5912954211235046!50.0!<class 'torchdeepretina.models.SSCNN'>!True![8, 8]!scaleshift/results.txt!0.0001!!0.0!0.0001!False!0.6931547553571116!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=False)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.3801400986849677!all!!0.1!0.09715969651096318!naturalscene!!!0.6436466933412912!-3.390705887009116!512.0!-3.205865436979729!scaleshift/scaleshift_53_lr0.0001_biasTrue_linear_biasFalse_shiftTrue_l20.001!0.7190252059081702!0.6237903021644082!0.6294841420679594!0.7568513816256736!0.7366227450193463!!!!!!!!!!!!!!!!!!!!!!0.01!False!True
scaleshift!54.0!15-10-07!0.01!0.5315252542495728!50.0!<class 'torchdeepretina.models.SSCNN'>!True![8, 8]!scaleshift/results.txt!0.0001!!0.0!0.0001!False!0.6677858104044743!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=False)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.4285419071274935!all!!0.1!0.08480263459975372!naturalscene!!!0.720589607497557!-2.855306376339264!512.0!-1.69838267066516!scaleshift/scaleshift_54_lr0.0001_biasTrue_linear_biasFalse_shiftFalse_l20.01!0.7204438310953628!0.5262095404765004!0.5703391956180999!0.758219219106093!0.7637172657263149!!!!!!!!!!!!!!!!!!!!!!0.01!False!False
scaleshift!55.0!15-10-07!0.001!0.5826064348220825!50.0!<class 'torchdeepretina.models.SSCNN'>!True![8, 8]!scaleshift/results.txt!0.0001!!0.0!0.0001!False!0.6902494638723082!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=False)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.3704616312577608!all!!0.1!0.0893582529836495!naturalscene!!!0.6442823839539012!-3.395420217945565!512.0!-3.19918621304605!scaleshift/scaleshift_55_lr0.0001_biasTrue_linear_biasFalse_shiftFalse_l20.001!0.7248824311078009!0.608111679769966!0.617530241538321!0.7668707109606411!0.7338522559848121!!!!!!!!!!!!!!!!!!!!!!0.01!False!False
scaleshift!56.0!15-10-07!0.01!0.5014764070510864!50.0!<class 'torchdeepretina.models.SSCNN'>!False![8, 8]!scaleshift/results.txt!0.0001!!0.0!0.0001!False!0.6192685813298974!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.455272744016672!all!!0.1!0.15029983475344627!naturalscene!!!0.6247164888606367!-2.564402272169047!512.0!-1.740085491474383!scaleshift/scaleshift_56_lr0.0001_biasFalse_linear_biasTrue_shiftTrue_l20.01!0.6604882006641859!0.4893983254261305!0.5501260416198959!0.6757829433257343!0.7205473956135406!!!!!!!!!!!!!!!!!!!!!!0.01!True!True
scaleshift!57.0!15-10-07!0.001!0.5724474191665649!50.0!<class 'torchdeepretina.models.SSCNN'>!False![8, 8]!scaleshift/results.txt!0.0001!!0.0!0.0001!False!0.6899599968401875!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.3700922445957172!all!!0.1!0.09111003696052908!naturalscene!!!0.6338747414609966!-3.3705354785128057!512.0!-3.1636257282669247!scaleshift/scaleshift_57_lr0.0001_biasFalse_linear_biasTrue_shiftTrue_l20.001!0.7228765090286486!0.5939394256739914!0.61436036256976!0.7694048125501946!0.7492188743783427!!!!!!!!!!!!!!!!!!!!!!0.01!True!True
scaleshift!58.0!15-10-07!0.01!0.5320382714271545!50.0!<class 'torchdeepretina.models.SSCNN'>!False![8, 8]!scaleshift/results.txt!0.0001!!0.0!0.0001!False!0.6555004720812383!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.4541842903973128!all!!0.1!0.10154702569822274!naturalscene!!!0.6976453980928797!-2.8110362783995866!512.0!-1.4803020444885988!scaleshift/scaleshift_58_lr0.0001_biasFalse_linear_biasTrue_shiftFalse_l20.01!0.7023999875464683!0.5387719650795213!0.5526514794946477!0.7436358245238684!0.7400431037616853!!!!!!!!!!!!!!!!!!!!!!0.01!True!False
scaleshift!59.0!15-10-07!0.001!0.5790402889251709!50.0!<class 'torchdeepretina.models.SSCNN'>!False![8, 8]!scaleshift/results.txt!0.0001!!0.0!0.0001!False!0.6653674562935346!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.3633751664111253!all!!0.1!0.08157959441453708!naturalscene!!!0.6495387164192218!-3.3775886151585643!512.0!-3.0072825955885487!scaleshift/scaleshift_59_lr0.0001_biasFalse_linear_biasTrue_shiftFalse_l20.001!0.7088955172065313!0.5841365048337263!0.6009800854748129!0.7241556086362896!0.7086695653163122!!!!!!!!!!!!!!!!!!!!!!0.01!True!False
scaleshift!5.0!15-10-07!0.001!!50.0!<class 'torchdeepretina.models.SSCNN'>!True![8, 8]!scaleshift/results.txt!0.002!!0.0!0.0001!False!!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=False)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!!all!!0.1!!naturalscene!!!!inf!512.0!!scaleshift/scaleshift_5_lr0.002_biasTrue_linear_biasFalse_shiftTrue_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!!0.01!False!True
scaleshift!60.0!15-10-07!0.01!0.5394362807273865!50.0!<class 'torchdeepretina.models.SSCNN'>!False![8, 8]!scaleshift/results.txt!0.0001!!0.0!0.0001!False!0.6901871826822455!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=False)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.3794857406597255!all!!0.1!0.08499343776098113!naturalscene!!!0.7185763688161285!-2.922692324870672!512.0!-1.7571740720819435!scaleshift/scaleshift_60_lr0.0001_biasFalse_linear_biasFalse_shiftTrue_l20.01!0.7472006308872873!0.5998525602218668!0.5923696980065132!0.7745851862991219!0.7369278379964388!!!!!!!!!!!!!!!!!!!!!!0.01!False!True
scaleshift!61.0!15-10-07!0.001!0.5760686993598938!50.0!<class 'torchdeepretina.models.SSCNN'>!False![8, 8]!scaleshift/results.txt!0.0001!!0.0!0.0001!False!0.6887186454752321!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=False)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.35799011234185146!all!!0.1!0.0892680098627344!naturalscene!!!0.5991030328368538!-3.3797711890027893!512.0!-3.2260672584903665!scaleshift/scaleshift_61_lr0.0001_biasFalse_linear_biasFalse_shiftTrue_l20.001!0.7092348781317451!0.6431593114470381!0.5969528900332093!0.7600485289081406!0.7341976188560271!!!!!!!!!!!!!!!!!!!!!!0.01!False!True
scaleshift!62.0!15-10-07!0.01!0.5182574391365051!50.0!<class 'torchdeepretina.models.SSCNN'>!False![8, 8]!scaleshift/results.txt!0.0001!!0.0!0.0001!False!0.6492999535251389!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=False)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.4323855840368349!all!!0.1!0.1391716943825154!naturalscene!!!0.7135455085685135!-2.7675907743103005!512.0!-1.8824405767472852!scaleshift/scaleshift_62_lr0.0001_biasFalse_linear_biasFalse_shiftFalse_l20.01!0.6957613641223813!0.5106802185783823!0.5625842456302464!0.7430272191963043!0.7344467200983803!!!!!!!!!!!!!!!!!!!!!!0.01!False!False
scaleshift!63.0!15-10-07!0.001!0.5767647624015808!50.0!<class 'torchdeepretina.models.SSCNN'>!False![8, 8]!scaleshift/results.txt!0.0001!!0.0!0.0001!False!0.6761007234002735!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=False)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.3792016748700944!all!!0.1!0.09848594848971387!naturalscene!!!0.6765269940691753!-3.3294883894524783!512.0!-3.2658082967511293!scaleshift/scaleshift_63_lr0.0001_biasFalse_linear_biasFalse_shiftFalse_l20.001!0.7096382097925747!0.6037620728349082!0.581959948500135!0.7457586292465457!0.7393847566272037!!!!!!!!!!!!!!!!!!!!!!0.01!False!False
scaleshift!6.0!15-10-07!0.01!!50.0!<class 'torchdeepretina.models.SSCNN'>!True![8, 8]!scaleshift/results.txt!0.002!!0.0!0.0001!False!!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=False)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!!all!!0.1!!naturalscene!!!!inf!512.0!!scaleshift/scaleshift_6_lr0.002_biasTrue_linear_biasFalse_shiftFalse_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!0.01!False!False
scaleshift!7.0!15-10-07!0.001!!50.0!<class 'torchdeepretina.models.SSCNN'>!True![8, 8]!scaleshift/results.txt!0.002!!0.0!0.0001!False!!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=False)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!!all!!0.1!!naturalscene!!!!inf!512.0!!scaleshift/scaleshift_7_lr0.002_biasTrue_linear_biasFalse_shiftFalse_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!!0.01!False!False
scaleshift!8.0!15-10-07!0.01!!50.0!<class 'torchdeepretina.models.SSCNN'>!False![8, 8]!scaleshift/results.txt!0.002!!0.0!0.0001!False!!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!!all!!0.1!!naturalscene!!!!inf!512.0!!scaleshift/scaleshift_8_lr0.002_biasFalse_linear_biasTrue_shiftTrue_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!!0.01!True!True
scaleshift!9.0!15-10-07!0.001!!50.0!<class 'torchdeepretina.models.SSCNN'>!False![8, 8]!scaleshift/results.txt!0.002!!0.0!0.0001!False!!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!!all!!0.1!!naturalscene!!!!inf!512.0!!scaleshift/scaleshift_9_lr0.002_biasFalse_linear_biasTrue_shiftTrue_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!!0.01!True!True
absbndalesbncnn!0.0!15-10-07!0.001!0.4693563580513001!50.0!<class 'torchdeepretina.models.AbsBNDalesBNCNN'>!True![8, 8]!absbndalesbncnn/results.txt!0.0007!!0.0!0.0001!False!0.5763222942363583!AbsBNDalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (10): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.5002377462248075!all!!0.1!0.2660650835930741!naturalscene!!!0.6541409651194299!-2.0915460106474244!512.0!-2.150954423780058!absbndalesbncnn/absbndalesbncnn_0_lr0.0007!0.62698724244736!0.3910805445001686!0.4850861849745611!0.6928801928575661!0.6855773064021355!!!!!!!!!!!!!!!!!!!!!!0.01!None!
absbndalesbncnn!1.0!15-10-07!0.001!0.41788774728775024!50.0!<class 'torchdeepretina.models.AbsBNDalesBNCNN'>!True![8, 8]!absbndalesbncnn/results.txt!0.0005!!0.0!0.0001!False!0.4997016489923841!AbsBNDalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (10): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.5054151669332949!all!!0.1!0.16186248430343442!naturalscene!!!0.7592594669819964!-1.8730203255696356!512.0!-1.9874417801529491!absbndalesbncnn/absbndalesbncnn_1_lr0.0005!0.5270879907646123!0.35654817252006243!0.4207255195529202!0.5864699113941473!0.6076766507301777!!!!!!!!!!!!!!!!!!!!!!0.01!None!
absbndalesbncnn!2.0!15-10-07!0.001!0.3826979100704193!50.0!<class 'torchdeepretina.models.AbsBNDalesBNCNN'>!True![8, 8]!absbndalesbncnn/results.txt!0.0002!!0.0!0.0001!False!0.4597718691751148!AbsBNDalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (10): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.5138916086103441!all!!0.1!0.15864665637228864!naturalscene!!!0.7813709260992154!-1.819979136059592!512.0!-1.6767210824909853!absbndalesbncnn/absbndalesbncnn_2_lr0.0002!0.4769608905595346!0.3785171152125584!0.4484185841692856!0.5337901206837117!0.4611726352504839!!!!!!!!!!!!!!!!!!!!!!0.01!None!
absbndalesbncnn!3.0!15-10-07!0.001!0.3326292634010315!50.0!<class 'torchdeepretina.models.AbsBNDalesBNCNN'>!True![8, 8]!absbndalesbncnn/results.txt!0.0001!!0.0!0.0001!False!0.4082111315173141!AbsBNDalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (10): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.4982600310877765!all!!0.1!0.15202293004492484!naturalscene!!!0.7095557280416378!-1.6254537145397872!512.0!-1.0981064119951045!absbndalesbncnn/absbndalesbncnn_3_lr0.0001!0.4216471592420983!0.3257554505102895!0.39480201161600215!0.4927324394257568!0.4061185967924236!!!!!!!!!!!!!!!!!!!!!!0.01!None!
absbndalesbncnn!4.0!15-10-07!0.001!0.403379499912262!50.0!<class 'torchdeepretina.models.AbsBNDalesBNCNN'>!True![8, 8]!absbndalesbncnn/results.txt!7e-05!!0.0!0.0001!False!0.4721710747608195!AbsBNDalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (10): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.4157220493162711!all!!0.1!0.12771035918606852!naturalscene!!!0.6686562028494307!-1.7425029525367564!512.0!-1.8725178362772568!absbndalesbncnn/absbndalesbncnn_4_lr7e-05!0.4992103407669299!0.3785509906815156!0.4624410751468516!0.5218188518171603!0.4988341153916404!!!!!!!!!!!!!!!!!!!!!!0.01!None!
bncnnadaptgauss!18.0!15-10-07!0.01!0.2644946545362473!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnadaptgauss/results.txt!0.005!!18.0!0.0001!True!0.6822579937763548!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=True)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=True)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4110192359758649!all!!0.05!0.08660399120265913!naturalscene!!!0.7286423057810992!-3.0286080792299037!512.0!-2.8390240524313413!bncnnadaptgauss/bncnnadaptgauss_18_noise0.05_lr0.005!0.6976099572177519!0.6092328187015975!0.6112266773459274!0.7391993640617952!0.7540211515547022!!!!!!!!!!!!!!!!!!!!!!!!
bncnnadaptgauss!19.0!15-10-07!0.01!0.3460561096668243!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnadaptgauss/results.txt!0.0001!!18.0!0.0001!True!0.6076298848880276!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=True)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=True)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.34990806724582885!all!!0.05!0.09845016560535938!naturalscene!!!0.6058217338555625!-4.0079975396080085!512.0!-3.7224684934572!bncnnadaptgauss/bncnnadaptgauss_19_noise0.05_lr0.0001!0.6669960864213998!0.4947838211374847!0.4650341779016041!0.7120250172246722!0.6993103217549768!!!!!!!!!!!!!!!!!!!!!!!!
bncnnadaptgauss!20.0!15-10-07!0.01!0.2734157085418701!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnadaptgauss/results.txt!0.005!!18.0!0.0001!True!0.6896707683610707!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=True)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=True)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.42689109445612!all!!0.1!0.12259060963922065!naturalscene!!!0.7382655769996813!-3.0049865288971778!512.0!-3.01822484314107!bncnnadaptgauss/bncnnadaptgauss_20_noise0.1_lr0.005!0.7077812493709461!0.6126099396195361!0.6093914574173657!0.7658216919144567!0.7527495034830486!!!!!!!!!!!!!!!!!!!!!!!!
bncnnadaptgauss!21.0!15-10-07!0.01!0.3432451367378235!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnadaptgauss/results.txt!0.0001!!18.0!0.0001!True!0.6027194689696783!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=True)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=True)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3261832811939704!all!!0.1!0.07768665194171942!naturalscene!!!0.5836776618107732!-3.8883606513700872!512.0!-3.5873113568577537!bncnnadaptgauss/bncnnadaptgauss_21_noise0.1_lr0.0001!0.6701585702637991!0.4613378955414482!0.4857225933793951!0.6845318876696697!0.7118463979940797!!!!!!!!!!!!!!!!!!!!!!!!
bncnnadaptgauss!22.0!15-10-07!0.01!0.2757522046566009!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnadaptgauss/results.txt!0.005!!18.0!0.0001!True!0.6819489429085139!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.15, trainable=False, adapt=True)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.15, trainable=False, adapt=True)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.41972329691570026!all!!0.15!0.1230215041928751!naturalscene!!!0.7261115019676243!-2.9763224666115025!512.0!-3.2357531648522126!bncnnadaptgauss/bncnnadaptgauss_22_noise0.15_lr0.005!0.7111587327298754!0.5955968376159099!0.5945950912604306!0.7373022280398207!0.7710918248965329!!!!!!!!!!!!!!!!!!!!!!!!
bncnnadaptgauss!23.0!15-10-07!0.01!0.3395799696445465!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnadaptgauss/results.txt!0.0001!!18.0!0.0001!True!0.6314752061277641!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.15, trainable=False, adapt=True)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.15, trainable=False, adapt=True)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.33250733339196525!all!!0.15!0.08600920750518162!naturalscene!!!0.5939521368800433!-3.8641697197118674!512.0!-3.5554027977650553!bncnnadaptgauss/bncnnadaptgauss_23_noise0.15_lr0.0001!0.6686239923047228!0.50955383596872!0.5091478153696992!0.7232060960712646!0.7468442909244138!!!!!!!!!!!!!!!!!!!!!!!!
bncnnadaptgauss!24.0!15-10-07!0.01!0.265457421541214!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnadaptgauss/results.txt!0.005!!18.0!0.0001!True!0.6738618273780567!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.2, trainable=False, adapt=True)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.2, trainable=False, adapt=True)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4000964533924263!all!!0.2!0.13082078326841273!naturalscene!!!0.6859029242338435!-2.996069474277813!512.0!-2.86758135996206!bncnnadaptgauss/bncnnadaptgauss_24_noise0.2_lr0.005!0.6881263340669913!0.5940949382842488!0.5970753315620029!0.7234276032239155!0.766584929753125!!!!!!!!!!!!!!!!!!!!!!!!
bncnnadaptgauss!25.0!15-10-07!0.01!0.3392699182033539!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnadaptgauss/results.txt!0.0001!!18.0!0.0001!True!0.644997070611856!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.2, trainable=False, adapt=True)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.2, trainable=False, adapt=True)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3057663605212489!all!!0.2!0.08035830554916522!naturalscene!!!0.5267815661076192!-3.8112269873712576!512.0!-3.626897835702039!bncnnadaptgauss/bncnnadaptgauss_25_noise0.2_lr0.0001!0.6994991955871523!0.5419545297547232!0.5403425898588106!0.7288321653782713!0.714356872480322!!!!!!!!!!!!!!!!!!!!!!!!
bncnnadaptgauss!26.0!15-10-07!0.01!0.26090507209300995!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnadaptgauss/results.txt!0.005!!18.0!0.0001!True!0.668198398012396!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.3, trainable=False, adapt=True)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.3, trainable=False, adapt=True)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4173425565863354!all!!0.3!0.11964991214727735!naturalscene!!!0.7167171350282274!-2.8799847260140012!512.0!-2.7366478285875933!bncnnadaptgauss/bncnnadaptgauss_26_noise0.3_lr0.005!0.6736382487098076!0.5840734229383472!0.5836083028071734!0.7317898997757466!0.7678821158309048!!!!!!!!!!!!!!!!!!!!!!!!
bncnnadaptgauss!27.0!15-10-07!0.01!0.33581348657608034!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnadaptgauss/results.txt!0.0001!!18.0!0.0001!True!0.6695797433175401!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.3, trainable=False, adapt=True)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.3, trainable=False, adapt=True)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3264536414377582!all!!0.3!0.08526264950031781!naturalscene!!!0.5752519900348952!-3.698410331753404!512.0!-3.5733742817537864!bncnnadaptgauss/bncnnadaptgauss_27_noise0.3_lr0.0001!0.7150377910480158!0.5466213261554321!0.5797424288098814!0.7521736423109068!0.7543235282634642!!!!!!!!!!!!!!!!!!!!!!!!
bncnnchanssearch!24!15-10-07!0.001!0.6096847653388977!50!<class 'torchdeepretina.models.BNCNN'>!True![9, 9]!bncnnchanssearch/results.txt!0.001!!24!0.0001!False!0.7273234813447905!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 9, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(11664, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(9, 9, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(6084, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=6084, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.36921126123120623!all!!0.1!0.09226557392577218!naturalscene!!!0.6533560286256611!-3.337658576835874!512!-3.2590766417095436!bncnnchanssearch/bncnnchanssearch_24_chans[9, 9]!0.7541379198508716!0.6652860383439708!0.6367936659898779!0.7656504654157128!0.8147493171235195!!!!!!!!!!!!!!!!!!!!!!0.01!True!
bncnnchanssearch!25!15-10-07!0.001!0.6027482748031616!50!<class 'torchdeepretina.models.BNCNN'>!True![9, 8]!bncnnchanssearch/results.txt!0.001!!24!0.0001!False!0.6960757017092527!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 9, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(11664, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(9, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3544792341325302!all!!0.1!0.1275812920533133!naturalscene!!!0.5963350744997822!-3.3136782110366707!512!-3.1981176956080164!bncnnchanssearch/bncnnchanssearch_25_chans[9, 8]!0.7034527360136239!0.6230185107368305!0.6189488253226187!0.7517163971811334!0.7832420392920569!!!!!!!!!!!!!!!!!!!!!!0.01!True!
bncnnchanssearch!26!15-10-07!0.001!0.5825299024581909!50!<class 'torchdeepretina.models.BNCNN'>!True![8, 9]!bncnnchanssearch/results.txt!0.001!!24!0.0001!False!0.7021673486606796!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 9, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(6084, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=6084, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3561702114123074!all!!0.1!0.09289980244511466!naturalscene!!!0.6188626107625451!-3.3156665200381616!512!-3.15490762080226!bncnnchanssearch/bncnnchanssearch_26_chans[8, 9]!0.6993406613224714!0.6442442892755721!0.6316331795778352!0.731064837858478!0.8045537752690418!!!!!!!!!!!!!!!!!!!!!!0.01!True!
bncnnchanssearch!27!15-10-07!0.001!0.6211251616477966!50!<class 'torchdeepretina.models.BNCNN'>!True![10, 10]!bncnnchanssearch/results.txt!0.001!!24!0.0001!False!0.7397398747281034!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 10, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(12960, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(10, 10, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(6760, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=6760, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3546994844699956!all!!0.1!0.13290389007906656!naturalscene!!!0.6445438127803708!-3.41069333351935!512!-3.2306122753561795!bncnnchanssearch/bncnnchanssearch_27_chans[10, 10]!0.769456634805396!0.659818518642364!0.6438447336481455!0.7936686330603998!0.831910853484212!!!!!!!!!!!!!!!!!!!!!!0.01!True!
bncnnchanssearch!28!15-10-07!0.001!0.6120895147323608!50!<class 'torchdeepretina.models.BNCNN'>!True![10, 8]!bncnnchanssearch/results.txt!0.001!!24!0.0001!False!0.7156517099987776!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 10, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(12960, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(10, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.35105330357333653!all!!0.1!0.12030223314355273!naturalscene!!!0.5825312108112373!-3.29958662835721!512!-3.5370429444421463!bncnnchanssearch/bncnnchanssearch_28_chans[10, 8]!0.709032805287576!0.6157326207259107!0.6485065159740223!0.7805183073958678!0.8244683006105117!!!!!!!!!!!!!!!!!!!!!!0.01!True!
bncnnchanssearch!29!15-10-07!0.001!0.6054245829582214!50!<class 'torchdeepretina.models.BNCNN'>!True![8, 10]!bncnnchanssearch/results.txt!0.001!!24!0.0001!False!0.7091637723689109!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 10, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(6760, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=6760, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3574212358767356!all!!0.1!0.133374247152674!naturalscene!!!0.6123343568300254!-3.326476527195351!512!-3.1946306409241516!bncnnchanssearch/bncnnchanssearch_29_chans[8, 10]!0.7504909354144947!0.6169594333101215!0.620137312873431!0.7741445695238035!0.784086610722704!!!!!!!!!!!!!!!!!!!!!!0.01!True!
bncnnchanssearch!30!15-10-07!0.001!0.5892122983932495!50!<class 'torchdeepretina.models.BNCNN'>!True![12, 12]!bncnnchanssearch/results.txt!0.001!!24!0.0001!False!0.6859509007516703!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 12, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(15552, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(12, 12, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(8112, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=8112, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.34425010604962814!all!!0.1!0.13341071060494197!naturalscene!!!0.6130360575195326!-3.34438901339541!512!-3.1346906815975673!bncnnchanssearch/bncnnchanssearch_30_chans[12, 12]!0.7157017708459288!0.6116073002350955!0.5863541762633442!0.7453553190553288!0.7707359373586541!!!!!!!!!!!!!!!!!!!!!!0.01!True!
bncnnchanssearch!31!15-10-07!0.001!0.5907084345817566!50!<class 'torchdeepretina.models.BNCNN'>!True![12, 8]!bncnnchanssearch/results.txt!0.001!!24!0.0001!False!0.7111657223044721!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 12, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(15552, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(12, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3841316532309769!all!!0.1!0.12787284482181432!naturalscene!!!0.6237835465781344!-3.3237608667592298!512!-3.183049797681451!bncnnchanssearch/bncnnchanssearch_31_chans[12, 8]!0.7230520269495762!0.6505290286398899!0.6331606932750037!0.7324811713318994!0.816605691325991!!!!!!!!!!!!!!!!!!!!!!0.01!True!
bncnnchanssearch!32!15-10-07!0.001!0.6155773401260376!50!<class 'torchdeepretina.models.BNCNN'>!True![8, 12]!bncnnchanssearch/results.txt!0.001!!24!0.0001!False!0.7176412694849774!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 12, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(8112, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=8112, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.37268184404061255!all!!0.1!0.10573807848304123!naturalscene!!!0.6196977599965365!-3.36401612096962!512!-3.2728743006318837!bncnnchanssearch/bncnnchanssearch_32_chans[8, 12]!0.7369811127004643!0.6508245042593732!0.632877649254257!0.7760184299866987!0.7915046512240935!!!!!!!!!!!!!!!!!!!!!!0.01!True!
absbnbncnn!0!15-10-07!0.01!0.5389859676361084!50!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![8, 8]!absbnbncnn/results.txt!0.0007!!0!0.0001!False!0.6745291405702502!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.01, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.01, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.01, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.38537888540086135!all!!0.1!0.15664766437714822!naturalscene!!!0.6334850612268782!-2.806527075184956!512!-2.7414646075078055!absbnbncnn/absbnbncnn_0_lr0.0007_l20.01!0.6770615134461859!0.6181587763704524!0.5883175108774525!0.7312075673178628!0.7579003348392975!!!!!!!!!!!!!!!!!!!!!!0.01!None!
absbnbncnn!1!15-10-07!0.001!0.6053382754325867!50!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![8, 8]!absbnbncnn/results.txt!0.0007!!0!0.0001!False!0.7226851612123188!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.01, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.01, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.01, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3535259352804894!all!!0.1!0.10951248768044411!naturalscene!!!0.6304736591830409!-3.3102935802523006!512!-3.3210669669948403!absbnbncnn/absbnbncnn_1_lr0.0007_l20.001!0.7272826855636754!0.6554744511824909!0.6726085140349689!0.76971860977506!0.7883415455053996!!!!!!!!!!!!!!!!!!!!!!0.01!None!
absbnbncnn!2!15-10-07!0.01!0.5716907978057861!50!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![8, 8]!absbnbncnn/results.txt!0.0002!!0!0.0001!False!0.7159882084205916!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.01, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.01, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.01, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3804359817532464!all!!0.1!0.13797246423470322!naturalscene!!!0.6014698547966189!-2.9226238114441863!512!-3.097749115796978!absbnbncnn/absbnbncnn_2_lr0.0002_l20.01!0.7302692625603865!0.6584034526709505!0.620570823976533!0.7651841244114677!0.8055133784836209!!!!!!!!!!!!!!!!!!!!!!0.01!None!
absbnbncnn!3!15-10-07!0.001!0.6122494339942932!50!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![8, 8]!absbnbncnn/results.txt!0.0002!!0!0.0001!False!0.7150226500765238!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.01, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.01, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.01, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.34989648729842027!all!!0.1!0.10697946780478498!naturalscene!!!0.6337165918381485!-3.309742539896325!512!-3.2947551999783173!absbnbncnn/absbnbncnn_3_lr0.0002_l20.001!0.7370381643054181!0.6610499934354694!0.6097561095507782!0.7700747460214494!0.7971942370695043!!!!!!!!!!!!!!!!!!!!!!0.01!None!
absbnbncnn!4!15-10-07!0.01!0.5660518407821655!50!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![8, 8]!absbnbncnn/results.txt!8e-05!!0!0.0001!False!0.7157354811063128!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.01, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.01, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.01, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.357658168522143!all!!0.1!0.10182891463519664!naturalscene!!!0.6214967816716869!-2.8154404006932117!512!-3.130455187714688!absbnbncnn/absbnbncnn_4_lr8e-05_l20.01!0.7409736916669144!0.661018298889253!0.6247533977021595!0.7700883166859396!0.7818437005872979!!!!!!!!!!!!!!!!!!!!!!0.01!None!
absbnbncnn!5!15-10-07!0.001!0.6009839773178101!50!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![8, 8]!absbnbncnn/results.txt!8e-05!!0!0.0001!False!0.6294623249112042!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.01, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.01, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.01, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.32652189501964596!all!!0.1!0.08892269382635361!naturalscene!!!0.555628401613488!-3.1779554627419957!512!-3.0816123937598605!absbnbncnn/absbnbncnn_5_lr8e-05_l20.001!0.6787299526554043!0.5470985363292086!0.5091552127466416!0.7307406198077115!0.6815873030170553!!!!!!!!!!!!!!!!!!!!!!0.01!None!
absbnbncnn!0!15-10-07!0.01!0.5389859676361084!50!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![8, 8]!absbnbncnn/results.txt!0.0007!!0!0.0001!False!0.6745291405702502!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.01, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.01, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.01, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.38537888540086135!all!!0.1!0.15664766437714822!naturalscene!!!0.6334850612268782!-2.806527075184956!512!-2.7414646075078055!absbnbncnn/absbnbncnn_0_lr0.0007_l20.01!0.6770615134461859!0.6181587763704524!0.5883175108774525!0.7312075673178628!0.7579003348392975!!!!!!!!!!!!!!!!!!!!!!0.01!None!
absbnbncnn!1!15-10-07!0.001!0.6053382754325867!50!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![8, 8]!absbnbncnn/results.txt!0.0007!!0!0.0001!False!0.7226851612123188!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.01, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.01, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.01, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3535259352804894!all!!0.1!0.10951248768044411!naturalscene!!!0.6304736591830409!-3.3102935802523006!512!-3.3210669669948403!absbnbncnn/absbnbncnn_1_lr0.0007_l20.001!0.7272826855636754!0.6554744511824909!0.6726085140349689!0.76971860977506!0.7883415455053996!!!!!!!!!!!!!!!!!!!!!!0.01!None!
absbnbncnn!2!15-10-07!0.01!0.5716907978057861!50!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![8, 8]!absbnbncnn/results.txt!0.0002!!0!0.0001!False!0.7159882084205916!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.01, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.01, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.01, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3804359817532464!all!!0.1!0.13797246423470322!naturalscene!!!0.6014698547966189!-2.9226238114441863!512!-3.097749115796978!absbnbncnn/absbnbncnn_2_lr0.0002_l20.01!0.7302692625603865!0.6584034526709505!0.620570823976533!0.7651841244114677!0.8055133784836209!!!!!!!!!!!!!!!!!!!!!!0.01!None!
absbnbncnn!3!15-10-07!0.001!0.6122494339942932!50!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![8, 8]!absbnbncnn/results.txt!0.0002!!0!0.0001!False!0.7150226500765238!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.01, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.01, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.01, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.34989648729842027!all!!0.1!0.10697946780478498!naturalscene!!!0.6337165918381485!-3.309742539896325!512!-3.2947551999783173!absbnbncnn/absbnbncnn_3_lr0.0002_l20.001!0.7370381643054181!0.6610499934354694!0.6097561095507782!0.7700747460214494!0.7971942370695043!!!!!!!!!!!!!!!!!!!!!!0.01!None!
absbnbncnn!4!15-10-07!0.01!0.5660518407821655!50!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![8, 8]!absbnbncnn/results.txt!8e-05!!0!0.0001!False!0.7157354811063128!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.01, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.01, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.01, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.357658168522143!all!!0.1!0.10182891463519664!naturalscene!!!0.6214967816716869!-2.8154404006932117!512!-3.130455187714688!absbnbncnn/absbnbncnn_4_lr8e-05_l20.01!0.7409736916669144!0.661018298889253!0.6247533977021595!0.7700883166859396!0.7818437005872979!!!!!!!!!!!!!!!!!!!!!!0.01!None!
absbnbncnn!5!15-10-07!0.001!0.6009839773178101!50!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![8, 8]!absbnbncnn/results.txt!8e-05!!0!0.0001!False!0.6294623249112042!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.01, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.01, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.01, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.32652189501964596!all!!0.1!0.08892269382635361!naturalscene!!!0.555628401613488!-3.1779554627419957!512!-3.0816123937598605!absbnbncnn/absbnbncnn_5_lr8e-05_l20.001!0.6787299526554043!0.5470985363292086!0.5091552127466416!0.7307406198077115!0.6815873030170553!!!!!!!!!!!!!!!!!!!!!!0.01!None!
dalesskip!14!15-10-07!0.001!0.5136132836341858!50!<class 'torchdeepretina.models.DalesSkipBNCNN'>!True![8, 8]!dalesskip/results.txt!0.001!!14!0.0001!False!0.6392262877221698!DalesSkipBNCNN(#  (sequential): Sequential(#    (0): DalesSkipConnection(#      (sequential): Sequential(#        (0): AbsConv2d(#          (conv): Conv2d(40, 2, kernel_size=(15, 15), stride=(1, 1), padding=(7, 7))#        )#        (1): Flatten()#        (2): BatchNorm1d(5000, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (3): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#        (4): ReLU()#        (5): Reshape()#        (6): DaleActivations(n_chan=2, neg_p=1, n_neg_chan=2)#      )#    )#    (1): AbsConv2d(#      (conv): Conv2d(42, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (2): Flatten()#    (3): BatchNorm1d(10368, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)#    (4): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (5): ReLU()#    (6): Reshape()#    (7): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (8): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)#    (11): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (12): ReLU()#    (13): Reshape()#    (14): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (15): Flatten()#    (16): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (17): BatchNorm1d(5, eps=1e-05, momentum=0.01, affine=True, track_running_stats=True)#    (18): Softplus(beta=1, threshold=20)#  )#)#!0.4289001136453876!all!!0.05!0.16688554543519143!naturalscene!!!0.6471805943124415!-2.6236726914056288!512!-2.6087128218641737!dalesskip/dalesskip_14_noise0.05!0.6697018237393859!0.5453791716257667!0.557274394313742!0.7103374595234583!0.7134385894084962!!!!!!!!!!!!!!!!!!!!!!0.01!True!
dalesskip!15!15-10-07!0.001!0.4492165446281433!50!<class 'torchdeepretina.models.DalesSkipBNCNN'>!True![8, 8]!dalesskip/results.txt!0.001!!14!0.0001!False!0.5590225937887876!DalesSkipBNCNN(#  (sequential): Sequential(#    (0): DalesSkipConnection(#      (sequential): Sequential(#        (0): AbsConv2d(#          (conv): Conv2d(40, 2, kernel_size=(15, 15), stride=(1, 1), padding=(7, 7))#        )#        (1): Flatten()#        (2): BatchNorm1d(5000, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#        (4): ReLU()#        (5): Reshape()#        (6): DaleActivations(n_chan=2, neg_p=1, n_neg_chan=2)#      )#    )#    (1): AbsConv2d(#      (conv): Conv2d(42, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (2): Flatten()#    (3): BatchNorm1d(10368, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)#    (4): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (5): ReLU()#    (6): Reshape()#    (7): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (8): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)#    (11): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (12): ReLU()#    (13): Reshape()#    (14): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (15): Flatten()#    (16): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (17): BatchNorm1d(5, eps=1e-05, momentum=0.01, affine=True, track_running_stats=True)#    (18): Softplus(beta=1, threshold=20)#  )#)#!0.33872147939891845!all!!0.1!0.11052688626481257!naturalscene!!!0.6376451596361544!-2.3695270269884423!512!-2.1343898553790495!dalesskip/dalesskip_15_noise0.1!0.5947307019547464!0.39134580167140753!0.5119676874506022!0.5792833714295696!0.7177854064376122!!!!!!!!!!!!!!!!!!!!!!0.01!True!
dalesbncnnfixedbias!0!15-10-07!0.001!0.49249905347824097!50!<class 'torchdeepretina.models.DalesBNCNN'>!True![8, 8]!dalesbncnnfixedbias/results.txt!0.001!!0!0.0001!False!0.6110966323442579!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.01, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.47910706504991385!all!!0.05!0.1960295968039636!naturalscene!!!0.6634854676719649!-2.373335829147926!512!-2.441412721047891!dalesbncnnfixedbias/dalesbncnnfixedbias_0_noise0.05!0.660163489758273!0.43356412033876396!0.5233332280139043!0.6935205657906942!0.7449017578196542!!!!!!!!!!!!!!!!!!!!!!0.01!True!
dalesbncnnfixedbias!1!15-10-07!0.001!0.4819185137748718!50!<class 'torchdeepretina.models.DalesBNCNN'>!True![8, 8]!dalesbncnnfixedbias/results.txt!0.001!!0!0.0001!False!0.5997571455404305!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.01, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.41654051061126757!all!!0.1!0.15590469894669173!naturalscene!!!0.681056807284813!-2.1679990025936746!512!-2.362101694464582!dalesbncnnfixedbias/dalesbncnnfixedbias_1_noise0.1!0.6525111414081645!0.38710582818468575!0.5080984331841052!0.695314513163346!0.7557558117618509!!!!!!!!!!!!!!!!!!!!!!0.01!True!
