exp_name!exp_num!dataset!l2!ValAcc!n_epochs!model_type!bias!chans!results_file!lr!n_output_units!starting_exp_num!l1!adapt_gauss!FinalTestAcc!architecture!Meanintracellular!cells!ValLoss!noise!Minintracellular!stim_type!poor_results!TrainLoss!Maxintracellular!FinalLoss!batch_size!FinalVal!save_folder!cell0!cell1!cell2!cell3!cell4!cell5!cell6!cell7!cell8!cell9!cell10!cell11!cell12!cell13!cell14!cell16!cell17!cell18!cell20!cell21!cell22!cell23!cell24!cell25!cell27!cell31
old_bncnn!0.0!15-10-07!0.05!0.26807584166526793!100.0!<class 'models.BN_CNN.BNCNN'>!False!!bncnn/results.txt!0.005!5.0!!0.001!!0.6592844066600281!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3795145769957826!!!0.05!0.09517904833334227!naturalscene!!!0.5524672679159908!-1.6604126444589318!512.0!-2.6593296825885773!bncnn/bncnn_0_lr0.005_l10.001_l20.05!!!!!!!!!!!!!!!!!!!!!!!!!!
old_bncnn!0.0!15-10-07!0.01!0.28974696099758146!100.0!<class 'models.BN_CNN.BNCNN'>!False!!bncnn/results.txt!0.01!5.0!!0.001!!0.6838911355068593!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.350699261944646!!!0.05!0.09730403659323912!naturalscene!!!0.5567608156701644!-2.330271990950111!512.0!-3.0405193567276!bncnn/bncnn_0_lr0.01_l10.001_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!
old_bncnn!10.0!15-10-07!0.05!0.2926563441753388!100.0!<class 'models.BN_CNN.BNCNN'>!False!!bncnn/results.txt!0.0001!5.0!8.0!0.0005!!0.6794996650465238!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3118418064121629!!!0.05!0.07168566133707065!naturalscene!!!0.5651015650848275!-2.449850166185589!512.0!-3.092540889978409!bncnn/bncnn_10_lr0.0001_l10.0005_l20.05!!!!!!!!!!!!!!!!!!!!!!!!!!
old_bncnn!11.0!15-10-07!0.005!0.32011770009994506!100.0!<class 'models.BN_CNN.BNCNN'>!False!!bncnn/results.txt!0.0001!5.0!8.0!0.0005!!0.6665564985426143!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3074646600014813!!!0.05!0.08009923906059634!naturalscene!!!0.5772527088261973!-2.977392490992538!512.0!-3.3360692262649536!bncnn/bncnn_11_lr0.0001_l10.0005_l20.005!!!!!!!!!!!!!!!!!!!!!!!!!!
old_bncnn!12.0!15-10-07!0.05!0.2699589729309082!200.0!<class 'models.BN_CNN.BNCNN'>!False!!bncnn/results.txt!0.005!5.0!12.0!0.005!!0.6488477829676647!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3169602632774485!!!0.05!0.09303293717229387!naturalscene!!!0.5927013449169004!-2.768273057007208!4112.0!-2.6782466769218445!bncnn/bncnn_12_lr0.005_l10.005_l20.05!!!!!!!!!!!!!!!!!!!!!!!!!!
old_bncnn!13.0!15-10-07!0.01!0.3026782929897308!200.0!<class 'models.BN_CNN.BNCNN'>!False!!bncnn/results.txt!0.005!5.0!12.0!0.005!!0.6742859373173559!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3060945328589913!!!0.05!0.08793679555702495!naturalscene!!!0.5599625858862325!-3.3871056161275725!4112.0!-3.2857366502285004!bncnn/bncnn_13_lr0.005_l10.005_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!
old_bncnn!14.0!15-10-07!0.05!0.2803587347269058!200.0!<class 'models.BN_CNN.BNCNN'>!False!!bncnn/results.txt!0.005!5.0!14.0!0.001!!0.6529096385880558!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.32553536120273635!!!0.05!0.11509497242855896!naturalscene!!!0.5491593532275196!-2.958892624552657!4112.0!-2.807759553194046!bncnn/bncnn_14_lr0.005_l10.001_l20.05!!!!!!!!!!!!!!!!!!!!!!!!!!
old_bncnn!15.0!15-10-07!0.01!0.29968140125274656!200.0!<class 'models.BN_CNN.BNCNN'>!False!!bncnn/results.txt!0.005!5.0!14.0!0.001!!0.6596532256035472!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.33592207970732874!!!0.05!0.1224791544792954!naturalscene!!!0.5845827227034616!-3.446201449487268!4112.0!-3.30012121796608!bncnn/bncnn_15_lr0.005_l10.001_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!
old_bncnn!1.0!15-10-07!0.005!0.2943964511156082!100.0!<class 'models.BN_CNN.BNCNN'>!False!!bncnn/results.txt!0.005!5.0!!0.001!!0.6705622844272344!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.32173867095527503!!!0.05!0.10215570618911646!naturalscene!!!0.5809257830256338!-2.4527617585964694!512.0!-3.100699722766876!bncnn/bncnn_1_lr0.005_l10.001_l20.005!!!!!!!!!!!!!!!!!!!!!!!!!!
old_bncnn!1.0!15-10-07!0.005!0.3029519408941269!100.0!<class 'models.BN_CNN.BNCNN'>!False!!bncnn/results.txt!0.01!5.0!!0.001!!0.6910587231197085!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3558324564421012!!!0.05!0.09858379314046596!naturalscene!!!0.6234735793374198!-2.441634095901817!512.0!-3.1876387000083923!bncnn/bncnn_1_lr0.01_l10.001_l20.005!!!!!!!!!!!!!!!!!!!!!!!!!!
old_bncnn!2.0!15-10-07!0.05!0.2699183404445648!100.0!<class 'models.BN_CNN.BNCNN'>!False!!bncnn/results.txt!0.005!5.0!!0.0004!!0.651752960497895!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3764308844283011!!!0.05!0.08985114145908067!naturalscene!!!0.5982646323545929!-2.1979302520306043!512.0!-2.8875506818294525!bncnn/bncnn_2_lr0.005_l10.0004_l20.05!!!!!!!!!!!!!!!!!!!!!!!!!!
old_bncnn!2.0!15-10-07!0.01!0.2865764439105988!100.0!<class 'models.BN_CNN.BNCNN'>!False!!bncnn/results.txt!0.01!5.0!!0.0001!!0.6663618661055609!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.32026773030004474!!!0.05!0.10906479167383064!naturalscene!!!0.5672214962213591!-3.0946475279097463!512.0!-3.1920584738254547!bncnn/bncnn_2_lr0.01_l10.0001_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!
old_bncnn!3.0!15-10-07!0.005!0.2980318605899811!100.0!<class 'models.BN_CNN.BNCNN'>!False!!bncnn/results.txt!0.005!5.0!!0.0004!!0.6683097635135341!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.34538786409513417!!!0.05!0.12879368127915045!naturalscene!!!0.5622698042482571!-2.9017002486805032!512.0!-3.210655629634857!bncnn/bncnn_3_lr0.005_l10.0004_l20.005!!!!!!!!!!!!!!!!!!!!!!!!!!
old_bncnn!3.0!15-10-07!0.005!0.2933768510818481!100.0!<class 'models.BN_CNN.BNCNN'>!False!!bncnn/results.txt!0.01!5.0!!0.0001!!0.6643007666527737!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3120804319298143!!!0.05!0.1027657520677335!naturalscene!!!0.5516002417211914!-3.135457885481114!512.0!-3.2142493724823!bncnn/bncnn_3_lr0.01_l10.0001_l20.005!!!!!!!!!!!!!!!!!!!!!!!!!!
old_bncnn!4.0!15-10-07!0.05!0.28064668774604795!100.0!<class 'models.BN_CNN.BNCNN'>!False!!bncnn/results.txt!0.001!5.0!4.0!0.001!!0.6778796711959961!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.34349513754092403!!!0.05!0.1248799254238244!naturalscene!!!0.5450897413757743!-1.888754046520676!512.0!-2.836896777153015!bncnn/bncnn_4_lr0.001_l10.001_l20.05!!!!!!!!!!!!!!!!!!!!!!!!!!
old_bncnn!4.0!15-10-07!0.01!0.2880056232213974!100.0!<class 'models.BN_CNN.BNCNN'>!False!!bncnn/results.txt!0.01!5.0!!1e-06!!0.6730897186457734!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.34261674699323824!!!0.05!0.10101590092723796!naturalscene!!!0.5732710286410219!-3.070826592668329!512.0!-3.3504150211811066!bncnn/bncnn_4_lr0.01_l11e-06_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!
old_bncnn!5.0!15-10-07!0.005!0.3120621919631958!100.0!<class 'models.BN_CNN.BNCNN'>!False!!bncnn/results.txt!0.001!5.0!4.0!0.001!!0.6913328908296633!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3149741491396682!!!0.05!0.08654817888918041!naturalscene!!!0.5851836370903604!-2.6421851229883417!512.0!-3.2650347352027893!bncnn/bncnn_5_lr0.001_l10.001_l20.005!!!!!!!!!!!!!!!!!!!!!!!!!!
old_bncnn!5.0!15-10-07!0.005!0.2569849669933319!100.0!<class 'models.BN_CNN.BNCNN'>!False!!bncnn/results.txt!0.01!5.0!!1e-06!!0.6170729220475681!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.38926528494271656!!!0.05!0.11580588993882622!naturalscene!!!0.5905018305988693!-2.776932362877226!512.0!-2.7024339139461517!bncnn/bncnn_5_lr0.01_l11e-06_l20.005!!!!!!!!!!!!!!!!!!!!!!!!!!
old_bncnn!6.0!15-10-07!0.05!0.28103094696998604!100.0!<class 'models.BN_CNN.BNCNN'>!False!!bncnn/results.txt!0.001!5.0!4.0!0.0005!!0.6560782851246274!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.32394247155461103!!!0.05!0.09605746288697158!naturalscene!!!0.5511382917879664!-2.309814518483336!512.0!-2.9435167610645294!bncnn/bncnn_6_lr0.001_l10.0005_l20.05!!!!!!!!!!!!!!!!!!!!!!!!!!
old_bncnn!7.0!15-10-07!0.005!0.3097404271364212!100.0!<class 'models.BN_CNN.BNCNN'>!False!!bncnn/results.txt!0.001!5.0!4.0!0.0005!!0.6973197650591441!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3083804005261575!!!0.05!0.1025898221509242!naturalscene!!!0.5423800772484794!-2.958131029954683!512.0!-3.2007100582122803!bncnn/bncnn_7_lr0.001_l10.0005_l20.005!!!!!!!!!!!!!!!!!!!!!!!!!!
old_bncnn!8.0!15-10-07!0.05!0.2893591344356537!100.0!<class 'models.BN_CNN.BNCNN'>!False!!bncnn/results.txt!0.0001!5.0!8.0!0.001!!0.683464325561319!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.317109775320192!!!0.05!0.09352755294885116!naturalscene!!!0.544520206441398!-2.0004288054339665!512.0!-2.9295909702777863!bncnn/bncnn_8_lr0.0001_l10.001_l20.05!!!!!!!!!!!!!!!!!!!!!!!!!!
old_bncnn!9.0!15-10-07!0.005!0.32908480167388915!100.0!<class 'models.BN_CNN.BNCNN'>!False!!bncnn/results.txt!0.0001!5.0!8.0!0.001!!0.6712703298635708!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3012468382101781!!!0.05!0.08338684926268652!naturalscene!!!0.5669792552988966!-2.6795138825478406!512.0!-3.368282526731491!bncnn/bncnn_9_lr0.0001_l10.001_l20.005!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnadaptgauss!18.0!15-10-07!0.01!0.2644946545362473!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnadaptgauss/results.txt!0.005!!18.0!0.0001!True!0.6822579937763548!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=True)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=True)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4110192359758649!all!!0.05!0.08660399120265913!naturalscene!!!0.7286423057810992!-3.028608079229904!512.0!-2.8390240524313413!bncnnadaptgauss/bncnnadaptgauss_18_noise0.05_lr0.005!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnadaptgauss!19.0!15-10-07!0.01!0.3460561096668243!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnadaptgauss/results.txt!0.0001!!18.0!0.0001!True!0.6076298848880276!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=True)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=True)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.34990806724582885!all!!0.05!0.09845016560535938!naturalscene!!!0.6058217338555625!-4.0079975396080085!512.0!-3.7224684934572!bncnnadaptgauss/bncnnadaptgauss_19_noise0.05_lr0.0001!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnadaptgauss!20.0!15-10-07!0.01!0.2734157085418701!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnadaptgauss/results.txt!0.005!!18.0!0.0001!True!0.6896707683610707!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=True)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=True)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.42689109445612!all!!0.1!0.12259060963922065!naturalscene!!!0.7382655769996813!-3.0049865288971778!512.0!-3.01822484314107!bncnnadaptgauss/bncnnadaptgauss_20_noise0.1_lr0.005!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnadaptgauss!21.0!15-10-07!0.01!0.3432451367378235!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnadaptgauss/results.txt!0.0001!!18.0!0.0001!True!0.6027194689696783!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=True)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=True)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3261832811939704!all!!0.1!0.07768665194171942!naturalscene!!!0.5836776618107732!-3.8883606513700872!512.0!-3.5873113568577537!bncnnadaptgauss/bncnnadaptgauss_21_noise0.1_lr0.0001!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnadaptgauss!22.0!15-10-07!0.01!0.2757522046566009!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnadaptgauss/results.txt!0.005!!18.0!0.0001!True!0.6819489429085139!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.15, trainable=False, adapt=True)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.15, trainable=False, adapt=True)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.41972329691570026!all!!0.15!0.1230215041928751!naturalscene!!!0.7261115019676243!-2.9763224666115025!512.0!-3.2357531648522126!bncnnadaptgauss/bncnnadaptgauss_22_noise0.15_lr0.005!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnadaptgauss!23.0!15-10-07!0.01!0.3395799696445465!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnadaptgauss/results.txt!0.0001!!18.0!0.0001!True!0.6314752061277641!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.15, trainable=False, adapt=True)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.15, trainable=False, adapt=True)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.33250733339196525!all!!0.15!0.08600920750518162!naturalscene!!!0.5939521368800433!-3.8641697197118674!512.0!-3.5554027977650557!bncnnadaptgauss/bncnnadaptgauss_23_noise0.15_lr0.0001!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnadaptgauss!24.0!15-10-07!0.01!0.265457421541214!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnadaptgauss/results.txt!0.005!!18.0!0.0001!True!0.6738618273780567!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.2, trainable=False, adapt=True)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.2, trainable=False, adapt=True)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4000964533924263!all!!0.2!0.13082078326841273!naturalscene!!!0.6859029242338435!-2.996069474277813!512.0!-2.8675813599620597!bncnnadaptgauss/bncnnadaptgauss_24_noise0.2_lr0.005!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnadaptgauss!25.0!15-10-07!0.01!0.3392699182033539!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnadaptgauss/results.txt!0.0001!!18.0!0.0001!True!0.644997070611856!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.2, trainable=False, adapt=True)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.2, trainable=False, adapt=True)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3057663605212489!all!!0.2!0.08035830554916522!naturalscene!!!0.5267815661076192!-3.8112269873712576!512.0!-3.6268978357020383!bncnnadaptgauss/bncnnadaptgauss_25_noise0.2_lr0.0001!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnadaptgauss!26.0!15-10-07!0.01!0.26090507209300995!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnadaptgauss/results.txt!0.005!!18.0!0.0001!True!0.668198398012396!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.3, trainable=False, adapt=True)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.3, trainable=False, adapt=True)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4173425565863354!all!!0.3!0.11964991214727735!naturalscene!!!0.7167171350282274!-2.879984726014001!512.0!-2.7366478285875933!bncnnadaptgauss/bncnnadaptgauss_26_noise0.3_lr0.005!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnadaptgauss!27.0!15-10-07!0.01!0.33581348657608034!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnadaptgauss/results.txt!0.0001!!18.0!0.0001!True!0.6695797433175401!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.3, trainable=False, adapt=True)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.3, trainable=False, adapt=True)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3264536414377582!all!!0.3!0.08526264950031781!naturalscene!!!0.5752519900348952!-3.6984103317534034!512.0!-3.5733742817537864!bncnnadaptgauss/bncnnadaptgauss_27_noise0.3_lr0.0001!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!0.0!15-10-07!0.01!0.2868324607610703!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.0075!!0.0!5e-05!!0.6793319699796211!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3974883697453256!all!-6.123912578674207!0.05!0.11913786957343153!whitenoise!!-6.3672059118118405!0.6969901000346024!!512.0!!bncnnMultiData/bncnnMultiData_0_dataset15-10-07_stim_typewhitenoise_lr0.0075_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!10.0!15-10-07!0.01!0.2733999311923981!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.001!!0.0!5e-05!!0.6400031467795377!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.36271566842774894!all!-2.929382500426982!0.05!0.1341944779313401!naturalscene!!-3.035741314449281!0.6044254954098309!!512.0!!bncnnMultiData/bncnnMultiData_10_dataset15-10-07_stim_typenaturalscene_lr0.001_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!11.0!15-10-07!0.001!0.320021790266037!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.001!!0.0!5e-05!!0.6573384118857031!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3683138034366678!all!-3.6542506591949855!0.05!0.12782758748612522!naturalscene!!-3.6454120462656383!0.6033573834846543!!512.0!!bncnnMultiData/bncnnMultiData_11_dataset15-10-07_stim_typenaturalscene_lr0.001_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!12.0!15-11-21a!0.01!0.2924223095178604!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.0075!!0.0!5e-05!!0.6678009638506995!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=4, bias=True)#    (12): BatchNorm1d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4879513783920154!all!-11.051765143149169!0.05!0.18600762405225849!whitenoise!!-11.326380866325461!0.7444942391184857!!512.0!!bncnnMultiData/bncnnMultiData_12_dataset15-11-21a_stim_typewhitenoise_lr0.0075_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!13.0!15-11-21a!0.001!0.3061957955360413!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.0075!!0.0!5e-05!!0.6500944284704747!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=4, bias=True)#    (12): BatchNorm1d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4701018977568824!all!-11.602140332393901!0.05!0.1664547309252135!whitenoise!!-12.281162195795442!0.7210351912042816!!512.0!!bncnnMultiData/bncnnMultiData_13_dataset15-11-21a_stim_typewhitenoise_lr0.0075_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!14.0!15-11-21a!0.01!0.2868110835552216!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.005!!0.0!5e-05!!0.6796824902101347!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=4, bias=True)#    (12): BatchNorm1d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4871235117557045!all!-10.62432303859714!0.05!0.1656474318916222!whitenoise!!-11.283817374688287!0.6904460482227118!!512.0!!bncnnMultiData/bncnnMultiData_14_dataset15-11-21a_stim_typewhitenoise_lr0.005_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!15.0!15-11-21a!0.001!0.30617325007915497!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.005!!0.0!5e-05!!0.6312392851738721!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=4, bias=True)#    (12): BatchNorm1d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4693825690078666!all!-11.71170430291022!0.05!0.17263979850890349!whitenoise!!-12.494493153659825!0.6747675709305082!!512.0!!bncnnMultiData/bncnnMultiData_15_dataset15-11-21a_stim_typewhitenoise_lr0.005_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!16.0!15-11-21a!0.01!0.2987440153956413!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.001!!0.0!5e-05!!0.6706390732372096!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=4, bias=True)#    (12): BatchNorm1d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.5109365514398702!all!-10.974909796186692!0.05!0.20905054793775416!whitenoise!!-11.997479695540207!0.6968509098766363!!512.0!!bncnnMultiData/bncnnMultiData_16_dataset15-11-21a_stim_typewhitenoise_lr0.001_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!17.0!15-11-21a!0.001!0.32659371197223663!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.001!!0.0!5e-05!!0.6047796035708028!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=4, bias=True)#    (12): BatchNorm1d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4877539534992345!all!-12.30976625967378!0.05!0.16839846397703806!whitenoise!!-12.938421925448365!0.6674773741308785!!512.0!!bncnnMultiData/bncnnMultiData_17_dataset15-11-21a_stim_typewhitenoise_lr0.001_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!18.0!15-11-21a!0.01!0.2781483605504036!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.0075!!0.0!5e-05!!0.6808543872585126!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=4, bias=True)#    (12): BatchNorm1d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.5603681239157472!all!-9.173741672319007!0.05!0.21471798547343826!naturalscene!!-9.688306241013883!0.7884715204007411!!512.0!!bncnnMultiData/bncnnMultiData_18_dataset15-11-21a_stim_typenaturalscene_lr0.0075_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!19.0!15-11-21a!0.001!0.29840271919965744!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.0075!!0.0!5e-05!!0.7131443534622071!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=4, bias=True)#    (12): BatchNorm1d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4935455914291642!all!-10.73602004953318!0.05!0.18077070281228505!naturalscene!!-10.5492980095416!0.7585787030920409!!512.0!!bncnnMultiData/bncnnMultiData_19_dataset15-11-21a_stim_typenaturalscene_lr0.0075_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!1.0!15-10-07!0.001!0.29539153873920443!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.0075!!0.0!5e-05!!0.6960563652675501!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3770604536471057!all!-6.462511945537701!0.05!0.13566057730360487!whitenoise!!-6.69658257195313!0.6253814984279613!!512.0!!bncnnMultiData/bncnnMultiData_1_dataset15-10-07_stim_typewhitenoise_lr0.0075_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!20.0!15-11-21a!0.01!0.2823885455727577!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.005!!0.0!5e-05!!0.6763870904733795!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=4, bias=True)#    (12): BatchNorm1d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.5305747053422311!all!-10.005396384805863!0.05!0.2178962829725969!naturalscene!!-9.88635465570165!0.7530752970248705!!512.0!!bncnnMultiData/bncnnMultiData_20_dataset15-11-21a_stim_typenaturalscene_lr0.005_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!21.0!15-11-21a!0.001!0.3064836934208869!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.005!!0.0!5e-05!!0.7189628420612704!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=4, bias=True)#    (12): BatchNorm1d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.5147491555241119!all!-10.87955951279946!0.05!0.17246602108773035!naturalscene!!-10.663349400458474!0.7672881635863223!!512.0!!bncnnMultiData/bncnnMultiData_21_dataset15-11-21a_stim_typenaturalscene_lr0.005_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!22.0!15-11-21a!0.01!0.3070943579077721!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.001!!0.0!5e-05!!0.7170867380755459!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=4, bias=True)#    (12): BatchNorm1d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.5015538353229688!all!-10.783156317975225!0.05!0.20464516793919565!naturalscene!!-10.366179163459561!0.7135020571426621!!512.0!!bncnnMultiData/bncnnMultiData_22_dataset15-11-21a_stim_typenaturalscene_lr0.001_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!23.0!15-11-21a!0.001!0.33389949053525925!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.001!!0.0!5e-05!!0.6943337016376131!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=4, bias=True)#    (12): BatchNorm1d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4938812808390546!all!-11.271202168829406!0.05!0.21308139363643244!naturalscene!!-11.451386780400801!0.6925194195937722!!512.0!!bncnnMultiData/bncnnMultiData_23_dataset15-11-21a_stim_typenaturalscene_lr0.001_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!24.0!15-11-21b!0.01!0.2521750681540545!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.0075!!0.0!5e-05!!0.5407395870944901!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=17, bias=True)#    (12): BatchNorm1d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4968423202010354!all!-7.571338038629618!0.05!0.17873731802378612!whitenoise!!-7.4761106777335025!0.7852338105809196!!512.0!!bncnnMultiData/bncnnMultiData_24_dataset15-11-21b_stim_typewhitenoise_lr0.0075_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!25.0!15-11-21b!0.001!0.2587541674866396!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.0075!!0.0!5e-05!!0.5372881102039119!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=17, bias=True)#    (12): BatchNorm1d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4558197777855201!all!-7.7932577177052735!0.05!0.17067579449811762!whitenoise!!-7.933900985602699!0.8098636902013957!!512.0!!bncnnMultiData/bncnnMultiData_25_dataset15-11-21b_stim_typewhitenoise_lr0.0075_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!26.0!15-11-21b!0.01!0.2530347065013997!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.005!!0.0!5e-05!!0.5523272703994171!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=17, bias=True)#    (12): BatchNorm1d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4654282702946741!all!-7.381643411616096!0.05!0.17083513348298662!whitenoise!!-7.462357761992947!0.7780810006268908!!512.0!!bncnnMultiData/bncnnMultiData_26_dataset15-11-21b_stim_typewhitenoise_lr0.005_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!27.0!15-11-21b!0.001!0.2590035699746188!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.005!!0.0!5e-05!!0.5435113951515874!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=17, bias=True)#    (12): BatchNorm1d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4472834456263121!all!-7.785172635187338!0.05!0.1806492218562092!whitenoise!!-8.057339868214695!0.6777276667928263!!512.0!!bncnnMultiData/bncnnMultiData_27_dataset15-11-21b_stim_typewhitenoise_lr0.005_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!28.0!15-11-21b!0.01!0.2578697879524792!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.001!!0.0!5e-05!!0.5503827705104624!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=17, bias=True)#    (12): BatchNorm1d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4563787486233729!all!-7.523301185865423!0.05!0.15727756370637833!whitenoise!!-7.611644941936968!0.8023967280526342!!512.0!!bncnnMultiData/bncnnMultiData_28_dataset15-11-21b_stim_typewhitenoise_lr0.001_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!29.0!15-11-21b!0.001!0.285583438242183!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.001!!0.0!5e-05!!0.5064720789929841!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=17, bias=True)#    (12): BatchNorm1d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4316811266120768!all!-8.182165224156051!0.05!0.16463483840074475!whitenoise!!-8.615816801741472!0.6801757054441461!!512.0!!bncnnMultiData/bncnnMultiData_29_dataset15-11-21b_stim_typewhitenoise_lr0.001_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!2.0!15-10-07!0.01!0.2850091099739075!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.005!!0.0!5e-05!!0.6887971575373046!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.388661709618724!all!-6.096275690562834!0.05!0.12434725095590353!whitenoise!!-6.252487172548228!0.6119642834018648!!512.0!!bncnnMultiData/bncnnMultiData_2_dataset15-10-07_stim_typewhitenoise_lr0.005_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!30.0!15-11-21b!0.01!0.2488526381990489!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.0075!!0.0!5e-05!!0.5778467689643436!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=17, bias=True)#    (12): BatchNorm1d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.5302616240080354!all!-6.084598702283984!0.05!0.17824269112246285!naturalscene!!-6.544589216712732!0.7879918063931892!!512.0!!bncnnMultiData/bncnnMultiData_30_dataset15-11-21b_stim_typenaturalscene_lr0.0075_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!31.0!15-11-21b!0.001!0.25650599248269024!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.0075!!0.0!5e-05!!0.5976446406924965!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=17, bias=True)#    (12): BatchNorm1d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4482985312677411!all!-7.134641542637838!0.05!0.16999042466393766!naturalscene!!-7.126306724404497!0.6666796273798069!!512.0!!bncnnMultiData/bncnnMultiData_31_dataset15-11-21b_stim_typenaturalscene_lr0.0075_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!32.0!15-11-21b!0.01!0.2445958177832996!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.005!!0.0!5e-05!!0.5776648386725464!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=17, bias=True)#    (12): BatchNorm1d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.5069953124555282!all!-6.561346385293291!0.05!0.19894654875368706!naturalscene!!-6.5299636235244325!0.7584446107598454!!512.0!!bncnnMultiData/bncnnMultiData_32_dataset15-11-21b_stim_typenaturalscene_lr0.005_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!33.0!15-11-21b!0.001!0.258773527601186!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.005!!0.0!5e-05!!0.6079556333166005!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=17, bias=True)#    (12): BatchNorm1d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4697992079565391!all!-6.889546940961736!0.05!0.13109817648004568!naturalscene!!-7.214726417132993!0.7043272317043654!!512.0!!bncnnMultiData/bncnnMultiData_33_dataset15-11-21b_stim_typenaturalscene_lr0.005_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!34.0!15-11-21b!0.01!0.2583026360062992!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.001!!0.0!5e-05!!0.6119351340752966!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=17, bias=True)#    (12): BatchNorm1d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4513875882493898!all!-6.904045589879388!0.05!0.1971225914929648!naturalscene!!-6.877669358145599!0.7213053277939234!!512.0!!bncnnMultiData/bncnnMultiData_34_dataset15-11-21b_stim_typenaturalscene_lr0.001_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!35.0!15-11-21b!0.001!0.3016632839160807!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.001!!0.0!5e-05!!0.6314158247574402!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=17, bias=True)#    (12): BatchNorm1d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.43600620558488895!all!-7.733497176741366!0.05!0.1756207685225197!naturalscene!!-7.788147585424363!0.6693177470687516!!512.0!!bncnnMultiData/bncnnMultiData_35_dataset15-11-21b_stim_typenaturalscene_lr0.001_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!3.0!15-10-07!0.001!0.2980498075485229!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.005!!0.0!5e-05!!0.6991853264542872!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4073694789226051!all!-6.344308251456822!0.05!0.14116873451473164!whitenoise!!-6.802044641198436!0.6471854207798946!!512.0!!bncnnMultiData/bncnnMultiData_3_dataset15-10-07_stim_typewhitenoise_lr0.005_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!4.0!15-10-07!0.01!0.2871490627527237!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.001!!0.0!5e-05!!0.6823301259133511!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.408663518134674!all!-6.11048324978583!0.05!0.11540447157004932!whitenoise!!-6.5007076838796864!0.6304988655346723!!512.0!!bncnnMultiData/bncnnMultiData_4_dataset15-10-07_stim_typewhitenoise_lr0.001_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!5.0!15-10-07!0.001!0.3151333868503571!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.001!!0.0!5e-05!!0.6453954409788691!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4205349404438368!all!-6.453591085044536!0.05!0.12084235487670693!whitenoise!!-7.256368660099728!0.7024659545440932!!512.0!!bncnnMultiData/bncnnMultiData_5_dataset15-10-07_stim_typewhitenoise_lr0.001_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!6.0!15-10-07!0.01!0.2172516256570816!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.0075!!0.0!5e-05!!0.4616338257502819!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!!all!-2.1112063786004!0.05!!naturalscene!True!-2.0734269743501508!!!512.0!!bncnnMultiData/bncnnMultiData_6_dataset15-10-07_stim_typenaturalscene_lr0.0075_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!7.0!15-10-07!0.001!0.28571744859218595!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.0075!!0.0!5e-05!!0.6668072171890986!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3723497406757073!all!-3.1485856967401564!0.05!0.12070745365216108!naturalscene!!-3.1536850931058282!0.5870971197830647!!512.0!!bncnnMultiData/bncnnMultiData_7_dataset15-10-07_stim_typenaturalscene_lr0.0075_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!8.0!15-10-07!0.01!0.2437457263469696!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.005!!0.0!5e-05!!0.5740217706715142!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4377584101208357!all!-2.4190701031984645!0.05!0.14786982507476146!naturalscene!!-2.5716453645024364!0.6652647287353727!!512.0!!bncnnMultiData/bncnnMultiData_8_dataset15-10-07_stim_typenaturalscene_lr0.005_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnMultiData!9.0!15-10-07!0.001!0.29248878359794617!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnMultiData/results.txt!0.005!!0.0!5e-05!!0.6726014261687671!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3810822258431268!all!-3.2485794612803147!0.05!0.12690297381223542!naturalscene!!-3.2568226547442585!0.6791119288153065!!512.0!!bncnnMultiData/bncnnMultiData_9_dataset15-10-07_stim_typenaturalscene_lr0.005_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnn2d!0.0!15-10-07!0.005!0.2396474480628968!100.0!<class 'models.BN_CNN_2D.BNCNN2D'>!True![8, 8]!bncnn2d/results.txt!0.005!!0.0!0.0001!!0.6095151539917546!BNCNN2D(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): BatchNorm2d(8, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (2): GaussianNoise(std=0.05, trainable=False)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): BatchNorm2d(8, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (6): GaussianNoise(std=0.05, trainable=False)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.4811019783467924!all!!0.05!0.15491514901228184!naturalscene!!!0.7374032387747695!-2.516583958182759!512.0!-2.4023191102860437!bncnn2d/bncnn2d_0_chans[8, 8]_lr0.005!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnn2d!10.0!15-10-07!0.005!0.3551689386367798!100.0!<class 'models.BN_CNN_2D.BNCNN2D'>!True![16, 16]!bncnn2d/results.txt!0.0001!!0.0!0.0001!!0.5820094899530177!BNCNN2D(#  (sequential): Sequential(#    (0): Conv2d(40, 16, kernel_size=(15, 15), stride=(1, 1))#    (1): BatchNorm2d(16, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (2): GaussianNoise(std=0.05, trainable=False)#    (3): ReLU()#    (4): Conv2d(16, 16, kernel_size=(11, 11), stride=(1, 1))#    (5): BatchNorm2d(16, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (6): GaussianNoise(std=0.05, trainable=False)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=10816, out_features=5, bias=True)#    (10): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!!all!!0.05!!naturalscene!!!!-4.094026690334935!512.0!-3.761072165636506!bncnn2d/bncnn2d_10_chans[16, 16]_lr0.0001!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnn2d!11.0!15-10-07!0.005!0.32189394235610963!100.0!<class 'models.BN_CNN_2D.BNCNN2D'>!True![16, 16]!bncnn2d/results.txt!1e-05!!0.0!0.0001!!0.5536489169974569!BNCNN2D(#  (sequential): Sequential(#    (0): Conv2d(40, 16, kernel_size=(15, 15), stride=(1, 1))#    (1): BatchNorm2d(16, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (2): GaussianNoise(std=0.05, trainable=False)#    (3): ReLU()#    (4): Conv2d(16, 16, kernel_size=(11, 11), stride=(1, 1))#    (5): BatchNorm2d(16, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (6): GaussianNoise(std=0.05, trainable=False)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=10816, out_features=5, bias=True)#    (10): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.2836724491218233!all!!0.05!0.08257324274256153!naturalscene!!!0.509565442613882!-3.3343827214715707!512.0!-3.033449789843872!bncnn2d/bncnn2d_11_chans[16, 16]_lr1e-05!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnn2d!12.0!15-10-07!0.005!0.21380957961082456!100.0!<class 'models.BN_CNN_2D.BNCNN2D'>!True![16, 24]!bncnn2d/results.txt!0.005!!0.0!0.0001!!0.538086200242363!BNCNN2D(#  (sequential): Sequential(#    (0): Conv2d(40, 16, kernel_size=(15, 15), stride=(1, 1))#    (1): BatchNorm2d(16, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (2): GaussianNoise(std=0.05, trainable=False)#    (3): ReLU()#    (4): Conv2d(16, 16, kernel_size=(11, 11), stride=(1, 1))#    (5): BatchNorm2d(16, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (6): GaussianNoise(std=0.05, trainable=False)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=10816, out_features=5, bias=True)#    (10): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.5032931025500382!all!!0.05!0.17697173026068105!naturalscene!!!0.7293868424872103!-2.0521556450613123!512.0!-2.0904616799452924!bncnn2d/bncnn2d_12_chans[16, 24]_lr0.005!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnn2d!13.0!15-10-07!0.005!0.3485188722610474!100.0!<class 'models.BN_CNN_2D.BNCNN2D'>!True![16, 24]!bncnn2d/results.txt!0.0001!!0.0!0.0001!!0.5755810735167104!BNCNN2D(#  (sequential): Sequential(#    (0): Conv2d(40, 16, kernel_size=(15, 15), stride=(1, 1))#    (1): BatchNorm2d(16, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (2): GaussianNoise(std=0.05, trainable=False)#    (3): ReLU()#    (4): Conv2d(16, 16, kernel_size=(11, 11), stride=(1, 1))#    (5): BatchNorm2d(16, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (6): GaussianNoise(std=0.05, trainable=False)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=10816, out_features=5, bias=True)#    (10): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.3252606870796317!all!!0.05!0.08443573053057872!naturalscene!!!0.5829486690404723!-4.039354828148406!512.0!-3.7298359931482983!bncnn2d/bncnn2d_13_chans[16, 24]_lr0.0001!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnn2d!14.0!15-10-07!0.005!0.32524179816246035!100.0!<class 'models.BN_CNN_2D.BNCNN2D'>!True![16, 24]!bncnn2d/results.txt!1e-05!!0.0!0.0001!!0.5843237399535344!BNCNN2D(#  (sequential): Sequential(#    (0): Conv2d(40, 16, kernel_size=(15, 15), stride=(1, 1))#    (1): BatchNorm2d(16, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (2): GaussianNoise(std=0.05, trainable=False)#    (3): ReLU()#    (4): Conv2d(16, 16, kernel_size=(11, 11), stride=(1, 1))#    (5): BatchNorm2d(16, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (6): GaussianNoise(std=0.05, trainable=False)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=10816, out_features=5, bias=True)#    (10): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.2820439904172353!all!!0.05!0.07464802118123293!naturalscene!!!0.4855691862151149!-3.231320998068129!512.0!-2.8366938762883365!bncnn2d/bncnn2d_14_chans[16, 24]_lr1e-05!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnn2d!15.0!15-10-07!0.005!0.2451569467782974!100.0!<class 'models.BN_CNN_2D.BNCNN2D'>!True![24, 24]!bncnn2d/results.txt!0.005!!0.0!0.0001!!0.6329141272892251!BNCNN2D(#  (sequential): Sequential(#    (0): Conv2d(40, 24, kernel_size=(15, 15), stride=(1, 1))#    (1): BatchNorm2d(24, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (2): GaussianNoise(std=0.05, trainable=False)#    (3): ReLU()#    (4): Conv2d(24, 24, kernel_size=(11, 11), stride=(1, 1))#    (5): BatchNorm2d(24, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (6): GaussianNoise(std=0.05, trainable=False)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=16224, out_features=5, bias=True)#    (10): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.4896181525429837!all!!0.05!0.1774855560923119!naturalscene!!!0.7404427799119806!-2.7220527354408715!512.0!-2.594066132634908!bncnn2d/bncnn2d_15_chans[24, 24]_lr0.005!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnn2d!16.0!15-10-07!0.005!0.3652187407016754!100.0!<class 'models.BN_CNN_2D.BNCNN2D'>!True![24, 24]!bncnn2d/results.txt!0.0001!!0.0!0.0001!!0.5931992286414779!BNCNN2D(#  (sequential): Sequential(#    (0): Conv2d(40, 24, kernel_size=(15, 15), stride=(1, 1))#    (1): BatchNorm2d(24, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (2): GaussianNoise(std=0.05, trainable=False)#    (3): ReLU()#    (4): Conv2d(24, 24, kernel_size=(11, 11), stride=(1, 1))#    (5): BatchNorm2d(24, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (6): GaussianNoise(std=0.05, trainable=False)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=16224, out_features=5, bias=True)#    (10): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.36637294863663744!all!!0.05!0.11245676699428307!naturalscene!!!0.6573628759905598!-4.1296972012987325!512.0!-3.9617609331180574!bncnn2d/bncnn2d_16_chans[24, 24]_lr0.0001!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnn2d!17.0!15-10-07!0.005!0.3485775589942932!100.0!<class 'models.BN_CNN_2D.BNCNN2D'>!True![24, 24]!bncnn2d/results.txt!1e-05!!0.0!0.0001!!0.502563263518213!BNCNN2D(#  (sequential): Sequential(#    (0): Conv2d(40, 24, kernel_size=(15, 15), stride=(1, 1))#    (1): BatchNorm2d(24, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (2): GaussianNoise(std=0.05, trainable=False)#    (3): ReLU()#    (4): Conv2d(24, 24, kernel_size=(11, 11), stride=(1, 1))#    (5): BatchNorm2d(24, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (6): GaussianNoise(std=0.05, trainable=False)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=16224, out_features=5, bias=True)#    (10): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.2608884941065941!all!!0.05!0.08755797266678983!naturalscene!!!0.4679163178272095!-3.332151396601808!512.0!-3.062038137632044!bncnn2d/bncnn2d_17_chans[24, 24]_lr1e-05!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnn2d!18.0!15-10-07!0.005!0.23577538430690764!100.0!<class 'models.BN_CNN_2D.BNCNN2D'>!True![8, 16]!bncnn2d/results.txt!0.005!!18.0!0.0001!!0.6037131944045191!BNCNN2D(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): BatchNorm2d(8, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (2): GaussianNoise(std=0.05, trainable=False)#    (3): ReLU()#    (4): Conv2d(8, 16, kernel_size=(11, 11), stride=(1, 1))#    (5): BatchNorm2d(16, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (6): GaussianNoise(std=0.05, trainable=False)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=10816, out_features=5, bias=True)#    (10): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.4897871381934679!all!!0.05!0.15124838320400993!naturalscene!!!0.7133525952123582!-2.53672672567684!512.0!-2.406477446904318!bncnn2d/bncnn2d_18_chans[8, 16]_lr0.005!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnn2d!19.0!15-10-07!0.005!0.3379562854766845!100.0!<class 'models.BN_CNN_2D.BNCNN2D'>!True![8, 16]!bncnn2d/results.txt!0.0001!!18.0!0.0001!!0.5843325278612934!BNCNN2D(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): BatchNorm2d(8, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (2): GaussianNoise(std=0.05, trainable=False)#    (3): ReLU()#    (4): Conv2d(8, 16, kernel_size=(11, 11), stride=(1, 1))#    (5): BatchNorm2d(16, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (6): GaussianNoise(std=0.05, trainable=False)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=10816, out_features=5, bias=True)#    (10): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.33356367948708304!all!!0.05!0.096196442972102!naturalscene!!!0.5145177176991725!-3.9201623913389527!512.0!-3.6646640085727995!bncnn2d/bncnn2d_19_chans[8, 16]_lr0.0001!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnn2d!1.0!15-10-07!0.005!0.3250949561595917!100.0!<class 'models.BN_CNN_2D.BNCNN2D'>!True![8, 8]!bncnn2d/results.txt!0.0001!!0.0!0.0001!!0.5879189750804921!BNCNN2D(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): BatchNorm2d(8, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (2): GaussianNoise(std=0.05, trainable=False)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): BatchNorm2d(8, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (6): GaussianNoise(std=0.05, trainable=False)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.3295070206134971!all!!0.05!0.08075780367609295!naturalscene!!!0.569665307552361!-3.7927821085284017!512.0!-3.4950920866231168!bncnn2d/bncnn2d_1_chans[8, 8]_lr0.0001!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnn2d!20.0!15-10-07!0.005!0.3105713188648224!100.0!<class 'models.BN_CNN_2D.BNCNN2D'>!True![8, 16]!bncnn2d/results.txt!1e-05!!18.0!0.0001!!0.5927915243476669!BNCNN2D(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): BatchNorm2d(8, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (2): GaussianNoise(std=0.05, trainable=False)#    (3): ReLU()#    (4): Conv2d(8, 16, kernel_size=(11, 11), stride=(1, 1))#    (5): BatchNorm2d(16, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (6): GaussianNoise(std=0.05, trainable=False)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=10816, out_features=5, bias=True)#    (10): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.2841934920821713!all!!0.05!0.07765905148678505!naturalscene!!!0.4567957837633137!-3.161814030029475!512.0!-2.9722528987913392!bncnn2d/bncnn2d_20_chans[8, 16]_lr1e-05!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnn2d!21.0!15-10-07!0.005!0.2323254317045212!100.0!<class 'models.BN_CNN_2D.BNCNN2D'>!True![8, 24]!bncnn2d/results.txt!0.005!!18.0!0.0001!!0.5762333361428504!BNCNN2D(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): BatchNorm2d(8, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (2): GaussianNoise(std=0.05, trainable=False)#    (3): ReLU()#    (4): Conv2d(8, 24, kernel_size=(11, 11), stride=(1, 1))#    (5): BatchNorm2d(24, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (6): GaussianNoise(std=0.05, trainable=False)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=16224, out_features=5, bias=True)#    (10): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.5099110976786655!all!!0.05!0.14727750842706985!naturalscene!!!0.6835495260750682!-2.4318936604719896!512.0!-2.3733506607459285!bncnn2d/bncnn2d_21_chans[8, 24]_lr0.005!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnn2d!22.0!15-10-07!0.005!0.3559685468673706!100.0!<class 'models.BN_CNN_2D.BNCNN2D'>!True![8, 24]!bncnn2d/results.txt!0.0001!!18.0!0.0001!!0.5600541474784396!BNCNN2D(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): BatchNorm2d(8, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (2): GaussianNoise(std=0.05, trainable=False)#    (3): ReLU()#    (4): Conv2d(8, 24, kernel_size=(11, 11), stride=(1, 1))#    (5): BatchNorm2d(24, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (6): GaussianNoise(std=0.05, trainable=False)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=16224, out_features=5, bias=True)#    (10): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.34834614276877424!all!!0.05!0.0931842690618746!naturalscene!!!0.6050355085329936!-4.05318673793367!512.0!-4.073971342102595!bncnn2d/bncnn2d_22_chans[8, 24]_lr0.0001!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnn2d!23.0!15-10-07!0.005!0.32477580904960635!100.0!<class 'models.BN_CNN_2D.BNCNN2D'>!True![8, 24]!bncnn2d/results.txt!1e-05!!18.0!0.0001!!0.5466669869455674!BNCNN2D(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): BatchNorm2d(8, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (2): GaussianNoise(std=0.05, trainable=False)#    (3): ReLU()#    (4): Conv2d(8, 24, kernel_size=(11, 11), stride=(1, 1))#    (5): BatchNorm2d(24, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (6): GaussianNoise(std=0.05, trainable=False)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=16224, out_features=5, bias=True)#    (10): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.2894556693935482!all!!0.05!0.08713872606889979!naturalscene!!!0.4933167551729818!-2.910623882510904!512.0!-2.5811585933697643!bncnn2d/bncnn2d_23_chans[8, 24]_lr1e-05!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnn2d!24.0!15-10-07!0.005!0.2370947033166885!100.0!<class 'models.BN_CNN_2D.BNCNN2D'>!True![16, 24]!bncnn2d/results.txt!0.005!!18.0!0.0001!!0.60412893187586!BNCNN2D(#  (sequential): Sequential(#    (0): Conv2d(40, 16, kernel_size=(15, 15), stride=(1, 1))#    (1): BatchNorm2d(16, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (2): GaussianNoise(std=0.05, trainable=False)#    (3): ReLU()#    (4): Conv2d(16, 24, kernel_size=(11, 11), stride=(1, 1))#    (5): BatchNorm2d(24, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (6): GaussianNoise(std=0.05, trainable=False)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=16224, out_features=5, bias=True)#    (10): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.5151799342046083!all!!0.05!0.14635401457519426!naturalscene!!!0.7243266509342909!-2.4798070041302642!512.0!-2.3787243939586915!bncnn2d/bncnn2d_24_chans[16, 24]_lr0.005!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnn2d!25.0!15-10-07!0.005!0.37137873768806456!100.0!<class 'models.BN_CNN_2D.BNCNN2D'>!True![16, 24]!bncnn2d/results.txt!0.0001!!18.0!0.0001!!0.5801508311620928!BNCNN2D(#  (sequential): Sequential(#    (0): Conv2d(40, 16, kernel_size=(15, 15), stride=(1, 1))#    (1): BatchNorm2d(16, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (2): GaussianNoise(std=0.05, trainable=False)#    (3): ReLU()#    (4): Conv2d(16, 24, kernel_size=(11, 11), stride=(1, 1))#    (5): BatchNorm2d(24, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (6): GaussianNoise(std=0.05, trainable=False)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=16224, out_features=5, bias=True)#    (10): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.34867285454179536!all!!0.05!0.11768002116650472!naturalscene!!!0.5970740105237343!-4.117349857298677!512.0!-3.8453309377036935!bncnn2d/bncnn2d_25_chans[16, 24]_lr0.0001!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnn2d!26.0!15-10-07!0.005!0.3395167589187622!100.0!<class 'models.BN_CNN_2D.BNCNN2D'>!True![16, 24]!bncnn2d/results.txt!1e-05!!18.0!0.0001!!0.5403235186782546!BNCNN2D(#  (sequential): Sequential(#    (0): Conv2d(40, 16, kernel_size=(15, 15), stride=(1, 1))#    (1): BatchNorm2d(16, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (2): GaussianNoise(std=0.05, trainable=False)#    (3): ReLU()#    (4): Conv2d(16, 24, kernel_size=(11, 11), stride=(1, 1))#    (5): BatchNorm2d(24, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (6): GaussianNoise(std=0.05, trainable=False)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=16224, out_features=5, bias=True)#    (10): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.2718244752663593!all!!0.05!0.0808347812540322!naturalscene!!!0.4541661631720218!-3.516608736813518!512.0!-3.097332831399399!bncnn2d/bncnn2d_26_chans[16, 24]_lr1e-05!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnn2d!2.0!15-10-07!0.005!0.29721114337444304!100.0!<class 'models.BN_CNN_2D.BNCNN2D'>!True![8, 8]!bncnn2d/results.txt!1e-05!!0.0!0.0001!!0.6144405821197075!BNCNN2D(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): BatchNorm2d(8, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (2): GaussianNoise(std=0.05, trainable=False)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): BatchNorm2d(8, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (6): GaussianNoise(std=0.05, trainable=False)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.29844573204725794!all!!0.05!0.08480535008470495!naturalscene!!!0.5185624978485007!-2.6932328854930527!512.0!-2.5887704432352616!bncnn2d/bncnn2d_2_chans[8, 8]_lr1e-05!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnn2d!3.0!15-10-07!0.005!0.2075755000114441!100.0!<class 'models.BN_CNN_2D.BNCNN2D'>!True![8, 16]!bncnn2d/results.txt!0.005!!0.0!0.0001!!0.5262150913020512!BNCNN2D(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): BatchNorm2d(8, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (2): GaussianNoise(std=0.05, trainable=False)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): BatchNorm2d(8, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (6): GaussianNoise(std=0.05, trainable=False)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.5312787589836219!all!!0.05!0.1393757434389251!naturalscene!!!0.7488522190314076!-1.900460073831147!512.0!-1.8673216458919344!bncnn2d/bncnn2d_3_chans[8, 16]_lr0.005!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnn2d!4.0!15-10-07!0.005!0.3217299163341522!100.0!<class 'models.BN_CNN_2D.BNCNN2D'>!True![8, 16]!bncnn2d/results.txt!0.0001!!0.0!0.0001!!0.6095407111823968!BNCNN2D(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): BatchNorm2d(8, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (2): GaussianNoise(std=0.05, trainable=False)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): BatchNorm2d(8, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (6): GaussianNoise(std=0.05, trainable=False)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.3464899204771029!all!!0.05!0.08747147962325001!naturalscene!!!0.6012408955531018!-3.720360573060912!512.0!-3.6734515724347134!bncnn2d/bncnn2d_4_chans[8, 16]_lr0.0001!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnn2d!5.0!15-10-07!0.005!0.2846454679965973!100.0!<class 'models.BN_CNN_2D.BNCNN2D'>!True![8, 16]!bncnn2d/results.txt!1e-05!!0.0!0.0001!!0.5749501149451375!BNCNN2D(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): BatchNorm2d(8, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (2): GaussianNoise(std=0.05, trainable=False)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): BatchNorm2d(8, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (6): GaussianNoise(std=0.05, trainable=False)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.2660278724728276!all!!0.05!0.08728348055713664!naturalscene!!!0.4692500753645447!-2.83971399922896!512.0!-2.5351984405497205!bncnn2d/bncnn2d_5_chans[8, 16]_lr1e-05!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnn2d!6.0!15-10-07!0.005!0.1653338149189949!100.0!<class 'models.BN_CNN_2D.BNCNN2D'>!True![8, 24]!bncnn2d/results.txt!0.005!!0.0!0.0001!!0.4120146506813885!BNCNN2D(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): BatchNorm2d(8, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (2): GaussianNoise(std=0.05, trainable=False)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): BatchNorm2d(8, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (6): GaussianNoise(std=0.05, trainable=False)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!!all!!0.05!!naturalscene!True!!!-1.34900595373748!512.0!-1.2329231532021367!bncnn2d/bncnn2d_6_chans[8, 24]_lr0.005!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnn2d!7.0!15-10-07!0.005!0.3228377938270569!100.0!<class 'models.BN_CNN_2D.BNCNN2D'>!True![8, 24]!bncnn2d/results.txt!0.0001!!0.0!0.0001!!0.6007429461390252!BNCNN2D(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): BatchNorm2d(8, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (2): GaussianNoise(std=0.05, trainable=False)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): BatchNorm2d(8, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (6): GaussianNoise(std=0.05, trainable=False)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.3376898483185583!all!!0.05!0.09157053517337882!naturalscene!!!0.6036185240372285!-3.769027955571631!512.0!-3.4532900137637625!bncnn2d/bncnn2d_7_chans[8, 24]_lr0.0001!!!!!!!!!!!!!!!!!!!!!!!!!!
scaleshift!0.0!15-10-07!0.01!0.2407427221536637!75.0!<class 'models.SS_CNN.SSCNN'>!!!scaleshift/results.txt!0.001!5.0!!0.001!!0.6855743462508185!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.05)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.05)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.3704573413187191!!!0.05!0.11589328951303984!naturalscene!!!0.6159668664123644!-2.4634190624296037!512.0!-1.5649061352014542!scaleshift/scaleshift_0_lr0.001_l10.001_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!
scaleshift!0.0!15-10-07!0.01!0.17330580204725266!100.0!<class 'models.SS_CNN.SSCNN'>!!!scaleshift/results.txt!0.001!5.0!!1.5e-05!!0.4328873040264739!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.05)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.05)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!!!!0.05!!naturalscene!True!!!-1.5315083903492306!512.0!-0.9549724273383616!scaleshift/scaleshift_0_lr0.001_l11.5e-05!!!!!!!!!!!!!!!!!!!!!!!!!!
scaleshift!10.0!15-10-07!0.01!0.2488165915012361!75.0!<class 'models.SS_CNN.SSCNN'>!!!scaleshift/results.txt!0.0001!5.0!!1e-06!!0.7093136759504562!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.05)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.05)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.395194735549084!!!0.05!0.13886162476483074!naturalscene!!!0.6697885695558737!-3.199815031629882!512.0!-1.8815754055976868!scaleshift/scaleshift_10_lr0.0001_l11e-06_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!
scaleshift!11.0!15-10-07!0.001!0.2374926656484604!75.0!<class 'models.SS_CNN.SSCNN'>!!!scaleshift/results.txt!0.0001!5.0!!1e-06!!0.7080015545814039!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.05)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.05)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.36665262149686895!!!0.05!0.08537354684417785!naturalscene!!!0.6520220266698833!-3.614816650545975!512.0!-1.8523718416690824!scaleshift/scaleshift_11_lr0.0001_l11e-06_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!
scaleshift!12.0!15-10-07!0.01!0.2219993561506272!75.0!<class 'models.SS_CNN.SSCNN'>!!!scaleshift/results.txt!1e-05!5.0!!0.001!!0.5974578411221219!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.05)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.05)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.4348234286872042!!!0.05!0.10968388308951288!naturalscene!!!0.6627894308571295!-1.6647153478312458!512.0!-1.4257049225270748!scaleshift/scaleshift_12_lr1e-05_l10.001_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!
scaleshift!13.0!15-10-07!0.001!0.2288499295711517!75.0!<class 'models.SS_CNN.SSCNN'>!!!scaleshift/results.txt!1e-05!5.0!!0.001!!0.6233573335611011!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.05)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.05)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.3683559418548623!!!0.05!0.09186884612125963!naturalscene!!!0.5939788038562992!-1.8354401170398318!512.0!-1.6225657165050509!scaleshift/scaleshift_13_lr1e-05_l10.001_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!
scaleshift!14.0!15-10-07!0.01!0.2268190234899521!75.0!<class 'models.SS_CNN.SSCNN'>!!!scaleshift/results.txt!1e-05!5.0!!1.5e-05!!0.617343669821948!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.05)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.05)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.4213389841460547!!!0.05!0.13091914858198572!naturalscene!!!0.626776996177932!-2.6950158038110565!512.0!-1.7456312030553818!scaleshift/scaleshift_14_lr1e-05_l11.5e-05_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!
scaleshift!15.0!15-10-07!0.001!0.22175245583057404!75.0!<class 'models.SS_CNN.SSCNN'>!!!scaleshift/results.txt!1e-05!5.0!!1.5e-05!!0.596236595421303!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.05)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.05)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.4030705483818183!!!0.05!0.10718719707620583!naturalscene!!!0.5949978483515106!-2.7414672222791934!512.0!-1.6938060894608498!scaleshift/scaleshift_15_lr1e-05_l11.5e-05_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!
scaleshift!16.0!15-10-07!0.01!0.2195628136396408!75.0!<class 'models.SS_CNN.SSCNN'>!!!scaleshift/results.txt!1e-05!5.0!!1e-06!!0.5935128394924899!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.05)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.05)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.3702226880329752!!!0.05!0.10235925759367336!naturalscene!!!0.5528020381289971!-2.6371132377226068!512.0!-1.6377380564808846!scaleshift/scaleshift_16_lr1e-05_l11e-06_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!
scaleshift!17.0!15-10-07!0.001!0.21973221004009247!75.0!<class 'models.SS_CNN.SSCNN'>!!!scaleshift/results.txt!1e-05!5.0!!1e-06!!0.6120505855636736!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.05)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.05)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.3397585884278545!!!0.05!0.08723849357110118!naturalscene!!!0.5671574386251155!-2.7523635800247996!512.0!-1.6626795008778572!scaleshift/scaleshift_17_lr1e-05_l11e-06_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!
scaleshift!1.0!15-10-07!0.001!!75.0!<class 'models.SS_CNN.SSCNN'>!!!scaleshift/results.txt!0.001!5.0!!0.001!!!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.05)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.05)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!!!!0.05!!naturalscene!True!!!!512.0!!scaleshift/scaleshift_1_lr0.001_l10.001_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!
scaleshift!2.0!15-10-07!0.01!0.2490630656480789!75.0!<class 'models.SS_CNN.SSCNN'>!!!scaleshift/results.txt!0.001!5.0!!1.5e-05!!0.7125906678927421!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.05)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.05)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.35620822843746536!!!0.05!0.12782697231256376!naturalscene!!!0.6447559842185122!-3.3589101181130965!512.0!-2.0119057968258858!scaleshift/scaleshift_2_lr0.001_l11.5e-05_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!
scaleshift!3.0!15-10-07!0.001!0.15746675282716752!75.0!<class 'models.SS_CNN.SSCNN'>!!!scaleshift/results.txt!0.001!5.0!!1.5e-05!!0.3808415297618127!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.05)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.05)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!!!!0.05!!naturalscene!True!!!-1.3651550165286248!512.0!-0.8190112199736177!scaleshift/scaleshift_3_lr0.001_l11.5e-05_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!
scaleshift!4.0!15-10-07!0.01!0.2381403267383576!75.0!<class 'models.SS_CNN.SSCNN'>!!!scaleshift/results.txt!0.001!5.0!!1e-06!!0.6711624914045874!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.05)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.05)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.3542906671801013!!!0.05!0.1072918241479135!naturalscene!!!0.6103154366152057!-3.1916316501335498!512.0!-1.9605396911501884!scaleshift/scaleshift_4_lr0.001_l11e-06_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!
scaleshift!5.0!15-10-07!0.001!0.22027964890003204!75.0!<class 'models.SS_CNN.SSCNN'>!!!scaleshift/results.txt!0.001!5.0!!1e-06!!0.6475569516386791!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.05)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.05)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.3494390880389517!!!0.05!0.10106697987968784!naturalscene!!!0.6162352181954829!-3.685817895252061!512.0!-1.2021647151559591!scaleshift/scaleshift_5_lr0.001_l11e-06_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!
scaleshift!6.0!15-10-07!0.01!0.2527062773704529!75.0!<class 'models.SS_CNN.SSCNN'>!!!scaleshift/results.txt!0.0001!5.0!!0.001!!0.7039951638585468!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.05)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.05)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.3804870366912617!!!0.05!0.12023490632313125!naturalscene!!!0.693167301358866!-2.379238067708944!512.0!-1.7785890325903893!scaleshift/scaleshift_6_lr0.0001_l10.001_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!
scaleshift!7.0!15-10-07!0.001!0.2422324538230896!75.0!<class 'models.SS_CNN.SSCNN'>!!!scaleshift/results.txt!0.0001!5.0!!0.001!!0.688285531051823!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.05)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.05)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.3710510636879465!!!0.05!0.1076017435050566!naturalscene!!!0.6485892540964462!-2.617954254240292!512.0!-1.8298200219869607!scaleshift/scaleshift_7_lr0.0001_l10.001_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!
scaleshift!8.0!15-10-07!0.01!0.2481389909982681!75.0!<class 'models.SS_CNN.SSCNN'>!!!scaleshift/results.txt!0.0001!5.0!!1.5e-05!!0.7072228077412549!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.05)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.05)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.3632599734938954!!!0.05!0.09568278246671236!naturalscene!!!0.7028351647384029!-3.1212219625576587!512.0!-1.8769338801503181!scaleshift/scaleshift_8_lr0.0001_l11.5e-05_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!
scaleshift!9.0!15-10-07!0.001!0.2394813358783722!75.0!<class 'models.SS_CNN.SSCNN'>!!!scaleshift/results.txt!0.0001!5.0!!1.5e-05!!0.6957102571173547!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.05)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.05)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.37005213425640215!!!0.05!0.10568389870538432!naturalscene!!!0.6701860040755101!-3.4941024014313298!512.0!-1.8472004979848864!scaleshift/scaleshift_9_lr0.0001_l11.5e-05_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnDataSearch!0.0!15-10-07!0.005!0.28865116834640503!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnDataSearch/results.txt!0.005!!0.0!0.0001!!0.7101083157633391!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3931215212157214!all!!0.05!0.1114723291734634!whitenoise!!!0.6089647691862174!-6.345135047964381!512.0!-6.239952645559241!bncnnDataSearch/bncnnDataSearch_0_dataset15-10-07_stim_typewhitenoise!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnDataSearch!1.0!15-10-07!0.005!0.263962921500206!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnDataSearch/results.txt!0.005!!0.0!0.0001!!0.6005618335318751!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4251755735065839!all!!0.05!0.12301767201749418!naturalscene!!!0.6998710448606947!-2.8738065580437087!512.0!-2.8419340202381136!bncnnDataSearch/bncnnDataSearch_1_dataset15-10-07_stim_typenaturalscene!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnDataSearch!2.0!15-11-21a!0.005!0.2941647842526436!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnDataSearch/results.txt!0.005!!0.0!0.0001!!0.6720275398049208!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=4, bias=True)#    (12): BatchNorm1d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4959976343102039!all!!0.05!0.16516153649565846!whitenoise!!!0.7379224371937374!-11.600523145310301!512.0!-11.207152033275634!bncnnDataSearch/bncnnDataSearch_2_dataset15-11-21a_stim_typewhitenoise!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnDataSearch!3.0!15-11-21a!0.005!0.29321836680173874!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnDataSearch/results.txt!0.005!!0.0!0.0001!!0.6944496989703658!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=4, bias=True)#    (12): BatchNorm1d(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.5337798085444823!all!!0.05!0.1930652143128745!naturalscene!!!0.7856839493455436!-10.1273848345197!512.0!-10.488153753798544!bncnnDataSearch/bncnnDataSearch_3_dataset15-11-21a_stim_typenaturalscene!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnDataSearch!4.0!15-11-21b!0.005!0.25304175299756665!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnDataSearch/results.txt!0.005!!0.0!0.0001!!0.5386035418496716!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=17, bias=True)#    (12): BatchNorm1d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.42343086136190417!all!!0.05!0.13512096186734995!whitenoise!!!0.6849903204289949!-7.591547675442013!512.0!-7.6157441219256725!bncnnDataSearch/bncnnDataSearch_4_dataset15-11-21b_stim_typewhitenoise!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnDataSearch!5.0!15-11-21b!0.005!0.2475559926208328!100.0!<class 'models.BN_CNN.BNCNN'>!True!!bncnnDataSearch/results.txt!0.005!!0.0!0.0001!!0.5873056410120121!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=17, bias=True)#    (12): BatchNorm1d(17, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.5058986893587799!all!!0.05!0.21519630336188947!naturalscene!!!0.7584739710930275!-6.799598386744387!512.0!-6.591351803741418!bncnnDataSearch/bncnnDataSearch_5_dataset15-11-21b_stim_typenaturalscene!!!!!!!!!!!!!!!!!!!!!!!!!!
dalesBNnobias!0.0!15-10-07!0.01!0.20998119115829467!100.0!<class 'models.Dales_BN_CNN.DalesBNCNN'>!False!!dalesBNnobias/results.txt!0.01!5.0!!0.0001!!0.5410685926690426!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.05)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=False)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.4105270675474717!!!0.05!0.08220664595026637!naturalscene!!!0.6305695605976558!-1.7645855871216023!512.0!-1.3699727393686771!dalesBNnobias/dalesBNnobias_0_lr0.01_l10.0001_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!
dalesBNnobias!10.0!15-10-07!0.01!0.17123459577560424!100.0!<class 'models.Dales_BN_CNN.DalesBNCNN'>!False!!dalesBNnobias/results.txt!0.0001!5.0!!1e-06!!0.4325971056599165!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.05)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=False)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!!!!0.05!!naturalscene!True!!!-1.4787932115341471!512.0!0.12345318729057908!dalesBNnobias/dalesBNnobias_10_lr0.0001_l11e-06_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!
dalesBNnobias!11.0!15-10-07!0.005!0.21238057911396027!100.0!<class 'models.Dales_BN_CNN.DalesBNCNN'>!False!!dalesBNnobias/results.txt!0.0001!5.0!!1e-06!!0.5624644861958158!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.05)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=False)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.4100437671525088!!!0.05!0.06499846424044657!naturalscene!!!0.646130596207032!-2.111505495387145!512.0!-1.2992218770086763!dalesBNnobias/dalesBNnobias_11_lr0.0001_l11e-06_l20.005!!!!!!!!!!!!!!!!!!!!!!!!!!
dalesBNnobias!12.0!15-10-07!0.01!0.2091442495584488!100.0!<class 'models.Dales_BN_CNN.DalesBNCNN'>!False!!dalesBNnobias/results.txt!1e-05!5.0!!0.0001!!0.5287990473445106!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.05)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=False)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.4356627832031891!!!0.05!0.1126467229295554!naturalscene!!!0.6431506268365578!-1.2731858505382796!512.0!-0.8662288542836905!dalesBNnobias/dalesBNnobias_12_lr1e-05_l10.0001_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!
dalesBNnobias!13.0!15-10-07!0.005!0.2131082594394684!100.0!<class 'models.Dales_BN_CNN.DalesBNCNN'>!False!!dalesBNnobias/results.txt!1e-05!5.0!!0.0001!!0.5424386036570541!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.05)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=False)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.4355214811538875!!!0.05!0.1346661634300058!naturalscene!!!0.656561191022213!-1.3796734002785445!512.0!-0.9159410266438499!dalesBNnobias/dalesBNnobias_13_lr1e-05_l10.0001_l20.005!!!!!!!!!!!!!!!!!!!!!!!!!!
dalesBNnobias!14.0!15-10-07!0.01!0.19645922482013706!100.0!<class 'models.Dales_BN_CNN.DalesBNCNN'>!False!!dalesBNnobias/results.txt!1e-05!5.0!!1e-06!!0.5052647606488173!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.05)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=False)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.472910335917174!!!0.05!0.029118654784905176!naturalscene!!!0.6993743539068307!-1.4939398777532091!512.0!-0.6580499354749918!dalesBNnobias/dalesBNnobias_14_lr1e-05_l11e-06_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!
dalesBNnobias!15.0!15-10-07!0.005!0.21036735475063328!100.0!<class 'models.Dales_BN_CNN.DalesBNCNN'>!False!!dalesBNnobias/results.txt!1e-05!5.0!!1e-06!!0.5294248227768976!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.05)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=False)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.4542341873581275!!!0.05!0.14333388539538452!naturalscene!!!0.6997778843244284!-1.590226235994746!512.0!-0.9558803308755159!dalesBNnobias/dalesBNnobias_15_lr1e-05_l11e-06_l20.005!!!!!!!!!!!!!!!!!!!!!!!!!!
dalesBNnobias!1.0!15-10-07!0.005!0.21652593910694126!100.0!<class 'models.Dales_BN_CNN.DalesBNCNN'>!False!!dalesBNnobias/results.txt!0.01!5.0!!0.0001!!0.5609970504739661!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.05)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=False)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.4869991810896508!!!0.05!0.10559742489192142!naturalscene!!!0.7186257347653939!-2.0150045446410982!512.0!-1.5305927842855451!dalesBNnobias/dalesBNnobias_1_lr0.01_l10.0001_l20.005!!!!!!!!!!!!!!!!!!!!!!!!!!
dalesBNnobias!2.0!15-10-07!0.01!0.19849066883325567!100.0!<class 'models.Dales_BN_CNN.DalesBNCNN'>!False!!dalesBNnobias/results.txt!0.01!5.0!!1e-06!!0.5209447826226385!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.05)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=False)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.4446916326838543!!!0.05!0.12568196622783406!naturalscene!!!0.7052138775940233!-1.5857884162196931!512.0!-1.2398619633167982!dalesBNnobias/dalesBNnobias_2_lr0.01_l11e-06_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!
dalesBNnobias!3.0!15-10-07!0.005!0.21527967005968093!100.0!<class 'models.Dales_BN_CNN.DalesBNCNN'>!False!!dalesBNnobias/results.txt!0.01!5.0!!1e-06!!0.5809882511755788!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.05)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=False)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.4309983262918347!!!0.05!0.09422242468451766!naturalscene!!!0.6792020438246843!-2.161815654817929!512.0!-1.5008810311555862!dalesBNnobias/dalesBNnobias_3_lr0.01_l11e-06_l20.005!!!!!!!!!!!!!!!!!!!!!!!!!!
dalesBNnobias!4.0!15-10-07!0.01!0.2319514214992523!100.0!<class 'models.Dales_BN_CNN.DalesBNCNN'>!False!!dalesBNnobias/results.txt!0.001!5.0!!0.0001!!0.5954450246663392!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.05)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=False)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.3744217013822795!!!0.05!0.12496078947686495!naturalscene!!!0.5699458326590279!-2.13585606833209!512.0!-1.6406016722321508!dalesBNnobias/dalesBNnobias_4_lr0.001_l10.0001_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!
dalesBNnobias!5.0!15-10-07!0.005!0.2347425192594529!100.0!<class 'models.Dales_BN_CNN.DalesBNCNN'>!False!!dalesBNnobias/results.txt!0.001!5.0!!0.0001!!0.5859444072114168!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.05)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=False)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.4143498668968022!!!0.05!0.04627269795517422!naturalscene!!!0.6478658177928894!-2.1700598190947358!512.0!-1.7699839770793917!dalesBNnobias/dalesBNnobias_5_lr0.001_l10.0001_l20.005!!!!!!!!!!!!!!!!!!!!!!!!!!
dalesBNnobias!6.0!15-10-07!0.01!0.23200638592243195!100.0!<class 'models.Dales_BN_CNN.DalesBNCNN'>!False!!dalesBNnobias/results.txt!0.001!5.0!!1e-06!!0.5986965335104378!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.05)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=False)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.3651424231934201!!!0.05!0.11279887616411767!naturalscene!!!0.5501072797143217!-2.17782924837836!512.0!-1.6999119818210602!dalesBNnobias/dalesBNnobias_6_lr0.001_l11e-06_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!
dalesBNnobias!7.0!15-10-07!0.005!0.2345158129930497!100.0!<class 'models.Dales_BN_CNN.DalesBNCNN'>!False!!dalesBNnobias/results.txt!0.001!5.0!!1e-06!!0.607998031113831!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.05)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=False)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.5116408594284356!!!0.05!0.07492606220492057!naturalscene!!!0.7327512639826639!-2.3873398881602252!512.0!-1.7923422157764437!dalesBNnobias/dalesBNnobias_7_lr0.001_l11e-06_l20.005!!!!!!!!!!!!!!!!!!!!!!!!!!
dalesBNnobias!8.0!15-10-07!0.01!0.2336210370063781!100.0!<class 'models.Dales_BN_CNN.DalesBNCNN'>!False!!dalesBNnobias/results.txt!0.0001!5.0!!0.0001!!0.6167587789985601!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.05)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=False)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.37982560092998097!!!0.05!0.08014731413765024!naturalscene!!!0.5761998671677265!-2.0243564512395213!512.0!-1.665549397468567!dalesBNnobias/dalesBNnobias_8_lr0.0001_l10.0001_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!
dalesBNnobias!9.0!15-10-07!0.005!0.2380402058362961!100.0!<class 'models.Dales_BN_CNN.DalesBNCNN'>!False!!dalesBNnobias/results.txt!0.0001!5.0!!0.0001!!0.6171835107032677!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1), bias=False)#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1), bias=False)#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.05)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=False)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.4649231082178954!!!0.05!0.10229360180132037!naturalscene!!!0.7098361285226316!-2.056586991877577!512.0!-1.6523578315973282!dalesBNnobias/dalesBNnobias_9_lr0.0001_l10.0001_l20.005!!!!!!!!!!!!!!!!!!!!!!!!!!
test!0.0!15-10-07!0.01!0.0430287066912997!100.0!<class 'models.SS_CNN.SSCNN'>!!!test/results.txt!0.0001!5.0!!0.001!!0.09351524632086773!SSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.05)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.05)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): ScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!!!!0.05!!naturalscene!True!!!0.002271872659973789!512.0!0.6511954963207245!test/test_0_lr0.0001_l10.001!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBNnofinalbn!0.0!15-10-07!0.005!0.2671623110771179!85.0!<class 'models.BN_CNN.BNCNN'>!True!!practicalBNnofinalbn/results.txt!0.005!5.0!0.0!0.0001!!0.6299673145935187!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4173437101307777!all!!0.05!0.13544428279460122!naturalscene!!!0.6806527341488381!-2.915724986998384!512.0!-2.7942930230183265!practicalBNnofinalbn/practicalBNnofinalbn_0_lr0.005!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBN!0.0!15-10-07!0.0!0.28177979290485383!100.0!<class 'models.practical_BN_CNN.PracticalBNCNN'>!True!!practicalBN/results.txt!0.01!5.0!0.0!0.005!!0.6732073589718919!PracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.15)#    (2): ReLU()#    (3): Flatten()#    (4): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.3)#    (8): ReLU()#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3966105358149984!!!0.3!0.12270964865571805!naturalscene!!!0.6804502258081957!-3.2087577843917803!512.0!16.60976456105709!practicalBN/practicalBN_0_lr0.01_l10.005_l20!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBN!10.0!15-10-07!0.0!0.3058620929718018!100.0!<class 'models.practical_BN_CNN.PracticalBNCNN'>!True!!practicalBN/results.txt!0.001!5.0!0.0!0.0005!!0.6891658196337312!PracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.15)#    (2): ReLU()#    (3): Flatten()#    (4): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.3)#    (8): ReLU()#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3334574899141221!!!0.3!0.1097197088134568!naturalscene!!!0.6477578936224281!-3.4452937012524267!512.0!-3.4615444242954254!practicalBN/practicalBN_10_lr0.001_l10.0005_l20!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBN!11.0!15-10-07!0.0001!0.3021345376968384!100.0!<class 'models.practical_BN_CNN.PracticalBNCNN'>!True!!practicalBN/results.txt!0.001!5.0!0.0!0.0005!!0.6858410677220895!PracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.15)#    (2): ReLU()#    (3): Flatten()#    (4): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.3)#    (8): ReLU()#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.34182611164640025!!!0.3!0.08973399292107725!naturalscene!!!0.6451392354159663!-3.445972689676069!512.0!-3.5690621733665466!practicalBN/practicalBN_11_lr0.001_l10.0005_l20.0001!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBN!12.0!15-10-07!0.0!0.305929046869278!100.0!<class 'models.practical_BN_CNN.PracticalBNCNN'>!True!!practicalBN/results.txt!0.0001!5.0!0.0!0.005!!0.6886002862320216!PracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.15)#    (2): ReLU()#    (3): Flatten()#    (4): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.3)#    (8): ReLU()#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3265170732740867!!!0.3!0.10271766454880127!naturalscene!!!0.6145727988340752!-3.3067158863375448!512.0!-3.376091778278351!practicalBN/practicalBN_12_lr0.0001_l10.005_l20!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBN!13.0!15-10-07!0.0001!0.3031744182109833!100.0!<class 'models.practical_BN_CNN.PracticalBNCNN'>!True!!practicalBN/results.txt!0.0001!5.0!0.0!0.005!!0.6927368158725409!PracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.15)#    (2): ReLU()#    (3): Flatten()#    (4): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.3)#    (8): ReLU()#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3316422662051923!!!0.3!0.11007903478057986!naturalscene!!!0.604139190318568!-3.357657283139984!512.0!-3.3555056750774384!practicalBN/practicalBN_13_lr0.0001_l10.005_l20.0001!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBN!14.0!15-10-07!0.0!0.29665054082870485!100.0!<class 'models.practical_BN_CNN.PracticalBNCNN'>!True!!practicalBN/results.txt!0.0001!5.0!0.0!0.0005!!0.6615462095133143!PracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.15)#    (2): ReLU()#    (3): Flatten()#    (4): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.3)#    (8): ReLU()#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3194941673019324!!!0.3!0.08866168020561478!naturalscene!!!0.6274142115989206!-3.3365783198746435!512.0!-3.2679049670696263!practicalBN/practicalBN_14_lr0.0001_l10.0005_l20!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBN!15.0!15-10-07!0.0001!0.2924665004014969!100.0!<class 'models.practical_BN_CNN.PracticalBNCNN'>!True!!practicalBN/results.txt!0.0001!5.0!0.0!0.0005!!0.6808919042296507!PracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.15)#    (2): ReLU()#    (3): Flatten()#    (4): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.3)#    (8): ReLU()#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.323644398818581!!!0.3!0.1008473650856925!naturalscene!!!0.6141553881823884!-3.3230293350881404!512.0!-3.3109754025936127!practicalBN/practicalBN_15_lr0.0001_l10.0005_l20.0001!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBN!16.0!15-10-07!0.0!0.2834327816963196!100.0!<class 'models.practical_BN_CNN.PracticalBNCNN'>!True!!practicalBN/results.txt!0.01!5.0!16.0!0.005!!0.6710037129431701!PracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.1)#    (2): ReLU()#    (3): Flatten()#    (4): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.2)#    (8): ReLU()#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3968360703783846!!!0.2!0.1288009055482648!naturalscene!!!0.6567248419006461!-3.3186576564207697!512.0!34340.2068387866!practicalBN/practicalBN_16_lr0.01_l10.005_l20!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBN!17.0!15-10-07!0.0001!0.2819104194641113!100.0!<class 'models.practical_BN_CNN.PracticalBNCNN'>!True!!practicalBN/results.txt!0.01!5.0!16.0!0.005!!0.6994661910738325!PracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.1)#    (2): ReLU()#    (3): Flatten()#    (4): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.2)#    (8): ReLU()#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3671306269005044!!!0.2!0.11376110410053147!naturalscene!!!0.6811034329310838!-3.1381281349993397!512.0!-3.1575868129730225!practicalBN/practicalBN_17_lr0.01_l10.005_l20.0001!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBN!18.0!15-10-07!0.0!0.2934194833040237!100.0!<class 'models.practical_BN_CNN.PracticalBNCNN'>!True!!practicalBN/results.txt!0.01!5.0!16.0!0.0005!!0.6916160699755549!PracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.1)#    (2): ReLU()#    (3): Flatten()#    (4): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.2)#    (8): ReLU()#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3743780692026022!!!0.2!0.11110353393122208!naturalscene!!!0.6836456397372598!-3.354044937440173!512.0!890163.3653146103!practicalBN/practicalBN_18_lr0.01_l10.0005_l20!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBN!19.0!15-10-07!0.0001!0.28138812482357023!100.0!<class 'models.practical_BN_CNN.PracticalBNCNN'>!True!!practicalBN/results.txt!0.01!5.0!16.0!0.0005!!0.6947128898967281!PracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.1)#    (2): ReLU()#    (3): Flatten()#    (4): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.2)#    (8): ReLU()#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3582298847906005!!!0.2!0.09708208998116977!naturalscene!!!0.6743098903273267!-3.1651258649329788!512.0!-3.184905260801316!practicalBN/practicalBN_19_lr0.01_l10.0005_l20.0001!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBN!1.0!15-10-07!0.0001!0.2786273658275604!100.0!<class 'models.practical_BN_CNN.PracticalBNCNN'>!True!!practicalBN/results.txt!0.01!5.0!0.0!0.005!!0.6964966942823088!PracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.15)#    (2): ReLU()#    (3): Flatten()#    (4): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.3)#    (8): ReLU()#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3659114981231121!!!0.3!0.10331304134721034!naturalscene!!!0.6799825402448871!-3.0711425528447203!512.0!-3.1860290467739105!practicalBN/practicalBN_1_lr0.01_l10.005_l20.0001!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBN!20.0!15-10-07!0.0!0.3147619962692261!100.0!<class 'models.practical_BN_CNN.PracticalBNCNN'>!True!!practicalBN/results.txt!0.005!5.0!16.0!0.005!!0.6739615013879808!PracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.1)#    (2): ReLU()#    (3): Flatten()#    (4): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.2)#    (8): ReLU()#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3431426266211537!!!0.2!0.0973130854632322!naturalscene!!!0.6414546208492108!-3.5970016442812405!512.0!-3.585593566298485!practicalBN/practicalBN_20_lr0.005_l10.005_l20!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBN!21.0!15-10-07!0.0001!0.2928539454936981!100.0!<class 'models.practical_BN_CNN.PracticalBNCNN'>!True!!practicalBN/results.txt!0.005!5.0!16.0!0.005!!0.7105483101632839!PracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.1)#    (2): ReLU()#    (3): Flatten()#    (4): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.2)#    (8): ReLU()#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3543183394481934!!!0.2!0.10280862095986293!naturalscene!!!0.6520215332521864!-3.336649162736953!512.0!-3.300840049982072!practicalBN/practicalBN_21_lr0.005_l10.005_l20.0001!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBN!22.0!15-10-07!0.0!0.30001593232154844!100.0!<class 'models.practical_BN_CNN.PracticalBNCNN'>!True!!practicalBN/results.txt!0.005!5.0!16.0!0.0005!!0.69087771893572!PracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.1)#    (2): ReLU()#    (3): Flatten()#    (4): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.2)#    (8): ReLU()#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3700376161460921!!!0.2!0.11562293440287626!naturalscene!!!0.6249443523044802!-3.4900211910316847!512.0!59943.61007139088!practicalBN/practicalBN_22_lr0.005_l10.0005_l20!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBN!23.0!15-10-07!0.0001!0.29176746010780336!100.0!<class 'models.practical_BN_CNN.PracticalBNCNN'>!True!!practicalBN/results.txt!0.005!5.0!16.0!0.0005!!0.6925230485757325!PracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.1)#    (2): ReLU()#    (3): Flatten()#    (4): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.2)#    (8): ReLU()#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3599526507856293!!!0.2!0.10842056562466752!naturalscene!!!0.6446876012828493!-3.303393095327179!512.0!-3.322161376476288!practicalBN/practicalBN_23_lr0.005_l10.0005_l20.0001!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBN!24.0!15-10-07!0.0!0.3201482176780701!100.0!<class 'models.practical_BN_CNN.PracticalBNCNN'>!True!!practicalBN/results.txt!0.001!5.0!16.0!0.005!!0.7035547974577508!PracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.1)#    (2): ReLU()#    (3): Flatten()#    (4): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.2)#    (8): ReLU()#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3343761691043295!!!0.2!0.0883047350380728!naturalscene!!!0.6397155410069013!-3.615332516789616!512.0!-3.5280335545539856!practicalBN/practicalBN_24_lr0.001_l10.005_l20!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBN!25.0!15-10-07!0.0001!0.315984719991684!100.0!<class 'models.practical_BN_CNN.PracticalBNCNN'>!True!!practicalBN/results.txt!0.001!5.0!16.0!0.005!!0.6778562553616752!PracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.1)#    (2): ReLU()#    (3): Flatten()#    (4): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.2)#    (8): ReLU()#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3345955713442997!!!0.2!0.09229115802804476!naturalscene!!!0.632844717813!-3.5623180235133454!512.0!-3.580488532781601!practicalBN/practicalBN_25_lr0.001_l10.005_l20.0001!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBN!26.0!15-10-07!0.0!0.3175806581974029!100.0!<class 'models.practical_BN_CNN.PracticalBNCNN'>!True!!practicalBN/results.txt!0.001!5.0!16.0!0.0005!!0.694688355572494!PracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.1)#    (2): ReLU()#    (3): Flatten()#    (4): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.2)#    (8): ReLU()#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3508234117861417!!!0.2!0.11215640733651062!naturalscene!!!0.5772598529443663!-3.6576475584668815!512.0!-3.6129446625709534!practicalBN/practicalBN_26_lr0.001_l10.0005_l20!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBN!27.0!15-10-07!0.0001!0.3085454106330872!100.0!<class 'models.practical_BN_CNN.PracticalBNCNN'>!True!!practicalBN/results.txt!0.001!5.0!16.0!0.0005!!0.6925950528785817!PracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.1)#    (2): ReLU()#    (3): Flatten()#    (4): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.2)#    (8): ReLU()#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3406547586510713!!!0.2!0.09404537822434952!naturalscene!!!0.6618303855039236!-3.4438435585430485!512.0!-3.5572416186332703!practicalBN/practicalBN_27_lr0.001_l10.0005_l20.0001!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBN!2.0!15-10-07!0.0!0.2841124773025513!100.0!<class 'models.practical_BN_CNN.PracticalBNCNN'>!True!!practicalBN/results.txt!0.01!5.0!0.0!0.0005!!0.687284902202115!PracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.15)#    (2): ReLU()#    (3): Flatten()#    (4): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.3)#    (8): ReLU()#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3778144794205349!!!0.3!0.11749021866265978!naturalscene!!!0.7069027459936071!-3.1998587713701867!512.0!62.65524855256081!practicalBN/practicalBN_2_lr0.01_l10.0005_l20!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBN!3.0!15-10-07!0.0001!0.2718633502721787!100.0!<class 'models.practical_BN_CNN.PracticalBNCNN'>!True!!practicalBN/results.txt!0.01!5.0!0.0!0.0005!!0.6877920063715104!PracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.15)#    (2): ReLU()#    (3): Flatten()#    (4): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.3)#    (8): ReLU()#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3738180029917666!!!0.3!0.1191103387661401!naturalscene!!!0.6795132180300697!-3.037006218598799!512.0!-3.0741230845451355!practicalBN/practicalBN_3_lr0.01_l10.0005_l20.0001!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBN!4.0!15-10-07!0.0!0.3024255156517029!100.0!<class 'models.practical_BN_CNN.PracticalBNCNN'>!True!!practicalBN/results.txt!0.005!5.0!0.0!0.005!!0.6854514356253707!PracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.15)#    (2): ReLU()#    (3): Flatten()#    (4): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.3)#    (8): ReLU()#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3434997789388209!!!0.3!0.08518930214877225!naturalscene!!!0.6361638691546145!-3.4642311404733097!512.0!1024.1656346321106!practicalBN/practicalBN_4_lr0.005_l10.005_l20!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBN!5.0!15-10-07!0.0001!0.28151117265224457!100.0!<class 'models.practical_BN_CNN.PracticalBNCNN'>!True!!practicalBN/results.txt!0.005!5.0!0.0!0.005!!0.6893738003983042!PracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.15)#    (2): ReLU()#    (3): Flatten()#    (4): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.3)#    (8): ReLU()#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3550938868003021!!!0.3!0.10821285291457984!naturalscene!!!0.6621336060665363!-3.1811749494633164!512.0!-3.173095107078552!practicalBN/practicalBN_5_lr0.005_l10.005_l20.0001!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBN!6.0!15-10-07!0.0!0.30065534114837644!100.0!<class 'models.practical_BN_CNN.PracticalBNCNN'>!True!!practicalBN/results.txt!0.005!5.0!0.0!0.0005!!0.6912836274784251!PracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.15)#    (2): ReLU()#    (3): Flatten()#    (4): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.3)#    (8): ReLU()#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3389664554433076!!!0.3!0.08742929079059268!naturalscene!!!0.6211728164056518!-3.4742746759503853!512.0!339.5256646871567!practicalBN/practicalBN_6_lr0.005_l10.0005_l20!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBN!7.0!15-10-07!0.0001!0.283785405755043!100.0!<class 'models.practical_BN_CNN.PracticalBNCNN'>!True!!practicalBN/results.txt!0.005!5.0!0.0!0.0005!!0.7018268646250906!PracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.15)#    (2): ReLU()#    (3): Flatten()#    (4): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.3)#    (8): ReLU()#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3618056244900158!!!0.3!0.09090319141856057!naturalscene!!!0.6537761508139279!-3.170779733276655!512.0!-3.2489500045776367!practicalBN/practicalBN_7_lr0.005_l10.0005_l20.0001!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBN!8.0!15-10-07!0.0!0.3093410789966583!100.0!<class 'models.practical_BN_CNN.PracticalBNCNN'>!True!!practicalBN/results.txt!0.001!5.0!0.0!0.005!!0.6849733908880627!PracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.15)#    (2): ReLU()#    (3): Flatten()#    (4): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.3)#    (8): ReLU()#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3526757046290224!!!0.3!0.11768664628895005!naturalscene!!!0.63806539296818!-3.4374527631841634!512.0!-3.3959352374076843!practicalBN/practicalBN_8_lr0.001_l10.005_l20!!!!!!!!!!!!!!!!!!!!!!!!!!
practicalBN!9.0!15-10-07!0.0001!0.30676659345626833!100.0!<class 'models.practical_BN_CNN.PracticalBNCNN'>!True!!practicalBN/results.txt!0.001!5.0!0.0!0.005!!0.6855916576881943!PracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.15)#    (2): ReLU()#    (3): Flatten()#    (4): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.3)#    (8): ReLU()#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3473857097010889!!!0.3!0.10376116584511544!naturalscene!!!0.6309033452104388!-3.4726057863523163!512.0!-3.474092453718185!practicalBN/practicalBN_9_lr0.001_l10.005_l20.0001!!!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!0.0!15-10-07!0.01!0.2497144639492035!70.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>!True!!absbnbncnn/results.txt!0.006999999999999999!!0.0!0.0001!True!0.6261888574867281!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.5076070006540754!all!!0.1!0.15985404080937568!naturalscene!!!0.7110817169266024!-2.570293073201072!512.0!-2.538542398444406!absbnbncnn/absbnbncnn_0_lr0.007_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!1.0!15-10-07!0.001!0.26688985526561737!70.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>!True!!absbnbncnn/results.txt!0.006999999999999999!!0.0!0.0001!False!0.6655011314077398!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.44278308472579975!all!!0.05!0.12920503597599126!naturalscene!!!0.6781500589026531!-3.0275785338644887!512.0!-3.0088018123478832!absbnbncnn/absbnbncnn_1_lr0.007_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!2.0!15-10-07!0.01!0.26781385242938993!70.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>!True!!absbnbncnn/results.txt!0.005!!0.0!0.0001!False!0.6730867759339187!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4667796208381778!all!!0.05!0.17888797140759222!naturalscene!!!0.7173521194115184!-2.750417160322584!512.0!-2.8924550880765314!absbnbncnn/absbnbncnn_2_lr0.005_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!3.0!15-10-07!0.001!0.27961982786655426!70.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>!True!!absbnbncnn/results.txt!0.005!!0.0!0.0001!False!0.6947497736874262!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4137214439871403!all!!0.05!0.13102536424978076!naturalscene!!!0.6716218511989436!-3.124445406020497!512.0!-3.0448129230080667!absbnbncnn/absbnbncnn_3_lr0.005_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!4.0!15-10-07!0.01!0.28224252462387084!70.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>!True!!absbnbncnn/results.txt!0.001!!0.0!0.0001!False!0.6919474519410833!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3882256948186323!all!!0.05!0.11677596048139292!naturalscene!!!0.6134756313922203!-2.9527304428734933!512.0!-3.2771034858687926!absbnbncnn/absbnbncnn_4_lr0.001_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!5.0!15-10-07!0.001!0.31600584387779235!70.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>!True!!absbnbncnn/results.txt!0.001!!0.0!0.0001!False!0.6963413605030192!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3640317668085644!all!!0.05!0.13737832899718766!naturalscene!!!0.6385185196442472!-3.5684824263168498!512.0!-3.3815151115250046!absbnbncnn/absbnbncnn_5_lr0.001_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!6.0!15-10-07!0.01!0.2937103986740112!70.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>!True!!absbnbncnn/results.txt!0.0001!!0.0!0.0001!False!0.7074335759854767!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3496043021816511!all!!0.05!0.11736504112999124!naturalscene!!!0.6360220582946849!-3.1240382119001846!512.0!-3.084440179145531!absbnbncnn/absbnbncnn_6_lr0.0001_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!7.0!15-10-07!0.001!0.32950723767280576!70.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>!True!!absbnbncnn/results.txt!0.0001!!0.0!0.0001!False!0.6259569883538799!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=False)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=False)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3287564572109036!all!!0.05!0.08368825395644718!naturalscene!!!0.5910684043972019!-3.701337313939723!512.0!-3.5348506999034734!absbnbncnn/absbnbncnn_7_lr0.0001_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!10.0!15-10-07!0.01!0.5300372!70.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>!True!!absbnbncnn/results.txt!0.005!!8.0!0.0001!True!0.6590708255181851!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4788087478720568!all!!0.1!0.15072295952202866!naturalscene!!!0.7373222837484534!-2.8617508370951827!512.0!-2.9361204431588703!absbnbncnn/absbnbncnn_10_lr0.005_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!11.0!15-10-07!0.001!0.56268996!70.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>!True!!absbnbncnn/results.txt!0.005!!8.0!0.0001!True!0.6879898940482565!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4157035225242968!all!!0.1!0.149552419617189!naturalscene!!!0.669653464023076!-3.2118423833746355!512.0!-3.0855735339737294!absbnbncnn/absbnbncnn_11_lr0.005_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!12.0!15-10-07!0.01!0.58965284!70.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>!True!!absbnbncnn/results.txt!0.001!!8.0!0.0001!True!0.6962123844780381!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4062958337861913!all!!0.1!0.15935075297425533!naturalscene!!!0.6358658085115482!-3.286055179383061!512.0!-3.464338169036637!absbnbncnn/absbnbncnn_12_lr0.001_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!13.0!15-10-07!0.001!0.6480415!70.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>!True!!absbnbncnn/results.txt!0.001!!8.0!0.0001!True!0.6858253689551796!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3698266131704356!all!!0.1!0.11911440580034882!naturalscene!!!0.6377029299284368!-3.774307971086977!512.0!-3.5173726840039308!absbnbncnn/absbnbncnn_13_lr0.001_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!14.0!15-10-07!0.01!0.6670744000000001!70.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>!True!!absbnbncnn/results.txt!0.0001!!8.0!0.0001!True!0.6006706299331995!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3300911144634246!all!!0.1!0.09286876865871488!naturalscene!!!0.5829623864115981!-3.8516345437655435!512.0!-3.5391908636520384!absbnbncnn/absbnbncnn_14_lr0.0001_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!15.0!15-10-07!0.001!0.67882204!70.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>!True!!absbnbncnn/results.txt!0.0001!!8.0!0.0001!True!0.6074030830140267!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3378378738337928!all!!0.1!0.08844267177998773!naturalscene!!!0.6152197699248784!-3.840839554281797!512.0!-3.6380113611576235!absbnbncnn/absbnbncnn_15_lr0.0001_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!8.0!15-10-07!0.01!0.5199305000000001!70.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>!True!!absbnbncnn/results.txt!0.006999999999999999!!8.0!0.0001!True!0.6561921636912819!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4748994449445949!all!!0.1!0.13730672328826687!naturalscene!!!0.7668672006629156!-2.8541912910265803!512.0!-2.7012631290999707!absbnbncnn/absbnbncnn_8_lr0.007_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!9.0!15-10-07!0.001!0.51245165!70.0!<class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>!True!!absbnbncnn/results.txt!0.006999999999999999!!8.0!0.0001!True!0.6491579656719004!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.5046372366514995!all!!0.1!0.12614931302493654!naturalscene!!!0.7595959285324729!-2.892245186220287!512.0!-2.862381058761457!absbnbncnn/absbnbncnn_9_lr0.007_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnngauss1d!0.0!15-10-07!0.01!0.26855233013629914!70.0!<class 'models.Gauss1d_BN_CNN.Gauss1dBNCNN'>!True!!bncnngauss1d/results.txt!0.005!!0.0!0.0001!True!0.6800081367881279!Gauss1dBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise1d(shape=[10368], noise=0.05, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise1d(shape=[5408], noise=0.05, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.40019566137446905!all!!0.05!0.11658724884373076!naturalscene!!!0.6127152458638788!-2.949111358792174!512.0!-2.8153530447925736!bncnngauss1d/bncnngauss1d_0_noise0.05_lr0.005!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnngauss1d!1.0!15-10-07!0.01!0.3409180045127869!70.0!<class 'models.Gauss1d_BN_CNN.Gauss1dBNCNN'>!True!!bncnngauss1d/results.txt!0.0001!!0.0!0.0001!True!0.593761681951854!Gauss1dBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise1d(shape=[10368], noise=0.05, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise1d(shape=[5408], noise=0.05, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.33640293023367396!all!!0.05!0.07641133462582349!naturalscene!!!0.5632286632834904!-3.9078477802679368!512.0!-3.618211703873385!bncnngauss1d/bncnngauss1d_1_noise0.05_lr0.0001!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnngauss1d!2.0!15-10-07!0.01!0.26324422657489777!70.0!<class 'models.Gauss1d_BN_CNN.Gauss1dBNCNN'>!True!!bncnngauss1d/results.txt!0.005!!0.0!0.0001!True!0.673185263310823!Gauss1dBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise1d(shape=[10368], noise=0.1, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise1d(shape=[5408], noise=0.1, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.42992798339415134!all!!0.1!0.12736412721815366!naturalscene!!!0.6931567867482241!-2.8180433760760955!512.0!-2.9089029677452345!bncnngauss1d/bncnngauss1d_2_noise0.1_lr0.005!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnngauss1d!3.0!15-10-07!0.01!0.3425509572029114!70.0!<class 'models.Gauss1d_BN_CNN.Gauss1dBNCNN'>!True!!bncnngauss1d/results.txt!0.0001!!0.0!0.0001!True!0.6231869459927558!Gauss1dBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise1d(shape=[10368], noise=0.1, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise1d(shape=[5408], noise=0.1, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3341561618047896!all!!0.1!0.09622687982170693!naturalscene!!!0.5949463674966462!-3.816656747734565!512.0!-3.5875957698008283!bncnngauss1d/bncnngauss1d_3_noise0.1_lr0.0001!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnngauss1d!4.0!15-10-07!0.01!0.2673909604549408!70.0!<class 'models.Gauss1d_BN_CNN.Gauss1dBNCNN'>!True!!bncnngauss1d/results.txt!0.005!!0.0!0.0001!True!0.674584897407893!Gauss1dBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise1d(shape=[10368], noise=0.15, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise1d(shape=[5408], noise=0.15, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4070188897974456!all!!0.15!0.1048103369893945!naturalscene!!!0.6969971004788692!-2.7739133364654416!512.0!-3.1057264957416924!bncnngauss1d/bncnngauss1d_4_noise0.15_lr0.005!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnngauss1d!5.0!15-10-07!0.01!0.3390252411365509!70.0!<class 'models.Gauss1d_BN_CNN.Gauss1dBNCNN'>!True!!bncnngauss1d/results.txt!0.0001!!0.0!0.0001!True!0.6567614814226487!Gauss1dBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise1d(shape=[10368], noise=0.15, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise1d(shape=[5408], noise=0.15, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.34722194703459097!all!!0.15!0.08103726131937168!naturalscene!!!0.6108181397640104!-3.754844680990389!512.0!-3.5174608813795203!bncnngauss1d/bncnngauss1d_5_noise0.15_lr0.0001!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnngauss1d!6.0!15-10-07!0.01!0.2597049832344055!70.0!<class 'models.Gauss1d_BN_CNN.Gauss1dBNCNN'>!True!!bncnngauss1d/results.txt!0.005!!0.0!0.0001!True!0.6648567617756903!Gauss1dBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise1d(shape=[10368], noise=0.2, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise1d(shape=[5408], noise=0.2, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4019501409909646!all!!0.2!0.13699148283149915!naturalscene!!!0.6495282208585217!-2.772476231890027!512.0!-2.8024275733441755!bncnngauss1d/bncnngauss1d_6_noise0.2_lr0.005!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnngauss1d!7.0!15-10-07!0.01!0.3328340291976929!70.0!<class 'models.Gauss1d_BN_CNN.Gauss1dBNCNN'>!True!!bncnngauss1d/results.txt!0.0001!!0.0!0.0001!True!0.6668818954368734!Gauss1dBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise1d(shape=[10368], noise=0.2, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise1d(shape=[5408], noise=0.2, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.32596760177471984!all!!0.2!0.1031907979940346!naturalscene!!!0.5919177313239757!-3.6450856247998287!512.0!-3.586177775900069!bncnngauss1d/bncnngauss1d_7_noise0.2_lr0.0001!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnngauss1d!8.0!15-10-07!0.01!0.26488769352436065!70.0!<class 'models.Gauss1d_BN_CNN.Gauss1dBNCNN'>!True!!bncnngauss1d/results.txt!0.005!!0.0!0.0001!True!0.6764185379567971!Gauss1dBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise1d(shape=[10368], noise=0.3, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise1d(shape=[5408], noise=0.3, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4089014074411214!all!!0.3!0.14665955708849054!naturalscene!!!0.6787415913615535!-2.7122802666049917!512.0!-2.7764782637696044!bncnngauss1d/bncnngauss1d_8_noise0.3_lr0.005!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnngauss1d!9.0!15-10-07!0.01!0.32491893172264097!70.0!<class 'models.Gauss1d_BN_CNN.Gauss1dBNCNN'>!True!!bncnngauss1d/results.txt!0.0001!!0.0!0.0001!True!0.6553494424311138!Gauss1dBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise1d(shape=[10368], noise=0.3, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise1d(shape=[5408], noise=0.3, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3311840715062233!all!!0.3!0.07960613795300871!naturalscene!!!0.5892192596295875!-3.4468539983798294!512.0!-3.4819694161851658!bncnngauss1d/bncnngauss1d_9_noise0.3_lr0.0001!!!!!!!!!!!!!!!!!!!!!!!!!!
abssssscnn!0.0! 15-10-07!0.01!!70.0! <class 'models.AbsSS_SS_CNN.AbsSSSSCNN'>! True!! abssssscnn/results.txt!0.006999999999999999!!0.0!0.0001! False!!AbsSSSSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): AbsScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): AbsScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): AbsScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!! all!!0.1!! naturalscene!!!!inf!512.0!! abssssscnn/abssssscnn_0_adapt_gaussFalse_lr0.007_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!
abssssscnn!10.0! 15-10-07!0.01!!70.0! <class 'models.AbsSS_SS_CNN.AbsSSSSCNN'>! True!! abssssscnn/results.txt!0.005!!0.0!0.0001! True!!AbsSSSSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): AbsScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): AbsScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): AbsScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!! all!!0.1!! naturalscene!!!!inf!512.0!! abssssscnn/abssssscnn_10_adapt_gaussTrue_lr0.005_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!
abssssscnn!11.0! 15-10-07!0.001!!70.0! <class 'models.AbsSS_SS_CNN.AbsSSSSCNN'>! True!! abssssscnn/results.txt!0.005!!0.0!0.0001! True!!AbsSSSSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): AbsScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): AbsScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): AbsScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!! all!!0.1!! naturalscene!!!!inf!512.0!! abssssscnn/abssssscnn_11_adapt_gaussTrue_lr0.005_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!
abssssscnn!12.0! 15-10-07!0.01!0.2521147727966309!70.0! <class 'models.AbsSS_SS_CNN.AbsSSSSCNN'>! True!! abssssscnn/results.txt!0.001!!0.0!0.0001! True!0.3262508026495293!AbsSSSSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): AbsScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): AbsScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): AbsScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!! all!!0.1!! naturalscene!!!!-1.5980673357844353!512.0!-0.2577291523593885! abssssscnn/abssssscnn_12_adapt_gaussTrue_lr0.001_l20.01!0.4285164296211374!0.2735919272886009!0.2951525064252313!0.4297888652564635!0.2042042846562135!!!!!!!!!!!!!!!!!!!!!
abssssscnn!13.0! 15-10-07!0.001!0.6239053010940552!70.0! <class 'models.AbsSS_SS_CNN.AbsSSSSCNN'>! True!! abssssscnn/results.txt!0.001!!0.0!0.0001! True!0.64231030990664!AbsSSSSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): AbsScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): AbsScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): AbsScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.4012684959821291! all!!0.1!0.1563532662526836! naturalscene!!!0.6615351109274228!-3.604630933448021!512.0!-3.4130257585511563! abssssscnn/abssssscnn_13_adapt_gaussTrue_lr0.001_l20.001!0.6837020715891214!0.5390272686339691!0.5465940828087619!0.7045281306540286!0.7376999958473189!!!!!!!!!!!!!!!!!!!!!
abssssscnn!14.0! 15-10-07!0.01!0.5458141565322876!70.0! <class 'models.AbsSS_SS_CNN.AbsSSSSCNN'>! True!! abssssscnn/results.txt!0.0001!!0.0!0.0001! True!0.6974064654416205!AbsSSSSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): AbsScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): AbsScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): AbsScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.3650609094133168! all!!0.1!0.12175501752966415! naturalscene!!!0.6133262485246846!-3.2005346592734836!512.0!-2.9906226499333566! abssssscnn/abssssscnn_14_adapt_gaussTrue_lr0.0001_l20.01!0.7178624578570959!0.6300955546763571!0.6227260708445579!0.7408515830782676!0.7754966607518241!!!!!!!!!!!!!!!!!!!!!
abssssscnn!15.0! 15-10-07!0.001!0.589729905128479!70.0! <class 'models.AbsSS_SS_CNN.AbsSSSSCNN'>! True!! abssssscnn/results.txt!0.0001!!0.0!0.0001! True!0.6893205941464879!AbsSSSSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): AbsScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): AbsScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): AbsScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.3593884354963333! all!!0.1!0.1068350256128055! naturalscene!!!0.6114296665104111!-3.5794038704257924!512.0!-3.354573094879015! abssssscnn/abssssscnn_15_adapt_gaussTrue_lr0.0001_l20.001!0.7278484064830406!0.6137179150628269!0.6030066111103685!0.7526574079567043!0.7493726301194992!!!!!!!!!!!!!!!!!!!!!
abssssscnn!1.0! 15-10-07!0.001!!70.0! <class 'models.AbsSS_SS_CNN.AbsSSSSCNN'>! True!! abssssscnn/results.txt!0.006999999999999999!!0.0!0.0001! False!!AbsSSSSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): AbsScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): AbsScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): AbsScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!! all!!0.1!! naturalscene!!!!inf!512.0!! abssssscnn/abssssscnn_1_adapt_gaussFalse_lr0.007_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!
abssssscnn!2.0! 15-10-07!0.01!!70.0! <class 'models.AbsSS_SS_CNN.AbsSSSSCNN'>! True!! abssssscnn/results.txt!0.005!!0.0!0.0001! False!!AbsSSSSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): AbsScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): AbsScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): AbsScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!! all!!0.1!! naturalscene!!!!inf!512.0!! abssssscnn/abssssscnn_2_adapt_gaussFalse_lr0.005_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!
abssssscnn!3.0! 15-10-07!0.001!!70.0! <class 'models.AbsSS_SS_CNN.AbsSSSSCNN'>! True!! abssssscnn/results.txt!0.005!!0.0!0.0001! False!!AbsSSSSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): AbsScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): AbsScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): AbsScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!! all!!0.1!! naturalscene!!!!inf!512.0!! abssssscnn/abssssscnn_3_adapt_gaussFalse_lr0.005_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!
abssssscnn!4.0! 15-10-07!0.01!0.35926204919815063!70.0! <class 'models.AbsSS_SS_CNN.AbsSSSSCNN'>! True!! abssssscnn/results.txt!0.001!!0.0!0.0001! False!0.4191922856221861!AbsSSSSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): AbsScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): AbsScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): AbsScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!! all!!0.1!! naturalscene!!!!-1.6558088123978174!512.0!-1.733473703472555! abssssscnn/abssssscnn_4_adapt_gaussFalse_lr0.001_l20.01!0.4140045369121349!0.30675111770148106!0.3584699166637293!0.4362648638165606!0.5804709930170247!!!!!!!!!!!!!!!!!!!!!
abssssscnn!5.0! 15-10-07!0.001!0.2778436243534088!70.0! <class 'models.AbsSS_SS_CNN.AbsSSSSCNN'>! True!! abssssscnn/results.txt!0.001!!0.0!0.0001! False!0.28281645428642305!AbsSSSSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): AbsScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): AbsScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): AbsScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!! all!!0.1!! naturalscene!!!!-0.8857462897336288!512.0!-0.7972142270409677! abssssscnn/abssssscnn_5_adapt_gaussFalse_lr0.001_l20.001!0.31680190589406165!0.24294725512382825!0.2349308892026717!0.2485222143433643!0.3708800068681895!!!!!!!!!!!!!!!!!!!!!
abssssscnn!6.0! 15-10-07!0.01!0.5331918597221375!70.0! <class 'models.AbsSS_SS_CNN.AbsSSSSCNN'>! True!! abssssscnn/results.txt!0.0001!!0.0!0.0001! False!0.6809301589421288!AbsSSSSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): AbsScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): AbsScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): AbsScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.4205859653606519! all!!0.1!0.13533432537020962! naturalscene!!!0.7270403632961839!-2.9153894896241166!512.0!-1.8457413950254704! abssssscnn/abssssscnn_6_adapt_gaussFalse_lr0.0001_l20.01!0.7334143459731959!0.5737664915831667!0.5976586613487476!0.7660406055008809!0.7337706903046527!!!!!!!!!!!!!!!!!!!!!
abssssscnn!7.0! 15-10-07!0.001!0.6045269966125488!70.0! <class 'models.AbsSS_SS_CNN.AbsSSSSCNN'>! True!! abssssscnn/results.txt!0.0001!!0.0!0.0001! False!0.6923421581810129!AbsSSSSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): AbsScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): AbsScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): AbsScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!0.3531575368539798! all!!0.1!0.1031278280281618! naturalscene!!!0.6515425739850628!-3.5350551083796344!512.0!-3.331937988745267! abssssscnn/abssssscnn_7_adapt_gaussFalse_lr0.0001_l20.001!0.7172633641793125!0.6045293773017091!0.6233750362329867!0.7570072722833142!0.7595357409077418!!!!!!!!!!!!!!!!!!!!!
abssssscnn!8.0! 15-10-07!0.01!!70.0! <class 'models.AbsSS_SS_CNN.AbsSSSSCNN'>! True!! abssssscnn/results.txt!0.006999999999999999!!0.0!0.0001! True!!AbsSSSSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): AbsScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): AbsScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): AbsScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!! all!!0.1!! naturalscene!!!!inf!512.0!! abssssscnn/abssssscnn_8_adapt_gaussTrue_lr0.007_l20.01!!!!!!!!!!!!!!!!!!!!!!!!!!
abssssscnn!9.0! 15-10-07!0.001!!70.0! <class 'models.AbsSS_SS_CNN.AbsSSSSCNN'>! True!! abssssscnn/results.txt!0.006999999999999999!!0.0!0.0001! True!!AbsSSSSCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): AbsScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (3): ReLU()#    (4): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (5): AbsScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (6): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (7): ReLU()#    (8): Flatten()#    (9): Linear(in_features=5408, out_features=5, bias=True)#    (10): AbsScaleShift(shape=5, scale=True, shift=True)#    (11): Softplus(beta=1, threshold=20)#  )#)#!! all!!0.1!! naturalscene!!!!inf!512.0!! abssssscnn/abssssscnn_9_adapt_gaussTrue_lr0.007_l20.001!!!!!!!!!!!!!!!!!!!!!!!!!!
bncnnadaptgaussmoment!0.0! 15-10-07!0.01!0.5163148045539856!100.0! <class 'models.BN_CNN.BNCNN'>! True!! bncnnadaptgaussmoment/results.txt!0.005!!0.0!0.0001! True!0.6636899814816308!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4244086584792191! all!!0.05!0.11949542903888236! naturalscene!!!0.6823604364767913!-2.9190249574310285!512.0!-2.7592675835876435! bncnnadaptgaussmoment/bncnnadaptgaussmoment_0_noise0.05_lr0.005!0.6867369463300732!0.5735530641927722!0.5908324029922906!0.7093841679926866!0.7579433259003319!!!!!!!!!!!!!!!!!!!!!
bncnnadaptgaussmoment!1.0! 15-10-07!0.01!0.6966534852981567!100.0! <class 'models.BN_CNN.BNCNN'>! True!! bncnnadaptgaussmoment/results.txt!0.0001!!0.0!0.0001! True!0.6130140611515866!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.348593588082088! all!!0.05!0.09517608989248834! naturalscene!!!0.6198456348718747!-4.021526799842063!512.0!-3.7015837608705615! bncnnadaptgaussmoment/bncnnadaptgaussmoment_1_noise0.05_lr0.0001!0.6521796493875699!0.531268158102005!0.5147580874259229!0.7001724304266391!0.666691980415796!!!!!!!!!!!!!!!!!!!!!
bncnnadaptgaussmoment!2.0! 15-10-07!0.01!0.5336384773254395!100.0! <class 'models.BN_CNN.BNCNN'>! True!! bncnnadaptgaussmoment/results.txt!0.005!!0.0!0.0001! True!0.6672147423218261!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4179942946474853! all!!0.1!0.1149863566665662! naturalscene!!!0.7369287446762265!-2.9073372823979886!512.0!-2.939877549801168! bncnnadaptgaussmoment/bncnnadaptgaussmoment_2_noise0.1_lr0.005!0.693614660446572!0.5834552071955236!0.5822023301233986!0.7503745355291788!0.7264269783144572!!!!!!!!!!!!!!!!!!!!!
bncnnadaptgaussmoment!3.0! 15-10-07!0.01!0.6894882917404175!100.0! <class 'models.BN_CNN.BNCNN'>! True!! bncnnadaptgaussmoment/results.txt!0.0001!!0.0!0.0001! True!0.6206195772506949!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.32069876180673285! all!!0.1!0.0909601783631672! naturalscene!!!0.5541380862161093!-3.902134709768166!512.0!-3.602140645698455! bncnnadaptgaussmoment/bncnnadaptgaussmoment_3_noise0.1_lr0.0001!0.6797352974992049!0.5250106600775871!0.5021225952450554!0.7044689573605039!0.6917603760711241!!!!!!!!!!!!!!!!!!!!!
bncnnadaptgaussmoment!4.0! 15-10-07!0.01!0.5556086301803589!100.0! <class 'models.BN_CNN.BNCNN'>! True!! bncnnadaptgaussmoment/results.txt!0.005!!0.0!0.0001! True!0.6881793698901986!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.41211956749596457! all!!0.15!0.10628401708482213! naturalscene!!!0.6846749536811657!-2.9951556556005463!512.0!-3.2268812540060026! bncnnadaptgaussmoment/bncnnadaptgaussmoment_4_noise0.15_lr0.005!0.7160297073724202!0.5807440732900184!0.6072499809737189!0.7472124770769818!0.7896606107378535!!!!!!!!!!!!!!!!!!!!!
bncnnadaptgaussmoment!5.0! 15-10-07!0.01!0.6799660921096802!100.0! <class 'models.BN_CNN.BNCNN'>! True!! bncnnadaptgaussmoment/results.txt!0.0001!!0.0!0.0001! True!0.6425085483648282!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.32724894416315153! all!!0.15!0.09523399157314544! naturalscene!!!0.5542168992900091!-3.866710861344144!512.0!-3.5455801026346307! bncnnadaptgaussmoment/bncnnadaptgaussmoment_5_noise0.15_lr0.0001!0.6889674929702624!0.4992951289811469!0.5552607441140425!0.7125126075183591!0.7565067682403301!!!!!!!!!!!!!!!!!!!!!
bncnnadaptgaussmoment!6.0! 15-10-07!0.01!0.5343140363693237!100.0! <class 'models.BN_CNN.BNCNN'>! True!! bncnnadaptgaussmoment/results.txt!0.005!!0.0!0.0001! True!0.6799453625825057!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.2, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.2, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4076650152748606! all!!0.2!0.1091480242139081! naturalscene!!!0.7038785678358347!-3.020337135363848!512.0!-2.895426889932424! bncnnadaptgaussmoment/bncnnadaptgaussmoment_6_noise0.2_lr0.005!0.6923957647091972!0.5974863737606766!0.5978095806423737!0.7412620355737698!0.7707730582265117!!!!!!!!!!!!!!!!!!!!!
bncnnadaptgaussmoment!7.0! 15-10-07!0.01!0.6776602268218994!100.0! <class 'models.BN_CNN.BNCNN'>! True!! bncnnadaptgaussmoment/results.txt!0.0001!!0.0!0.0001! True!0.6425768876324207!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.2, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.2, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3218730735487069! all!!0.2!0.0887388165522576! naturalscene!!!0.5697688443974828!-3.792519759987994!512.0!-3.6281475025680265! bncnnadaptgaussmoment/bncnnadaptgaussmoment_7_noise0.2_lr0.0001!0.6847859764291627!0.5084175571680607!0.5393629104358226!0.7395351695714211!0.7407828245576364!!!!!!!!!!!!!!!!!!!!!
bncnnadaptgaussmoment!8.0! 15-10-07!0.01!0.5186952948570251!100.0! <class 'models.BN_CNN.BNCNN'>! True!! bncnnadaptgaussmoment/results.txt!0.005!!0.0!0.0001! True!0.6719030217020915!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.3, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.3, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4314777732101694! all!!0.3!0.13198312120879616! naturalscene!!!0.7031764934252922!-2.8817697358886583!512.0!-2.693940707707952! bncnnadaptgaussmoment/bncnnadaptgaussmoment_8_noise0.3_lr0.005!0.6841591602459204!0.5790199026416631!0.6134783201102663!0.7160681527612245!0.7667895727513833!!!!!!!!!!!!!!!!!!!!!
bncnnadaptgaussmoment!9.0! 15-10-07!0.01!0.6626839637756348!100.0! <class 'models.BN_CNN.BNCNN'>! True!! bncnnadaptgaussmoment/results.txt!0.0001!!0.0!0.0001! True!0.6613928750541888!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.3, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.3, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3238904762173282! all!!0.3!0.08318686032793228! naturalscene!!!0.568176654912537!-3.6729870383735874!512.0!-3.5433215655211825! bncnnadaptgaussmoment/bncnnadaptgaussmoment_9_noise0.3_lr0.0001!0.6954889018486833!0.5836716501070762!0.543818791413211!0.7237557922766997!0.7602292396252741!!!!!!!!!!!!!!!!!!!!!
dalesBN!0.0!15-10-07!0.001!0.23939927220344545!75.0! <class 'models.Dales_BN_CNN.DalesBNCNN'>!!! dalesBN/results.txt!0.0015!5.0!!0.0001!!0.6553491544279936!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.05)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.536017800537315!!!0.05!0.2008004260876807!!!!0.706252788970586!-2.53566882544693!512.0!-1.8562015816569328! dalesBN/dalesBN_0_lr0.0015_l20.001!0.7101128802385399!0.4616910677353285!0.5986312523525981!0.7381636131574714!0.7681469586560297!!!!!!!!!!!!!!!!!!!!!
dalesBN!0.0!15-10-07!0.001!0.21597045958042144!100.0! <class 'models.Dales_BN_CNN.DalesBNCNN'>!!! dalesBN/results.txt!0.01!5.0!!1e-06!!0.5664401073808722!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.1)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.5037462466196672!!!0.1!0.16142743651523886!!!!0.6926137806976838!-2.248492957087037!512.0!-1.7096303353706996! dalesBN/dalesBN_0_lr0.01_l11e-06_l20.001!0.6386784731245109!0.3224488816091381!0.4569162682172093!0.6948048327953827!0.7193520811581202!!!!!!!!!!!!!!!!!!!!!
dalesBN!10.0!15-10-07!0.001!0.18031321465969088!100.0! <class 'models.Dales_BN_CNN.DalesBNCNN'>!!! dalesBN/results.txt!0.0001!5.0!!0.0001!!0.4754158124032454!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.1)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!!!!0.1!!!!!!-1.8813788060631071!512.0!-1.094760184797148! dalesBN/dalesBN_10_lr0.0001_l10.0001_l20.001!0.5136676198485788!0.3885144196213609!0.4726701203292977!0.523075996955308!0.4791509052616814!!!!!!!!!!!!!!!!!!!!!
dalesBN!11.0!15-10-07!0.01!0.14133649319410324!100.0! <class 'models.Dales_BN_CNN.DalesBNCNN'>!!! dalesBN/results.txt!0.0001!5.0!!0.0001!!0.3420038959326095!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.1)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!!!!0.1!!!!!!-1.0306432443954374!512.0!1.5579328665820258! dalesBN/dalesBN_11_lr0.0001_l10.0001_l20.01!0.3895699724069743!0.2877398803137901!0.3358912783080601!0.4565538653756814!0.2402644832585416!!!!!!!!!!!!!!!!!!!!!
dalesBN!1.0!15-10-07!0.0001!0.2437137007713317!75.0! <class 'models.Dales_BN_CNN.DalesBNCNN'>!!! dalesBN/results.txt!0.0015!5.0!!0.0001!!0.6423410987975121!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.05)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.3367071754238915!!!0.05!0.14770936237725235!!!!0.5545379372307886!-2.659782222043695!512.0!-1.8407308086752887! dalesBN/dalesBN_1_lr0.0015_l20.0001!0.6769439192248928!0.5206372809042712!0.5545180750374797!0.71267677085417!0.7469294479667471!!!!!!!!!!!!!!!!!!!!!
dalesBN!1.0!15-10-07!0.01!0.19638268053531646!100.0! <class 'models.Dales_BN_CNN.DalesBNCNN'>!!! dalesBN/results.txt!0.01!5.0!!1e-06!!0.5073798406143721!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.1)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.4931025204052947!!!0.1!0.16444271891197146!!!!0.7674136017716225!-1.6175082364692266!512.0!-1.3044030616680782! dalesBN/dalesBN_1_lr0.01_l11e-06_l20.01!0.5698053147276796!0.2956728217190703!0.411711787522334!0.5917248398676929!0.667984439235084!!!!!!!!!!!!!!!!!!!!!
dalesBN!2.0!15-10-07!0.001!0.2444439053535461!75.0! <class 'models.Dales_BN_CNN.DalesBNCNN'>!!! dalesBN/results.txt!0.001!5.0!!0.0001!!0.6611699784804765!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.05)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.4123435818674584!!!0.05!0.13251495527042378!!!!0.6121062221424902!-2.561983530753788!512.0!-1.8872310146689413! dalesBN/dalesBN_2_lr0.001_l20.001!0.7162760022564354!0.4596968889090902!0.6075313221866978!0.7427112196572478!0.7796344593929112!!!!!!!!!!!!!!!!!!!!!
dalesBN!2.0!15-10-07!0.001!0.20964934229850768!100.0! <class 'models.Dales_BN_CNN.DalesBNCNN'>!!! dalesBN/results.txt!0.01!5.0!!0.0001!!0.546001752764785!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.1)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.5152760202982427!!!0.1!0.1970072274993088!!!!0.7293154256008713!-2.0014299126978248!512.0!-1.6226669276754062! dalesBN/dalesBN_2_lr0.01_l10.0001_l20.001!0.6111310217727145!0.3066228228427649!0.4348926561394917!0.6719165644309498!0.7054456986380044!!!!!!!!!!!!!!!!!!!!!
dalesBN!3.0!15-10-07!0.0001!0.2428196758031845!75.0! <class 'models.Dales_BN_CNN.DalesBNCNN'>!!! dalesBN/results.txt!0.001!5.0!!0.0001!!0.6505097612746222!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.05)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.408035274377193!!!0.05!0.13008064092300334!!!!0.6347091893836578!-2.7912109986869105!512.0!-1.7282030209898949! dalesBN/dalesBN_3_lr0.001_l20.0001!0.7076293413401454!0.4805259476047515!0.5187316811344811!0.7470987296633873!0.7985631066303457!!!!!!!!!!!!!!!!!!!!!
dalesBN!3.0!15-10-07!0.01!0.18941788226366044!100.0! <class 'models.Dales_BN_CNN.DalesBNCNN'>!!! dalesBN/results.txt!0.01!5.0!!0.0001!!0.4754476438359682!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.1)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!!!!0.1!!!!!!-1.2741660933409418!512.0!-1.2109422708551092! dalesBN/dalesBN_3_lr0.01_l10.0001_l20.01!0.4380615349270281!0.28544349458787155!0.3808863186196615!0.6004490832785835!0.6723977877666966!!!!!!!!!!!!!!!!!!!!!
dalesBN!4.0!15-10-07!0.001!0.2174628019332885!75.0! <class 'models.Dales_BN_CNN.DalesBNCNN'>!!! dalesBN/results.txt!0.00015!5.0!!0.0001!!0.5704883873086106!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.05)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.4187293226528149!!!0.05!0.16082755467560506!!!!0.6626282176377689!-2.157942206117004!512.0!-1.4941615909337995! dalesBN/dalesBN_4_lr0.00015_l20.001!0.572805133572844!0.458337811654379!0.5302105899873113!0.6457377649770246!0.6453506363514944!!!!!!!!!!!!!!!!!!!!!
dalesBN!4.0!15-10-07!0.001!0.2384668380022049!100.0! <class 'models.Dales_BN_CNN.DalesBNCNN'>!!! dalesBN/results.txt!0.001!5.0!!1e-06!!0.6338322712152197!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.1)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.5051957054575328!!!0.1!0.17819310618459847!!!!0.6308221123668667!-2.5440344891933186!512.0!-1.9632433106501896! dalesBN/dalesBN_4_lr0.001_l11e-06_l20.001!0.6869191505787671!0.4302265999480853!0.5621326425592864!0.7233601105598312!0.7665228524301283!!!!!!!!!!!!!!!!!!!!!
dalesBN!5.0!15-10-07!0.0001!0.2255107492208481!75.0! <class 'models.Dales_BN_CNN.DalesBNCNN'>!!! dalesBN/results.txt!0.00015!5.0!!0.0001!!0.59744753953388!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.05)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.4800566945223682!!!0.05!0.15287886525670322!!!!0.7305757377099934!-2.26807334475208!512.0!-1.2958114519715311! dalesBN/dalesBN_5_lr0.00015_l20.0001!0.6148647616225029!0.4772748163282593!0.5184345559632414!0.6630341047583751!0.7136294589970212!!!!!!!!!!!!!!!!!!!!!
dalesBN!5.0!15-10-07!0.01!0.20276500284671786!100.0! <class 'models.Dales_BN_CNN.DalesBNCNN'>!!! dalesBN/results.txt!0.001!5.0!!1e-06!!0.5251129183379245!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.1)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.4588504603972948!!!0.1!0.2571510972291186!!!!0.7142973590560107!-1.8738342094819367!512.0!-1.4482509021957717! dalesBN/dalesBN_5_lr0.001_l11e-06_l20.01!0.59534139122392!0.2972054113469602!0.4289745746156191!0.6272512441613929!0.6767919703417302!!!!!!!!!!!!!!!!!!!!!
dalesBN!6.0!15-10-07!0.001!0.2378546088933945!100.0! <class 'models.Dales_BN_CNN.DalesBNCNN'>!!! dalesBN/results.txt!0.001!5.0!!0.0001!!0.6382716259160331!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.1)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.6320526938016989!!!0.1!0.2249725085910228!!!!0.7913873419912236!-2.4083650150099154!512.0!-1.9566212495168047! dalesBN/dalesBN_6_lr0.001_l10.0001_l20.001!0.68971907117256!0.453648922280576!0.5551143154999144!0.7320362151619727!0.7608396054651427!!!!!!!!!!!!!!!!!!!!!
dalesBN!7.0!15-10-07!0.01!0.20221632868051528!100.0! <class 'models.Dales_BN_CNN.DalesBNCNN'>!!! dalesBN/results.txt!0.001!5.0!!0.0001!!0.5340085922626147!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.1)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.4677747419446684!!!0.1!0.20893631904721327!!!!0.6719823126081939!-1.6098646420453275!512.0!-1.4216006497542064! dalesBN/dalesBN_7_lr0.001_l10.0001_l20.01!0.5945316847391334!0.3072413704699961!0.4128601803593953!0.6414200806542257!0.7139896450903226!!!!!!!!!!!!!!!!!!!!!
dalesBN!8.0!15-10-07!0.001!0.1947058379650116!100.0! <class 'models.Dales_BN_CNN.DalesBNCNN'>!!! dalesBN/results.txt!0.0001!5.0!!1e-06!!0.5256995979378558!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.1)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.5118597470834515!!!0.1!0.20532745817724526!!!!0.6701022365843365!-2.088995810898936!512.0!-1.1530448558429878! dalesBN/dalesBN_8_lr0.0001_l11e-06_l20.001!0.5617764349446637!0.4384785409190366!0.5049990453837595!0.5676800326121473!0.5555639358296717!!!!!!!!!!!!!!!!!!!!!
dalesBN!9.0!15-10-07!0.01!0.15208300352096554!100.0! <class 'models.Dales_BN_CNN.DalesBNCNN'>!!! dalesBN/results.txt!0.0001!5.0!!1e-06!!0.3638380042315314!DalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (10): GaussianNoise(std=0.1)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (17): Softplus(beta=1, threshold=20)#  )#)#!!!!0.1!!!!!!-1.1784180007391951!512.0!0.6173313160737356! dalesBN/dalesBN_9_lr0.0001_l11e-06_l20.01!0.3652560213217793!0.30304555222862034!0.31671784781300394!0.4240343862602742!0.4101362135339792!!!!!!!!!!!!!!!!!!!!!
stackedbncnn!0.0! 15-10-07!0.005!0.5561112761497498!85.0! <class 'models.stacked_BN_CNN.StackedBNCNN'>! True!! stackedbncnn/results.txt!0.005!!0.0!0.0001! True!0.7082749151179811!StackedBNCNN(#  (sequential): Sequential(#    (0): StackedConv2d(#      (convs): Sequential(#        (0): Conv2d(40, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (2): ReLU()#        (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (4): ReLU()#        (5): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (6): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (7): ReLU()#        (8): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (9): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (10): ReLU()#        (11): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (12): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (13): ReLU()#        (14): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (15): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (16): ReLU()#        (17): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (18): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1))#        (19): ReLU()#        (20): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#      )#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): StackedConv2d(#      (convs): Sequential(#        (0): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (2): ReLU()#        (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (4): ReLU()#        (5): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (6): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (7): ReLU()#        (8): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (9): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (10): ReLU()#        (11): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (12): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1))#        (13): ReLU()#        (14): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#      )#    )#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3503598961801284! all!!0.05!0.09176791581223592! naturalscene!!!0.5462702888068143!-3.14616136277603!512.0!-3.0614153521401017! stackedbncnn/stackedbncnn_0_lr0.005!0.7421496051810109!0.6575327300554726!0.6284004441713278!0.7828839027485615!0.7304078934335332!!!!!!!!!!!!!!!!!!!!!
stackedbncnn!1.0! 15-10-07!0.005!0.5969836711883545!85.0! <class 'models.stacked_BN_CNN.StackedBNCNN'>! True!! stackedbncnn/results.txt!0.001!!0.0!0.0001! True!0.7024297909734989!StackedBNCNN(#  (sequential): Sequential(#    (0): StackedConv2d(#      (convs): Sequential(#        (0): Conv2d(40, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (2): ReLU()#        (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (4): ReLU()#        (5): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (6): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (7): ReLU()#        (8): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (9): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (10): ReLU()#        (11): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (12): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (13): ReLU()#        (14): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (15): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (16): ReLU()#        (17): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (18): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1))#        (19): ReLU()#        (20): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#      )#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): StackedConv2d(#      (convs): Sequential(#        (0): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (2): ReLU()#        (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (4): ReLU()#        (5): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (6): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (7): ReLU()#        (8): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (9): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (10): ReLU()#        (11): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (12): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1))#        (13): ReLU()#        (14): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#      )#    )#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3773218582271914! all!!0.05!0.09133797817512017! naturalscene!!!0.5946758073628828!-3.465311909872662!512.0!-3.3583688341368543! stackedbncnn/stackedbncnn_1_lr0.001!0.7590078195456499!0.6333083207354383!0.6180391986938361!0.7746546667684535!0.7271389491241166!!!!!!!!!!!!!!!!!!!!!
stackedbncnn!2.0! 15-10-07!0.005!0.6280916929244995!85.0! <class 'models.stacked_BN_CNN.StackedBNCNN'>! True!! stackedbncnn/results.txt!0.0005!!0.0!0.0001! True!0.6619414119095097!StackedBNCNN(#  (sequential): Sequential(#    (0): StackedConv2d(#      (convs): Sequential(#        (0): Conv2d(40, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (2): ReLU()#        (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (4): ReLU()#        (5): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (6): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (7): ReLU()#        (8): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (9): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (10): ReLU()#        (11): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (12): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (13): ReLU()#        (14): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (15): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (16): ReLU()#        (17): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (18): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1))#        (19): ReLU()#        (20): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#      )#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): StackedConv2d(#      (convs): Sequential(#        (0): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (2): ReLU()#        (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (4): ReLU()#        (5): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (6): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (7): ReLU()#        (8): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (9): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (10): ReLU()#        (11): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (12): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1))#        (13): ReLU()#        (14): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#      )#    )#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3759030879460874! all!!0.05!0.0991788904903518! naturalscene!!!0.6484583489020855!-3.709186151376497!512.0!-3.5179586216036114! stackedbncnn/stackedbncnn_2_lr0.0005!0.7245219451794727!0.5787131760944715!0.5526023796907841!0.7496094523699565!0.7042601062128637!!!!!!!!!!!!!!!!!!!!!
stackedbncnn!3.0! 15-10-07!0.005!0.6472457647323608!85.0! <class 'models.stacked_BN_CNN.StackedBNCNN'>! True!! stackedbncnn/results.txt!0.0001!!0.0!0.0001! True!0.6320901461739339!StackedBNCNN(#  (sequential): Sequential(#    (0): StackedConv2d(#      (convs): Sequential(#        (0): Conv2d(40, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (2): ReLU()#        (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (4): ReLU()#        (5): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (6): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (7): ReLU()#        (8): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (9): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (10): ReLU()#        (11): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (12): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (13): ReLU()#        (14): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (15): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (16): ReLU()#        (17): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (18): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1))#        (19): ReLU()#        (20): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#      )#    )#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): StackedConv2d(#      (convs): Sequential(#        (0): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (2): ReLU()#        (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (4): ReLU()#        (5): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (6): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (7): ReLU()#        (8): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (9): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (10): ReLU()#        (11): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (12): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1))#        (13): ReLU()#        (14): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#      )#    )#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): BatchNorm1d(5, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3642116037044751! all!!0.05!0.09052884923242452! naturalscene!!!0.5887983877962161!-3.71578751646016!512.0!-3.3772376787892417! stackedbncnn/stackedbncnn_3_lr0.0001!0.6828305291563928!0.5889901776311655!0.5004839497057435!0.7089158105740244!0.6792302638023434!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!16.0! 15-10-07!0.01!0.4721647202968597!100.0! <class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [8, 16]! absbnbncnn/results.txt!0.006999999999999999!!16.0!0.0001! False!0.5947220181348353!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 16, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=10816, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4470157430949858! all!!0.1!0.09627739465384216! naturalscene!!!0.7288033970687221!-2.33880438456708!512.0!-1.4967070282946224! absbnbncnn/absbnbncnn_16_chans[8, 16]_lr0.007_l20.01!0.6494029312453795!0.3707613143714039!0.511282992326236!0.6977753826393874!0.7443874700917694!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!17.0! 15-10-07!0.001!0.5604448318481445!100.0! <class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [8, 16]! absbnbncnn/results.txt!0.006999999999999999!!16.0!0.0001! False!0.6997736264294947!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 16, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=10816, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4109318060176959! all!!0.1!0.1674413756558212! naturalscene!!!0.6380496709532326!-3.0462294151700284!512.0!-3.002512761506296! absbnbncnn/absbnbncnn_17_chans[8, 16]_lr0.007_l20.001!0.7015726728783419!0.6317911357516268!0.6348107245121404!0.7697996304896133!0.7608939685157509!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!18.0! 15-10-07!0.01!0.5018137693405151!100.0! <class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [8, 16]! absbnbncnn/results.txt!0.005!!16.0!0.0001! False!0.6385313139320044!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 16, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=10816, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.454420514915118! all!!0.1!0.1393143152537952! naturalscene!!!0.6982942078866412!-2.528498410369476!512.0!-2.4198184726192267! absbnbncnn/absbnbncnn_18_chans[8, 16]_lr0.005_l20.01!0.6550556162832419!0.5592668064138389!0.5254727978423982!0.6887791567237832!0.7640821923967596!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!19.0! 15-10-07!0.001!0.5610637068748474!100.0! <class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [8, 16]! absbnbncnn/results.txt!0.005!!16.0!0.0001! False!0.6918903574675526!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 16, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=10816, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4151891419086796! all!!0.1!0.15590793477083054! naturalscene!!!0.6722874827708822!-3.0690041472109915!512.0!-3.0193940486333304! absbnbncnn/absbnbncnn_19_chans[8, 16]_lr0.005_l20.001!0.7158143398847983!0.6266257803339456!0.6181248372667303!0.742338430513386!0.7565483993389029!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!20.0! 15-10-07!0.01!0.5490962862968445!100.0! <class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [8, 16]! absbnbncnn/results.txt!0.001!!16.0!0.0001! False!0.6912913443461468!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 16, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=10816, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4313996143386747! all!!0.1!0.13788654755935836! naturalscene!!!0.6685183808019832!-2.7801065336165567!512.0!-3.1354994615685428! absbnbncnn/absbnbncnn_20_chans[8, 16]_lr0.001_l20.01!0.6979551317153879!0.631403723955753!0.6080243090613643!0.7678468352276009!0.7512267217706279!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!21.0! 15-10-07!0.001!0.6108153462409973!100.0! <class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [8, 16]! absbnbncnn/results.txt!0.001!!16.0!0.0001! False!0.7287405824225394!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 16, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=10816, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3414662151867485! all!!0.1!0.11566986425978998! naturalscene!!!0.561307407587631!-3.408283958967275!512.0!-3.207250264105824! absbnbncnn/absbnbncnn_21_chans[8, 16]_lr0.001_l20.001!0.7644743886286718!0.6306278403344436!0.6504541195184209!0.781262369667144!0.8168841939640166!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!22.0! 15-10-07!0.01!0.5354322791099548!100.0! <class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [8, 16]! absbnbncnn/results.txt!0.0001!!16.0!0.0001! False!0.6718170290896917!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 16, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=10816, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3593050426674124! all!!0.1!0.0929905494029056! naturalscene!!!0.6119044560637839!-2.8018515739325838!512.0!-2.5230518613680037! absbnbncnn/absbnbncnn_22_chans[8, 16]_lr0.0001_l20.01!0.7105716587048253!0.6027911987260176!0.6069982756611638!0.7555991465145769!0.6831248658418738!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!23.0! 15-10-07!0.001!0.6520722508430481!100.0! <class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [8, 16]! absbnbncnn/results.txt!0.0001!!16.0!0.0001! False!0.6795179431691593!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 16, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=10816, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3163797471931568! all!!0.1!0.0823178586004595! naturalscene!!!0.5414962281086764!-3.5599987661496906!512.0!-3.5281076672563363! absbnbncnn/absbnbncnn_23_chans[8, 16]_lr0.0001_l20.001!0.7230334206677365!0.5790359148857077!0.5909273121189369!0.7664620784003177!0.7381309897730977!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!24.0! 15-10-07!0.01!0.5244188904762268!100.0! <class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [8, 24]! absbnbncnn/results.txt!0.006999999999999999!!16.0!0.0001! False!0.6399907638938803!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 24, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=16224, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4602431722033284! all!!0.1!0.1409554149165669! naturalscene!!!0.7310277884187476!-2.706668604553016!512.0!-2.5743959650353645! absbnbncnn/absbnbncnn_24_chans[8, 24]_lr0.007_l20.01!0.7037507092131436!0.5234395872218208!0.5641310370473882!0.7302948366352594!0.6783376493517896!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!25.0! 15-10-07!0.001!0.5674821138381958!100.0! <class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [8, 24]! absbnbncnn/results.txt!0.006999999999999999!!16.0!0.0001! False!0.7022749271023881!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 24, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=16224, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4271816119071762! all!!0.1!0.1414131169503811! naturalscene!!!0.6674598071492003!-3.0849178982715983!512.0!-3.108982929294143! absbnbncnn/absbnbncnn_25_chans[8, 24]_lr0.007_l20.001!0.7175956991700193!0.6380092259913963!0.6230420404493544!0.7694461521498515!0.7632815177513191!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!26.0! 15-10-07!0.01!0.4805602431297302!100.0! <class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [8, 24]! absbnbncnn/results.txt!0.005!!16.0!0.0001! False!0.6137642029389824!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 24, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=16224, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4947498248132977! all!!0.1!0.2011582400148205! naturalscene!!!0.7132036351373338!-2.431782386871125!512.0!-2.1717680930451024! absbnbncnn/absbnbncnn_26_chans[8, 24]_lr0.005_l20.01!0.651242548798687!0.5436376672801492!0.5103079407194814!0.6826820519332701!0.6809508059633239!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!27.0! 15-10-07!0.001!0.5489233732223511!100.0! <class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [8, 24]! absbnbncnn/results.txt!0.005!!16.0!0.0001! False!0.6857105057356175!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 24, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=16224, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4285649809289115! all!!0.1!0.16211732630164807! naturalscene!!!0.6291479359180889!-2.9915331617379803!512.0!-3.125374378772904! absbnbncnn/absbnbncnn_27_chans[8, 24]_lr0.005_l20.001!0.6972992758845837!0.5944436369937708!0.6203257627421784!0.7346438889248412!0.7818399641327136!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!28.0! 15-10-07!0.01!0.5517508387565613!100.0! <class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [8, 24]! absbnbncnn/results.txt!0.001!!16.0!0.0001! False!0.6903844691407892!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 24, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=16224, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4034080174806956! all!!0.1!0.13421204807656836! naturalscene!!!0.6515617842100608!-2.8264925172426043!512.0!-2.9139206254876626! absbnbncnn/absbnbncnn_28_chans[8, 24]_lr0.001_l20.01!0.7246849464405808!0.6127420569580626!0.6079374327242391!0.7448137036155921!0.7617442059654717!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!29.0! 15-10-07!0.001!0.6051783561706543!100.0! <class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [8, 24]! absbnbncnn/results.txt!0.001!!16.0!0.0001! False!0.7222034987467674!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 24, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=16224, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3597900857675016! all!!0.1!0.09253377760406688! naturalscene!!!0.6064990464160921!-3.366134278015493!512.0!-3.2745231955796044! absbnbncnn/absbnbncnn_29_chans[8, 24]_lr0.001_l20.001!0.7479996675287781!0.6468094199876618!0.6265924463789294!0.777294570353626!0.8123213894848414!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!30.0! 15-10-07!0.01!0.5444165468215942!100.0! <class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [8, 24]! absbnbncnn/results.txt!0.0001!!16.0!0.0001! False!0.6882500696281797!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 24, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=16224, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3550245419651681! all!!0.1!0.11250259238070888! naturalscene!!!0.5822432593684904!-2.811526903919145!512.0!-2.73569111458346! absbnbncnn/absbnbncnn_30_chans[8, 24]_lr0.0001_l20.01!0.7320207099806468!0.6512106282208698!0.6187045353237675!0.7553452002703192!0.6839692743452953!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!31.0! 15-10-07!0.001!0.6562126278877258!100.0! <class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [8, 24]! absbnbncnn/results.txt!0.0001!!16.0!0.0001! False!0.6744951550743992!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 24, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=16224, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3190946828117611! all!!0.1!0.08215491972037035! naturalscene!!!0.5738358733462751!-3.58545950473164!512.0!-3.4388065123166602! absbnbncnn/absbnbncnn_31_chans[8, 24]_lr0.0001_l20.001!0.7238213419886921!0.577497177865146!0.5877141056026851!0.7651368515479231!0.7183062983675501!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!32.0! 15-10-07!0.01!0.4598429203033447!100.0! <class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [8, 64]! absbnbncnn/results.txt!0.006999999999999999!!16.0!0.0001! False!0.5667939119183951!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 64, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=43264, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4814389451940825! all!!0.1!0.14731757839726864! naturalscene!!!0.7333531436007369!-2.21467561671457!512.0!-2.1257048565894365! absbnbncnn/absbnbncnn_32_chans[8, 64]_lr0.007_l20.01!0.6436932708723135!0.38544747799902185!0.5215779323568644!0.6925442295118872!0.5907066488518886!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!33.0! 15-10-07!0.001!0.5421313047409058!100.0! <class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [8, 64]! absbnbncnn/results.txt!0.006999999999999999!!16.0!0.0001! False!0.6758960578747073!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 64, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=43264, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3965349905454058! all!!0.1!0.14978634444742078! naturalscene!!!0.6193080951426031!-3.0150167501530136!512.0!-3.0535031964082013! absbnbncnn/absbnbncnn_33_chans[8, 64]_lr0.007_l20.001!0.7077065611241621!0.6064797108472131!0.6017829679950226!0.7205597984183985!0.7429512509887404!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!34.0! 15-10-07!0.01!0.4012107849121094!100.0! <class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [8, 64]! absbnbncnn/results.txt!0.005!!16.0!0.0001! False!0.5203166979109858!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 64, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=43264, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.5214568551467916! all!!0.1!0.201310586752473! naturalscene!!!0.7346559408833083!-1.9137624644507198!512.0!-1.7680063260813768! absbnbncnn/absbnbncnn_34_chans[8, 64]_lr0.005_l20.01!0.6022736606429946!0.4415196667231125!0.4715159002115851!0.5996894867531791!0.4865847752240576!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!35.0! 15-10-07!0.001!0.5490682721137999!100.0! <class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [8, 64]! absbnbncnn/results.txt!0.005!!16.0!0.0001! False!0.6949244082167213!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 64, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=43264, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4201401872621664! all!!0.1!0.17022513109164336! naturalscene!!!0.6675400725752241!-3.0371945915718426!512.0!-3.0480859501876694! absbnbncnn/absbnbncnn_35_chans[8, 64]_lr0.005_l20.001!0.7259153154822353!0.6247857560369853!0.6190288037516747!0.7447926174151752!0.7600995483975356!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!36.0! 15-10-07!0.01!0.5308744907379149!100.0! <class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [8, 64]! absbnbncnn/results.txt!0.001!!16.0!0.0001! False!0.6720362492811149!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 64, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=43264, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4347628734292009! all!!0.1!0.1433379901452023! naturalscene!!!0.6624658461775736!-2.7634814276414756!512.0!-2.768342344881603! absbnbncnn/absbnbncnn_36_chans[8, 64]_lr0.001_l20.01!0.6885629462012254!0.6086320809641194!0.5857072523125405!0.7411848754209198!0.7360940915067703!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!40.0! 15-10-07!0.01!0.4973137378692627!100.0! <class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [16, 16]! absbnbncnn/results.txt!0.006999999999999999!!40.0!0.0001! False!0.6319899667135196!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 16, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(16, 16, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=10816, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4825915865989529! all!!0.1!0.1742756799780275! naturalscene!!!0.7254414402056738!-2.5655972720271323!512.0!-2.128015451820829! absbnbncnn/absbnbncnn_40_chans[16, 16]_lr0.007_l20.01!0.6641173984120858!0.5587993110670542!0.5203695227792275!0.7022600690921226!0.7144035322171075!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!41.0! 15-10-07!0.001!0.564356803894043!100.0! <class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [16, 16]! absbnbncnn/results.txt!0.006999999999999999!!40.0!0.0001! False!0.6969823635743856!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 16, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(16, 16, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=10816, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.41037865877212737! all!!0.1!0.14638435397234986! naturalscene!!!0.666243590838078!-3.1162910788666967!512.0!-3.09506142612554! absbnbncnn/absbnbncnn_41_chans[16, 16]_lr0.007_l20.001!0.7294553561124648!0.6184361625046898!0.6263849699814099!0.7575053379436681!0.7531299913296953!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!42.0! 15-10-07!0.01!0.5005820989608765!100.0! <class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [16, 16]! absbnbncnn/results.txt!0.005!!40.0!0.0001! False!0.6338086246412451!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 16, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(16, 16, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=10816, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.469984403877823! all!!0.1!0.1399632320952077! naturalscene!!!0.7361424080814042!-2.5462475892825003!512.0!-2.284572524746181! absbnbncnn/absbnbncnn_42_chans[16, 16]_lr0.005_l20.01!0.6480052828087393!0.5418988743887138!0.5422578571115918!0.6972979637073277!0.739583145189853!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!43.0! 15-10-07!0.001!0.558976948261261!100.0! <class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [16, 16]! absbnbncnn/results.txt!0.005!!40.0!0.0001! False!0.6963334616795802!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 16, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(16, 16, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=10816, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4183425707373328! all!!0.1!0.1618863952534786! naturalscene!!!0.6153939545728464!-3.0799530514404965!512.0!-3.0293820513034007! absbnbncnn/absbnbncnn_43_chans[16, 16]_lr0.005_l20.001!0.7162948009788376!0.6368230573197426!0.6124892849301218!0.7557849400939971!0.7602752250752017!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!44.0! 15-10-07!0.01!0.5280449986457825!100.0! <class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [16, 16]! absbnbncnn/results.txt!0.001!!40.0!0.0001! False!0.6815858330792535!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 16, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(16, 16, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=10816, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4177636738795157! all!!0.1!0.13779520871843595! naturalscene!!!0.6528804541809822!-2.842541654365275!512.0!-3.0435895574555616! absbnbncnn/absbnbncnn_44_chans[16, 16]_lr0.001_l20.01!0.691169917172593!0.6120541844219789!0.604545337370826!0.7199815101137771!0.7801782163170923!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!45.0! 15-10-07!0.001!0.6134458780288696!100.0! <class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [16, 16]! absbnbncnn/results.txt!0.001!!40.0!0.0001! False!0.7390946989798752!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 16, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(16, 16, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=10816, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3709128833243508! all!!0.1!0.09951886992386877! naturalscene!!!0.5660032677444089!-3.408791085533786!512.0!-3.1797806921131273! absbnbncnn/absbnbncnn_45_chans[16, 16]_lr0.001_l20.001!0.7706194007947976!0.6405983528987697!0.6564446159259117!0.8007946576811444!0.8270164675987525!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!46.0! 15-10-07!0.01!0.5429168939590454!100.0! <class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [16, 16]! absbnbncnn/results.txt!0.0001!!40.0!0.0001! False!0.7010186021712652!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 16, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(16, 16, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=10816, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.35971569239880785! all!!0.1!0.1260365337664845! naturalscene!!!0.6185912528928456!-2.845507737737975!512.0!-2.4858307053982567! absbnbncnn/absbnbncnn_46_chans[16, 16]_lr0.0001_l20.01!0.7253702489469329!0.6384933515421789!0.5920672436326044!0.7690171311013752!0.7801450356332347!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!47.0! 15-10-07!0.001!0.6761770844459534!100.0! <class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [16, 16]! absbnbncnn/results.txt!0.0001!!40.0!0.0001! False!0.6823855211947061!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 16, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(16, 16, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=10816, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3284515716545699! all!!0.1!0.1104402944414128! naturalscene!!!0.5954748947722359!-3.659890102225371!512.0!-3.626555843729875! absbnbncnn/absbnbncnn_47_chans[16, 16]_lr0.0001_l20.001!0.7158333614845429!0.5880907072677674!0.5632596847794407!0.7583764548506766!0.7863673975911022!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!48.0! 15-10-07!0.01!0.4796430468559265!100.0! <class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [16, 24]! absbnbncnn/results.txt!0.006999999999999999!!40.0!0.0001! False!0.6077340556212041!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 16, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(16, 24, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=16224, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3645862530345888! all!!0.1!0.10721308697086084! naturalscene!!!0.6016838250140751!-2.5527623853172834!512.0!-2.095289633241918! absbnbncnn/absbnbncnn_48_chans[16, 24]_lr0.007_l20.01!0.6684158357558098!0.4127251445532207!0.5544560209129408!0.7033441842468957!0.6997290926371538!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!49.0! 15-10-07!0.001!0.5474950075149536!100.0! <class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [16, 24]! absbnbncnn/results.txt!0.006999999999999999!!40.0!0.0001! False!0.6893538801156098!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 16, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(16, 24, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=16224, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.42228744056243! all!!0.1!0.15969019696114234! naturalscene!!!0.6568721262607479!-3.0609342097157266!512.0!-3.0983971120931537! absbnbncnn/absbnbncnn_49_chans[16, 24]_lr0.007_l20.001!0.7025694926128975!0.6169183013911549!0.6225709122161839!0.7501353850529494!0.7545753093048635!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!50.0! 15-10-07!0.01!0.4773261547088623!100.0! <class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [16, 24]! absbnbncnn/results.txt!0.005!!40.0!0.0001! False!0.6236437736724867!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 16, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(16, 24, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=16224, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.47824140358502! all!!0.1!0.2100061116764516! naturalscene!!!0.7288523015918702!-2.5109589509834533!512.0!-2.002939805654023! absbnbncnn/absbnbncnn_50_chans[16, 24]_lr0.005_l20.01!0.6217920215255506!0.5623128278595492!0.5121133176898552!0.6758656283935862!0.7461350728938922!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!51.0! 15-10-07!0.001!0.5489718914031982!100.0! <class 'models.AbsBN_BN_CNN.AbsBNBNCNN'>! True! [16, 24]! absbnbncnn/results.txt!0.005!!40.0!0.0001! False!0.6884026412209256!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 16, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(16, 24, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=16224, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4257517839763905! all!!0.1!0.09952743889680107! naturalscene!!!0.6807106989657993!-3.0941961728609524!512.0!-3.1126901557199744! absbnbncnn/absbnbncnn_51_chans[16, 24]_lr0.005_l20.001!0.6930491402324053!0.6232624890290278!0.6155034305764847!0.7400607791738869!0.7701373670928238!!!!!!!!!!!!!!!!!!!!!
absbnstackedbncnn!0!15-10-07!0.005!0.5635052919387817!85!<class 'torchdeepretina.models.AbsBNStackedBNCNN'>!True![8, 8]!absbnstackedbncnn/results.txt!0.005!NA!0!0.0001!True!0.7216225284145412!AbsBNStackedBNCNN(#  (sequential): Sequential(#    (0): StackedConv2d(#      (convs): Sequential(#        (0): Conv2d(40, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (2): ReLU()#        (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (4): ReLU()#        (5): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (6): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (7): ReLU()#        (8): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (9): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (10): ReLU()#        (11): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (12): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (13): ReLU()#        (14): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (15): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (16): ReLU()#        (17): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (18): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1))#        (19): ReLU()#        (20): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#      )#    )#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): StackedConv2d(#      (convs): Sequential(#        (0): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (2): ReLU()#        (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (4): ReLU()#        (5): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (6): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (7): ReLU()#        (8): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (9): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (10): ReLU()#        (11): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (12): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1))#        (13): ReLU()#        (14): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#      )#    )#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3783602483552217!all!NA!0.05!0.09563841528163643!naturalscene!NA!NA!0.6154242023112084!-3.163994562032536!512!-3.072794719437661!absbnstackedbncnn/absbnstackedbncnn_0_lr0.005!0.746937884942961!0.6590492317264903!0.6537440944354715!0.8033271013889522!0.745054329578831!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA
absbnstackedbncnn!1!15-10-07!0.005!0.6085760593414307!85!<class 'torchdeepretina.models.AbsBNStackedBNCNN'>!True![8, 8]!absbnstackedbncnn/results.txt!0.001!NA!0!0.0001!True!0.6840037422461074!AbsBNStackedBNCNN(#  (sequential): Sequential(#    (0): StackedConv2d(#      (convs): Sequential(#        (0): Conv2d(40, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (2): ReLU()#        (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (4): ReLU()#        (5): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (6): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (7): ReLU()#        (8): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (9): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (10): ReLU()#        (11): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (12): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (13): ReLU()#        (14): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (15): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (16): ReLU()#        (17): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (18): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1))#        (19): ReLU()#        (20): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#      )#    )#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): StackedConv2d(#      (convs): Sequential(#        (0): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (2): ReLU()#        (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (4): ReLU()#        (5): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (6): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (7): ReLU()#        (8): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (9): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (10): ReLU()#        (11): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (12): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1))#        (13): ReLU()#        (14): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#      )#    )#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3676238686201104!all!NA!0.05!0.10712805863219305!naturalscene!NA!NA!0.5709792867596293!-3.5225765699714557!512!-3.386556162973284!absbnstackedbncnn/absbnstackedbncnn_1_lr0.001!0.7516917943275024!0.6301805457133226!0.5856318721121283!0.776684618528023!0.6758298805495606!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA
absbnstackedbncnn!2!15-10-07!0.005!0.6420964002609253!85!<class 'torchdeepretina.models.AbsBNStackedBNCNN'>!True![8, 8]!absbnstackedbncnn/results.txt!0.0005!NA!0!0.0001!True!0.6599000639770266!AbsBNStackedBNCNN(#  (sequential): Sequential(#    (0): StackedConv2d(#      (convs): Sequential(#        (0): Conv2d(40, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (2): ReLU()#        (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (4): ReLU()#        (5): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (6): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (7): ReLU()#        (8): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (9): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (10): ReLU()#        (11): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (12): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (13): ReLU()#        (14): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (15): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (16): ReLU()#        (17): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (18): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1))#        (19): ReLU()#        (20): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#      )#    )#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): StackedConv2d(#      (convs): Sequential(#        (0): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (2): ReLU()#        (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (4): ReLU()#        (5): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (6): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (7): ReLU()#        (8): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (9): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (10): ReLU()#        (11): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (12): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1))#        (13): ReLU()#        (14): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#      )#    )#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3889455407830117!all!NA!0.05!0.09202895961548813!naturalscene!NA!NA!0.6595864176382492!-3.7686187156544912!512!-3.56424909228881!absbnstackedbncnn/absbnstackedbncnn_2_lr0.0005!0.7199498287177645!0.5420713823300953!0.5778296113217081!0.7654883565622118!0.6941611409533532!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA
absbnstackedbncnn!3!15-10-07!0.005!0.6463409066200256!85!<class 'torchdeepretina.models.AbsBNStackedBNCNN'>!True![8, 8]!absbnstackedbncnn/results.txt!0.0001!NA!0!0.0001!True!0.6129614668690404!AbsBNStackedBNCNN(#  (sequential): Sequential(#    (0): StackedConv2d(#      (convs): Sequential(#        (0): Conv2d(40, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (2): ReLU()#        (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (4): ReLU()#        (5): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (6): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (7): ReLU()#        (8): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (9): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (10): ReLU()#        (11): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (12): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (13): ReLU()#        (14): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (15): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (16): ReLU()#        (17): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (18): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1))#        (19): ReLU()#        (20): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#      )#    )#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): StackedConv2d(#      (convs): Sequential(#        (0): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (1): BatchNorm2d(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (2): ReLU()#        (3): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (4): ReLU()#        (5): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (6): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (7): ReLU()#        (8): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (9): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1), bias=False)#        (10): ReLU()#        (11): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#        (12): Conv2d(8, 8, kernel_size=(3, 3), stride=(1, 1))#        (13): ReLU()#        (14): AbsBatchNorm2d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#      )#    )#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=False)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.35551892317947026!all!NA!0.05!0.08616209088686387!naturalscene!NA!NA!0.5662036137487031!-3.758584696602857!512!-3.391543051024928!absbnstackedbncnn/absbnstackedbncnn_3_lr0.0001!0.7035406075555591!0.52138132292853!0.5014140459975243!0.7097316203076601!0.6287397375559288!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA
absbnpractical!0!15-10-07!0.01!0.49719515442848206!50!<class 'torchdeepretina.models.AbsBNPracticalBNCNN'>!True!NA!absbnpractical/results.txt!0.01!NA!0!5e-05!False!0.6383762918188369!AbsBNPracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.125)#    (2): ReLU()#    (3): Flatten()#    (4): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.25)#    (8): ReLU()#    (9): Flatten()#    (10): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.5753930165769182!all!NA!0.25!0.1997303432815386!naturalscene!NA!NA!0.7914727562368467!-2.438986284880257!512!-2.4405934115675336!absbnpractical/absbnpractical_0_lr0.01_l20.01!0.651740269363234!0.5189539653499805!0.5507544932518196!0.7192970066182339!0.7511357245109167!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA
absbnpractical!1!15-10-07!0.001!0.5004790425300598!50!<class 'torchdeepretina.models.AbsBNPracticalBNCNN'>!True!NA!absbnpractical/results.txt!0.01!NA!0!5e-05!False!0.6371884311883489!AbsBNPracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.125)#    (2): ReLU()#    (3): Flatten()#    (4): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.25)#    (8): ReLU()#    (9): Flatten()#    (10): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.478630343774926!all!NA!0.25!0.16748227674654798!naturalscene!NA!NA!0.721532973089037!-2.701498683940951!512!-2.7776432794795256!absbnpractical/absbnpractical_1_lr0.01_l20.001!0.6611753023505106!0.5744562078881407!0.5646286226630449!0.7040130603934336!0.6816689626466147!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA
absbnpractical!2!15-10-07!0.01!0.4712895452976227!50!<class 'torchdeepretina.models.AbsBNPracticalBNCNN'>!True!NA!absbnpractical/results.txt!0.005!NA!0!5e-05!False!0.6028255148768297!AbsBNPracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.125)#    (2): ReLU()#    (3): Flatten()#    (4): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.25)#    (8): ReLU()#    (9): Flatten()#    (10): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.474132908444376!all!NA!0.25!0.1853632375315284!naturalscene!NA!NA!0.7271944616382535!-2.3494167827283277!512!-2.482309582844027!absbnpractical/absbnpractical_2_lr0.005_l20.01!0.6255489438725558!0.48390836092710315!0.5140954458114342!0.6829598618438233!0.7076149619292317!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA
absbnpractical!3!15-10-07!0.001!0.5195291638374329!50!<class 'torchdeepretina.models.AbsBNPracticalBNCNN'>!True!NA!absbnpractical/results.txt!0.005!NA!0!5e-05!False!0.6685967021064224!AbsBNPracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.125)#    (2): ReLU()#    (3): Flatten()#    (4): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.25)#    (8): ReLU()#    (9): Flatten()#    (10): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4260833928893382!all!NA!0.25!0.11931505299704426!naturalscene!NA!NA!0.7096349629321322!-2.8668935129905!512!-2.9042467849201783!absbnpractical/absbnpractical_3_lr0.005_l20.001!0.6800642464363112!0.6195641245351396!0.6015364743310787!0.7319718260654311!0.7098468391641514!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA
absbnpractical!4!15-10-07!0.01!0.5391499996185303!50!<class 'torchdeepretina.models.AbsBNPracticalBNCNN'>!True!NA!absbnpractical/results.txt!0.001!NA!0!5e-05!False!0.6772286655607921!AbsBNPracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.125)#    (2): ReLU()#    (3): Flatten()#    (4): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.25)#    (8): ReLU()#    (9): Flatten()#    (10): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4359852378756547!all!NA!0.25!0.1404748092226192!naturalscene!NA!NA!0.6798729771771632!-2.8664114559757583!512!-3.182464398867887!absbnpractical/absbnpractical_4_lr0.001_l20.01!0.693333263786206!0.6335571354715632!0.61730980598335!0.736983559942016!0.7049595626208252!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA
absbnpractical!5!15-10-07!0.001!0.5815051794052124!50!<class 'torchdeepretina.models.AbsBNPracticalBNCNN'>!True!NA!absbnpractical/results.txt!0.001!NA!0!5e-05!False!0.7003947869172583!AbsBNPracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.125)#    (2): ReLU()#    (3): Flatten()#    (4): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.25)#    (8): ReLU()#    (9): Flatten()#    (10): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.38419664473458087!all!NA!0.25!0.13603430397548263!naturalscene!NA!NA!0.6700155066367368!-3.190250809376056!512!-3.1594378042194875!absbnpractical/absbnpractical_5_lr0.001_l20.001!0.6997586669055054!0.6289772366659203!0.6296485001544314!0.7574742687728065!0.7861152620876275!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA
absbnpractical!6!15-10-07!0.01!0.5939509272575378!50!<class 'torchdeepretina.models.AbsBNPracticalBNCNN'>!True!NA!absbnpractical/results.txt!0.0001!NA!0!5e-05!False!0.675521882585496!AbsBNPracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.125)#    (2): ReLU()#    (3): Flatten()#    (4): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.25)#    (8): ReLU()#    (9): Flatten()#    (10): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3531299441450393!all!NA!0.25!0.09336198814258014!naturalscene!NA!NA!0.6326625638025664!-3.1392145250357832!512!-3.1192682300770684!absbnpractical/absbnpractical_6_lr0.0001_l20.01!0.7151789296711399!0.6062982690061307!0.5721988538412246!0.7602202485596264!0.7237131118493583!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA
absbnpractical!7!15-10-07!0.001!0.5948200821876526!50!<class 'torchdeepretina.models.AbsBNPracticalBNCNN'>!True!NA!absbnpractical/results.txt!0.0001!NA!0!5e-05!False!0.6836881695406694!AbsBNPracticalBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.125)#    (2): ReLU()#    (3): Flatten()#    (4): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.25)#    (8): ReLU()#    (9): Flatten()#    (10): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3662331233781479!all!NA!0.25!0.10327413511962874!naturalscene!NA!NA!0.6099331636740948!-3.136730179527766!512!-3.193184876823216!absbnpractical/absbnpractical_7_lr0.0001_l20.001!0.7262759863731826!0.6329244753445655!0.595786481720784!0.7553142227534941!0.7081396815113208!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA
absbndalesbncnn!0!15-10-07!0.01!0.38258224725723267!85!<class 'torchdeepretina.models.AbsBNDalesBNCNN'>!True!NA!absbndalesbncnn/results.txt!0.005!NA!0!1e-05!True!0.48237007323886116!AbsBNDalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (3): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (10): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.5525892535472491!all!NA!0.15!0.21047624033103982!naturalscene!NA!NA!0.7227693034991431!-1.5746494623162357!512!-1.5447908058856683!absbndalesbncnn/absbndalesbncnn_0_lr0.005_l20.01!0.4728647164734977!0.2633997948589662!0.36646470665971936!0.5711864842370586!0.737934663965064!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA
absbndalesbncnn!1!15-10-07!0.001!0.44356948137283325!85!<class 'torchdeepretina.models.AbsBNDalesBNCNN'>!True!NA!absbndalesbncnn/results.txt!0.005!NA!0!1e-05!True!0.5579590567578706!AbsBNDalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (3): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (10): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.46732939156629155!all!NA!0.15!0.13760573049815222!naturalscene!NA!NA!0.6828889272963223!-2.2360089792565163!512!-2.2662202488756975!absbndalesbncnn/absbndalesbncnn_1_lr0.005_l20.001!0.6419995184022523!0.3269737295651759!0.4648281455958999!0.6902383370177693!0.6657555532082559!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA
absbndalesbncnn!2!15-10-07!0.01!0.42949748039245605!85!<class 'torchdeepretina.models.AbsBNDalesBNCNN'>!True!NA!absbndalesbncnn/results.txt!0.001!NA!0!1e-05!True!0.5292914008609559!AbsBNDalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (3): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (10): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.5496047840304258!all!NA!0.15!0.2107983065685678!naturalscene!NA!NA!0.7565755710377772!-1.92480327051869!512!-2.021200181941822!absbndalesbncnn/absbndalesbncnn_2_lr0.001_l20.01!0.5654070317634212!0.31226790726260745!0.42544242236420465!0.6036035787715519!0.7397360641429942!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA
absbndalesbncnn!3!15-10-07!0.001!0.4789120554924011!85!<class 'torchdeepretina.models.AbsBNDalesBNCNN'>!True!NA!absbndalesbncnn/results.txt!0.001!NA!0!1e-05!True!0.5774274032684582!AbsBNDalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (3): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (10): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.4644783675433677!all!NA!0.15!0.12691062667942332!naturalscene!NA!NA!0.7183669667171136!-2.3767077513769563!512!-2.385072118388962!absbndalesbncnn/absbndalesbncnn_3_lr0.001_l20.001!0.6103696398939727!0.410140760790628!0.46170668218481614!0.6648910517582275!0.7400288817146469!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA
absbndalesbncnn!4!15-10-07!0.01!0.5248218178749084!85!<class 'torchdeepretina.models.AbsBNDalesBNCNN'>!True!NA!absbndalesbncnn/results.txt!0.0005!NA!0!1e-05!True!0.6545117344221053!AbsBNDalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (3): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (10): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.40065706632841863!all!NA!0.15!0.11050445517026193!naturalscene!NA!NA!0.6750844574975662!-2.576133477202368!512!-2.88463372896922!absbndalesbncnn/absbndalesbncnn_4_lr0.0005_l20.01!0.692555696166454!0.5042327374589807!0.5553556545632968!0.732531438137963!0.787883145783832!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA
absbndalesbncnn!5!15-10-07!0.001!0.5211287140846252!85!<class 'torchdeepretina.models.AbsBNDalesBNCNN'>!True!NA!absbndalesbncnn/results.txt!0.0005!NA!0!1e-05!True!0.6336612826026984!AbsBNDalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (3): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (10): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.3911741639824944!all!NA!0.15!0.12018333534856157!naturalscene!NA!NA!0.6816489799664153!-2.6910605302493495!512!-2.604483849009739!absbndalesbncnn/absbndalesbncnn_5_lr0.0005_l20.001!0.6624148538208642!0.4931117670603193!0.5871665813986945!0.7212969162711945!0.7043162944624198!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA
absbndalesbncnn!6!15-10-07!0.01!0.5048439502716064!85!<class 'torchdeepretina.models.AbsBNDalesBNCNN'>!True!NA!absbndalesbncnn/results.txt!0.0001!NA!0!1e-05!True!0.6150922856639939!AbsBNDalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (3): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (10): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.44864704120823623!all!NA!0.15!0.11501869416161159!naturalscene!NA!NA!0.7166242316684982!-2.4676996420051895!512!-2.38425786910193!absbndalesbncnn/absbndalesbncnn_6_lr0.0001_l20.01!0.623899072047484!0.49170768823921923!0.5191519464743667!0.6936474768473402!0.7470552447115594!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA
absbndalesbncnn!7!15-10-07!0.001!0.49210691452026367!85!<class 'torchdeepretina.models.AbsBNDalesBNCNN'>!True!NA!absbndalesbncnn/results.txt!0.0001!NA!0!1e-05!True!0.5855599494195924!AbsBNDalesBNCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (3): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (7): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (8): Flatten()#    (9): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=0.001)#    (10): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (11): ReLU()#    (12): Reshape()#    (13): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (14): Flatten()#    (15): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (16): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (17): Softplus(beta=1, threshold=20)#  )#)#!0.3753030530986862!all!NA!0.15!0.10659269784319697!naturalscene!NA!NA!0.596390109135824!-2.3461528493268458!512!-2.339017622645315!absbndalesbncnn/absbndalesbncnn_7_lr0.0001_l20.001!0.6230925783246293!0.43010912355899233!0.5150808363077538!0.645919880929074!0.7135973279775129!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA
dalessscnn!0!15-10-07!0.01!!85!<class 'torchdeepretina.models.DalesSSCNN'>!True!NA!dalessscnn/results.txt!0.005!NA!0!1e-05!True!!DalesSSCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (3): ReLU()#    (4): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (5): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (6): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (7): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (8): ReLU()#    (9): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (10): Flatten()#    (11): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (12): ScaleShift(shape=5, scale=True, shift=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!NA!all!NA!0.15!NA!naturalscene!NA!NA!NA!inf!512!!dalessscnn/dalessscnn_0_lr0.005_l20.01!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA
dalessscnn!1!15-10-07!0.001!!85!<class 'torchdeepretina.models.DalesSSCNN'>!True!NA!dalessscnn/results.txt!0.005!NA!0!1e-05!True!!DalesSSCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (3): ReLU()#    (4): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (5): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (6): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (7): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (8): ReLU()#    (9): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (10): Flatten()#    (11): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (12): ScaleShift(shape=5, scale=True, shift=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!NA!all!NA!0.15!NA!naturalscene!NA!NA!NA!inf!512!!dalessscnn/dalessscnn_1_lr0.005_l20.001!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA
dalessscnn!2!15-10-07!0.01!-0.08268164098262787!85!<class 'torchdeepretina.models.DalesSSCNN'>!True!NA!dalessscnn/results.txt!0.001!NA!0!1e-05!True!-0.03449528077353938!DalesSSCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (3): ReLU()#    (4): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (5): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (6): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (7): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (8): ReLU()#    (9): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (10): Flatten()#    (11): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (12): ScaleShift(shape=5, scale=True, shift=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!NA!all!NA!0.15!NA!naturalscene!NA!NA!NA!0.983246559740731!512!0.9532887194316118!dalessscnn/dalessscnn_2_lr0.001_l20.01!-0.04741515745322946!-0.043336208610399!-0.03302080628849179!-0.03338051256078928!-0.015323718954787385!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA
dalessscnn!3!15-10-07!0.001!-0.0035522307734936476!85!<class 'torchdeepretina.models.DalesSSCNN'>!True!NA!dalessscnn/results.txt!0.001!NA!0!1e-05!True!-0.0042269036835208456!DalesSSCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (3): ReLU()#    (4): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (5): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (6): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (7): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (8): ReLU()#    (9): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (10): Flatten()#    (11): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (12): ScaleShift(shape=5, scale=True, shift=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!NA!all!NA!0.15!NA!naturalscene!NA!NA!NA!2.9434943605346473e+28!512!3.85864738714673e+28!dalessscnn/dalessscnn_3_lr0.001_l20.001!-0.03393443835877527!0.010903882471722593!0.020083070453499104!-0.022825030991927325!0.004637998007876671!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA
dalessscnn!4!15-10-07!0.01!0.3877500593662262!85!<class 'torchdeepretina.models.DalesSSCNN'>!True!NA!dalessscnn/results.txt!0.0005!NA!0!1e-05!True!0.43832442700596347!DalesSSCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (3): ReLU()#    (4): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (5): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (6): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (7): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (8): ReLU()#    (9): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (10): Flatten()#    (11): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (12): ScaleShift(shape=5, scale=True, shift=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.5700716255197902!all!NA!0.15!0.20651301874057332!naturalscene!NA!NA!0.7849585846689932!-1.798003830791059!512!-1.8205428703106463!dalessscnn/dalessscnn_4_lr0.0005_l20.01!0.43715710841908784!0.2745977158877135!0.35195070738175904!0.50478213183031!0.6231344715109473!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA
dalessscnn!5!15-10-07!0.001!0.2869127094745636!85!<class 'torchdeepretina.models.DalesSSCNN'>!True!NA!dalessscnn/results.txt!0.0005!NA!0!1e-05!True!0.3266649983529417!DalesSSCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (3): ReLU()#    (4): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (5): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (6): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (7): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (8): ReLU()#    (9): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (10): Flatten()#    (11): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (12): ScaleShift(shape=5, scale=True, shift=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!NA!all!NA!0.15!NA!naturalscene!NA!NA!NA!-1.289913944458957!512!-0.26929785779475424!dalessscnn/dalessscnn_5_lr0.0005_l20.001!0.3392415202386306!0.229924154706984!0.29223727641837094!0.38024059506337554!0.3916814453373476!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA
dalessscnn!6!15-10-07!0.01!0.39518827199935913!85!<class 'torchdeepretina.models.DalesSSCNN'>!True!NA!dalessscnn/results.txt!0.0001!NA!0!1e-05!True!0.4706098406492273!DalesSSCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (3): ReLU()#    (4): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (5): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (6): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (7): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (8): ReLU()#    (9): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (10): Flatten()#    (11): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (12): ScaleShift(shape=5, scale=True, shift=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4696743186010654!all!NA!0.15!0.202319581712855!naturalscene!NA!NA!0.7769042131199173!-1.7797083979480244!512!-1.5931972890189172!dalessscnn/dalessscnn_6_lr0.0001_l20.01!0.5067488048170526!0.3210420424415498!0.4352923228750368!0.5224172532780519!0.5675487798344453!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA
dalessscnn!7!15-10-07!0.001!0.3593490719795227!85!<class 'torchdeepretina.models.DalesSSCNN'>!True!NA!dalessscnn/results.txt!0.0001!NA!0!1e-05!True!0.4229442657309068!DalesSSCNN(#  (sequential): Sequential(#    (0): AbsConv2d(#      (conv): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (1): ScaleShift(shape=(8, 36, 36), scale=True, shift=True)#    (2): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (3): ReLU()#    (4): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (5): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (6): ScaleShift(shape=(8, 26, 26), scale=True, shift=True)#    (7): GaussianNoise(std=0.15, trainable=False, adapt=True, momentum=0.95)#    (8): ReLU()#    (9): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (10): Flatten()#    (11): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (12): ScaleShift(shape=5, scale=True, shift=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4579466577015751!all!NA!0.15!0.18331612617578144!naturalscene!NA!NA!0.6419842726097216!-1.6205428662747818!512!-0.3071445983413241!dalessscnn/dalessscnn_7_lr0.0001_l20.001!0.4407373379657389!0.32671392203256133!0.38970936718227195!0.4832927138098192!0.47426798766414274!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA
bncnn!0!15-10-07!0.01!0.4970860481262207!70!<class 'torchdeepretina.models.BNCNN'>!True![8, 8]!bncnn/results.txt!0.005!NA!0!0.0001!False!0.6441167405439875!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4278611131814721!all!NA!0.05!0.14314239506033793!naturalscene!NA!NA!0.7266836482992692!-2.661611063537914!512!-2.463835833605117!bncnn/bncnn_0_lr0.005_l20.01!0.6535744613782462!0.5623784473575553!0.5576527610481555!0.700083610960948!0.7468944219750323!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA
bncnn!1!15-10-07!0.001!0.5678633451461792!70!<class 'torchdeepretina.models.BNCNN'>!True![8, 8]!bncnn/results.txt!0.005!NA!1!0.0001!False!0.7079318287461576!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3961764575810859!all!NA!0.05!0.10637879498846822!naturalscene!NA!NA!0.7001476574510717!-3.2092365782544983!512!-3.061089900629304!bncnn/bncnn_1_lr0.005_l20.001!0.7080344948691628!0.6403217019901423!0.6419247105885489!0.7533041754539395!0.7960740608289947!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA
bncnn!2!15-10-07!0.0001!0.6281460523605347!70!<class 'torchdeepretina.models.BNCNN'>!True![8, 8]!bncnn/results.txt!0.005!NA!1!0.0001!False!0.677601628830234!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.41198859717834524!all!NA!0.05!0.15316902335470786!naturalscene!NA!NA!0.634515477874373!-3.7406500520389723!512!-3.554465472100128!bncnn/bncnn_2_lr0.005_l20.0001!0.701292396278688!0.5512948052398405!0.6099223079583834!0.7697445206168017!0.755754114057456!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA
bncnn!3!15-10-07!0.001!0.6285377740859985!70!<class 'torchdeepretina.models.BNCNN'>!True![8, 8]!bncnn/results.txt!0.001!NA!1!0.0001!False!0.6974588975700906!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.34113061199440475!all!NA!0.05!0.10117530152112074!naturalscene!NA!NA!0.5762997271723732!-3.5736890220354405!512!-3.54254016471823!bncnn/bncnn_3_lr0.001_l20.001!0.7284907099764251!0.6268114766958782!0.5886000623480675!0.7621078599907132!0.7812843788393689!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA
bncnn!4!15-10-07!0.0001!0.6870697140693665!70!<class 'torchdeepretina.models.BNCNN'>!True![8, 8]!bncnn/results.txt!0.001!NA!1!0.0001!False!0.6735441593091481!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.33950015841296194!all!NA!0.05!0.09908404289984739!naturalscene!NA!NA!0.5892793347330554!-3.9590707562448033!512!-3.72760225653401!bncnn/bncnn_4_lr0.001_l20.0001!0.717993898294103!0.562210040010767!0.5381792828613062!0.7706176005048474!0.7787199748747173!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA
bncnn!5!15-10-07!0.001!0.661774754524231!70!<class 'torchdeepretina.models.BNCNN'>!True![8, 8]!bncnn/results.txt!0.0005!NA!1!0.0001!False!0.6893112328725725!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.33858247936086266!all!NA!0.05!0.10829852772400593!naturalscene!NA!NA!0.5746303580082076!-3.6625625556770314!512!-3.8323723460278414!bncnn/bncnn_5_lr0.0005_l20.001!0.7146653814240381!0.5811679195221566!0.6160054676112566!0.761452954798391!0.7732644410070193!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA
bncnn!6!15-10-07!0.0001!0.6953994631767273!70!<class 'torchdeepretina.models.BNCNN'>!True![8, 8]!bncnn/results.txt!0.0005!NA!1!0.0001!False!0.6443476976410407!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3425795105617491!all!NA!0.05!0.09693088550660048!naturalscene!NA!NA!0.5819391473962081!-3.946459060340985!512!-3.6223994918342215!bncnn/bncnn_6_lr0.0005_l20.0001!0.709871270503674!0.5466229735832778!0.5178503099288084!0.7004082428215216!0.7469856913679216!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA!NA
dalesskip!0!15-10-07!0.001!0.38940685987472534!70!<class 'torchdeepretina.models.DalesSkipBNCNN'>!True![8, 8]!dalesskip/results.txt!0.01!!0!1e-05!False!0.4796238070340021!DalesSkipBNCNN(#  (sequential): Sequential(#    (0): DalesSkipConnection(#      (sequential): Sequential(#        (0): AbsConv2d(#          (conv): Conv2d(40, 2, kernel_size=(15, 15), stride=(1, 1), padding=(7, 7))#        )#        (1): Flatten()#        (2): BatchNorm1d(5000, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (3): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#        (4): ReLU()#        (5): Reshape()#        (6): DaleActivations(n_chan=2, neg_p=1, n_neg_chan=2)#      )#    )#    (1): AbsConv2d(#      (conv): Conv2d(42, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (2): Flatten()#    (3): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (4): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (5): ReLU()#    (6): Reshape()#    (7): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (8): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (12): ReLU()#    (13): Reshape()#    (14): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (15): Flatten()#    (16): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (17): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (18): Softplus(beta=1, threshold=20)#  )#)#!0.5373681812233735!all!!0.05!0.11700576975085705!naturalscene!!!0.6886459030151083!-1.6057454965458018!512!-1.620415510914063!dalesskip/dalesskip_0_lr0.01!0.46567721304208154!0.26325338350564276!0.3888923766482963!0.5673324978571713!0.7129635641168183!!!!!!!!!!!!!!!!!!!!!
dalesskip!1!15-10-07!0.001!0.5207783579826355!70!<class 'torchdeepretina.models.DalesSkipBNCNN'>!True![8, 8]!dalesskip/results.txt!0.001!!0!1e-05!False!0.6389544203491377!DalesSkipBNCNN(#  (sequential): Sequential(#    (0): DalesSkipConnection(#      (sequential): Sequential(#        (0): AbsConv2d(#          (conv): Conv2d(40, 2, kernel_size=(15, 15), stride=(1, 1), padding=(7, 7))#        )#        (1): Flatten()#        (2): BatchNorm1d(5000, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (3): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#        (4): ReLU()#        (5): Reshape()#        (6): DaleActivations(n_chan=2, neg_p=1, n_neg_chan=2)#      )#    )#    (1): AbsConv2d(#      (conv): Conv2d(42, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (2): Flatten()#    (3): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (4): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (5): ReLU()#    (6): Reshape()#    (7): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (8): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (12): ReLU()#    (13): Reshape()#    (14): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (15): Flatten()#    (16): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (17): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (18): Softplus(beta=1, threshold=20)#  )#)#!0.5627837822341828!all!!0.05!0.12495864151615699!naturalscene!!!0.7259198563273648!-2.540341563713856!512!-2.6258775251833866!dalesskip/dalesskip_1_lr0.001!0.6702755398864275!0.49745824327270177!0.5447160313893243!0.7329258241887834!0.749396463008452!!!!!!!!!!!!!!!!!!!!!
dalesskip!2!15-10-07!0.001!0.5308011174201965!70!<class 'torchdeepretina.models.DalesSkipBNCNN'>!True![8, 8]!dalesskip/results.txt!0.0001!!0!1e-05!False!0.655176147687215!DalesSkipBNCNN(#  (sequential): Sequential(#    (0): DalesSkipConnection(#      (sequential): Sequential(#        (0): AbsConv2d(#          (conv): Conv2d(40, 2, kernel_size=(15, 15), stride=(1, 1), padding=(7, 7))#        )#        (1): Flatten()#        (2): BatchNorm1d(5000, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (3): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#        (4): ReLU()#        (5): Reshape()#        (6): DaleActivations(n_chan=2, neg_p=1, n_neg_chan=2)#      )#    )#    (1): AbsConv2d(#      (conv): Conv2d(42, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (2): Flatten()#    (3): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (4): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (5): ReLU()#    (6): Reshape()#    (7): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (8): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (12): ReLU()#    (13): Reshape()#    (14): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (15): Flatten()#    (16): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (17): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (18): Softplus(beta=1, threshold=20)#  )#)#!0.36536374125561166!all!!0.05!0.12507923711029448!naturalscene!!!0.6119654757970762!-2.6461675729866663!512!-2.822022361188192!dalesskip/dalesskip_2_lr0.0001!0.6782867098215004!0.5544793850286553!0.5940855317703405!0.7349728159643873!0.7140562958511908!!!!!!!!!!!!!!!!!!!!!
dalesskip!3!15-10-07!0.001!0.507881760597229!70!<class 'torchdeepretina.models.DalesSkipBNCNN'>!True![8, 8]!dalesskip/results.txt!1e-05!!0!1e-05!False!0.6236771371734968!DalesSkipBNCNN(#  (sequential): Sequential(#    (0): DalesSkipConnection(#      (sequential): Sequential(#        (0): AbsConv2d(#          (conv): Conv2d(40, 2, kernel_size=(15, 15), stride=(1, 1), padding=(7, 7))#        )#        (1): Flatten()#        (2): BatchNorm1d(5000, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (3): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#        (4): ReLU()#        (5): Reshape()#        (6): DaleActivations(n_chan=2, neg_p=1, n_neg_chan=2)#      )#    )#    (1): AbsConv2d(#      (conv): Conv2d(42, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (2): Flatten()#    (3): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (4): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (5): ReLU()#    (6): Reshape()#    (7): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (8): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (12): ReLU()#    (13): Reshape()#    (14): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (15): Flatten()#    (16): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (17): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (18): Softplus(beta=1, threshold=20)#  )#)#!0.4578879199347461!all!!0.05!0.16458227220607852!naturalscene!!!0.7413022757119558!-1.836886234109488!512!-1.8525092042820688!dalesskip/dalesskip_3_lr1e-05!0.659240780321978!0.5276448251216281!0.5313255214664073!0.6576750793460938!0.7424994796113769!!!!!!!!!!!!!!!!!!!!!
dalesskip!4!15-10-07!0.001!0.4360457956790924!70!<class 'torchdeepretina.models.DalesSkipBNCNN'>!True![8, 8]!dalesskip/results.txt!1e-06!!0!1e-05!False!0.5232283042976681!DalesSkipBNCNN(#  (sequential): Sequential(#    (0): DalesSkipConnection(#      (sequential): Sequential(#        (0): AbsConv2d(#          (conv): Conv2d(40, 2, kernel_size=(15, 15), stride=(1, 1), padding=(7, 7))#        )#        (1): Flatten()#        (2): BatchNorm1d(5000, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#        (3): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#        (4): ReLU()#        (5): Reshape()#        (6): DaleActivations(n_chan=2, neg_p=1, n_neg_chan=2)#      )#    )#    (1): AbsConv2d(#      (conv): Conv2d(42, 8, kernel_size=(15, 15), stride=(1, 1))#    )#    (2): Flatten()#    (3): BatchNorm1d(10368, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (4): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (5): ReLU()#    (6): Reshape()#    (7): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (8): AbsConv2d(#      (conv): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    )#    (9): Flatten()#    (10): BatchNorm1d(5408, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)#    (11): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (12): ReLU()#    (13): Reshape()#    (14): DaleActivations(n_chan=8, neg_p=0.5, n_neg_chan=4)#    (15): Flatten()#    (16): AbsLinear(#      (linear): Linear(in_features=5408, out_features=5, bias=True)#    )#    (17): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (18): Softplus(beta=1, threshold=20)#  )#)#!0.2987369321479381!all!!0.05!0.14884719697798868!naturalscene!!!0.42198934037774327!-1.2585422244614066!512!-1.5147592277156945!dalesskip/dalesskip_4_lr1e-06!0.5660587932352685!0.3977597368731767!0.43723043134981465!0.5644078071391787!0.6506847528909019!!!!!!!!!!!!!!!!!!!!!
practicalmeanbncnn!0!15-10-07!0.001!0.33478888869285583!50!<class 'torchdeepretina.models.PracticalMeanBNCNN'>!True![8, 8]!practicalmeanbncnn/results.txt!0.01!!0!5e-05!False!0.40205912890902323!PracticalMeanBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.125)#    (2): ReLU()#    (3): Flatten()#    (4): MeanOnlyBatchNorm1d()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.25)#    (8): ReLU()#    (9): Flatten()#    (10): MeanOnlyBatchNorm1d()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3122152565441853!all!!0.25!0.16407642330782682!naturalscene!!!0.4771290275035195!-1.2921834408332276!512!-1.311324432524998!practicalmeanbncnn/practicalmeanbncnn_0_lr0.01_l20.001!0.3700203363089715!0.2531170851332771!0.3069842935696223!0.41368671851472505!0.6664872110185203!!!!!!!!!!!!!!!!!!!!!
practicalmeanbncnn!1!15-10-07!0.0001!0.5371328592300415!50!<class 'torchdeepretina.models.PracticalMeanBNCNN'>!True![8, 8]!practicalmeanbncnn/results.txt!0.01!!0!5e-05!False!0.6751907319782353!PracticalMeanBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.125)#    (2): ReLU()#    (3): Flatten()#    (4): MeanOnlyBatchNorm1d()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.25)#    (8): ReLU()#    (9): Flatten()#    (10): MeanOnlyBatchNorm1d()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4122587701542136!all!!0.25!0.09947229469232854!naturalscene!!!0.7143239330601073!-3.014036803583574!512!-3.083989274556734!practicalmeanbncnn/practicalmeanbncnn_1_lr0.01_l20.0001!0.6917833322571616!0.6129944743274391!0.6264224184211092!0.7454918939897947!0.6992615408956718!!!!!!!!!!!!!!!!!!!!!
practicalmeanbncnn!2!15-10-07!0.001!0.5085324645042419!50!<class 'torchdeepretina.models.PracticalMeanBNCNN'>!True![8, 8]!practicalmeanbncnn/results.txt!0.005!!0!5e-05!False!0.6445183206721734!PracticalMeanBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.125)#    (2): ReLU()#    (3): Flatten()#    (4): MeanOnlyBatchNorm1d()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.25)#    (8): ReLU()#    (9): Flatten()#    (10): MeanOnlyBatchNorm1d()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4461776891210077!all!!0.25!0.1651973914595929!naturalscene!!!0.7276119988115646!-2.783662257061465!512!-2.933456405004108!practicalmeanbncnn/practicalmeanbncnn_2_lr0.005_l20.001!0.6702571669359981!0.5951096408547855!0.5839270064646627!0.7310846996437277!0.6422130894616932!!!!!!!!!!!!!!!!!!!!!
practicalmeanbncnn!3!15-10-07!0.0001!0.549350380897522!50!<class 'torchdeepretina.models.PracticalMeanBNCNN'>!True![8, 8]!practicalmeanbncnn/results.txt!0.005!!0!5e-05!False!0.6730311060903555!PracticalMeanBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.125)#    (2): ReLU()#    (3): Flatten()#    (4): MeanOnlyBatchNorm1d()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.25)#    (8): ReLU()#    (9): Flatten()#    (10): MeanOnlyBatchNorm1d()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.38468072735144143!all!!0.25!0.09352440796692459!naturalscene!!!0.6562512337115028!-3.0746583933204548!512!-3.06315997265483!practicalmeanbncnn/practicalmeanbncnn_3_lr0.005_l20.0001!0.6915456571245638!0.6353134328409638!0.6130559209676112!0.7242307281261066!0.7010097913925325!!!!!!!!!!!!!!!!!!!!!
practicalmeanbncnn!4!15-10-07!0.001!0.5877969861030579!50!<class 'torchdeepretina.models.PracticalMeanBNCNN'>!True![8, 8]!practicalmeanbncnn/results.txt!0.001!!0!5e-05!False!0.7024181793125305!PracticalMeanBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.125)#    (2): ReLU()#    (3): Flatten()#    (4): MeanOnlyBatchNorm1d()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.25)#    (8): ReLU()#    (9): Flatten()#    (10): MeanOnlyBatchNorm1d()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.38822725696289556!all!!0.25!0.11537548382505898!naturalscene!!!0.6696458729167655!-3.1970323340385747!512!-3.5717763304695835!practicalmeanbncnn/practicalmeanbncnn_4_lr0.001_l20.001!0.7214045079714285!0.6302740873664475!0.6229614885680711!0.7519622625689936!0.7854885500877119!!!!!!!!!!!!!!!!!!!!!
practicalmeanbncnn!5!15-10-07!0.0001!0.5970863103866577!50!<class 'torchdeepretina.models.PracticalMeanBNCNN'>!True![8, 8]!practicalmeanbncnn/results.txt!0.001!!0!5e-05!False!0.6884802908130639!PracticalMeanBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.125)#    (2): ReLU()#    (3): Flatten()#    (4): MeanOnlyBatchNorm1d()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.25)#    (8): ReLU()#    (9): Flatten()#    (10): MeanOnlyBatchNorm1d()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.37235158125862033!all!!0.25!0.10325108678704695!naturalscene!!!0.6384046493132862!-3.3700327057824055!512!-3.3046349172265765!practicalmeanbncnn/practicalmeanbncnn_5_lr0.001_l20.0001!0.7133030569005022!0.6128940377355045!0.6234656788694891!0.7437323478543363!0.7490063327054879!!!!!!!!!!!!!!!!!!!!!
practicalmeanbncnn!6!15-10-07!0.001!0.5909155607223511!50!<class 'torchdeepretina.models.PracticalMeanBNCNN'>!True![8, 8]!practicalmeanbncnn/results.txt!0.0001!!0!5e-05!False!0.6890130526127587!PracticalMeanBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.125)#    (2): ReLU()#    (3): Flatten()#    (4): MeanOnlyBatchNorm1d()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.25)#    (8): ReLU()#    (9): Flatten()#    (10): MeanOnlyBatchNorm1d()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.36318547043564936!all!!0.25!0.09807860430872734!naturalscene!!!0.6055750755951635!-3.1954679515207154!512!-3.172763458220652!practicalmeanbncnn/practicalmeanbncnn_6_lr0.0001_l20.001!0.7301713438045204!0.5965305783146325!0.6155453384570428!0.7625835776712052!0.7402344248163923!!!!!!!!!!!!!!!!!!!!!
practicalmeanbncnn!7!15-10-07!0.0001!0.5868760347366333!50!<class 'torchdeepretina.models.PracticalMeanBNCNN'>!True![8, 8]!practicalmeanbncnn/results.txt!0.0001!!0!5e-05!False!0.6911913910426917!PracticalMeanBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Dropout(p=0.125)#    (2): ReLU()#    (3): Flatten()#    (4): MeanOnlyBatchNorm1d()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Dropout(p=0.25)#    (8): ReLU()#    (9): Flatten()#    (10): MeanOnlyBatchNorm1d()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3674375173571865!all!!0.25!0.10254105413391358!naturalscene!!!0.6206147845801518!-3.1387659511774735!512!-3.177856418689771!practicalmeanbncnn/practicalmeanbncnn_7_lr0.0001_l20.0001!0.7249151330096641!0.6375540662713247!0.6304076306589059!0.7553013851686144!0.7077787401049491!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!52!15-10-07!0.001!0.5399245023727417!85!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![10, 10]!absbnbncnn/results.txt!0.007!!52!0.0001!False!0.6784158445154137!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 10, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(10, 10, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=6760, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.44058581052925666!all!!0.1!0.14383089258891754!naturalscene!!!0.6468977531174582!-3.003821863308212!512!-2.9357738233549755!absbnbncnn/absbnbncnn_52_lr0.007_chans[10, 10]!0.6979535200290597!0.615819135846789!0.596794592041232!0.7460382851012356!0.7354736895587521!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!53!15-10-07!0.001!0.5560445189476013!85!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![12, 12]!absbnbncnn/results.txt!0.007!!52!0.0001!False!0.6837617258729489!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 12, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(12, 12, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=8112, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.40909538107711063!all!!0.1!0.1500873220548099!naturalscene!!!0.6824536830348975!-3.0572602752466906!512!-3.068256038245454!absbnbncnn/absbnbncnn_53_lr0.007_chans[12, 12]!0.7180632855220372!0.6124559123368836!0.6173298310944871!0.7468417715146375!0.7241178288966992!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!54!15-10-07!0.001!0.5537539720535278!85!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![14, 14]!absbnbncnn/results.txt!0.007!!52!0.0001!False!0.6937052264340805!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 14, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(14, 14, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=9464, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4164280730565201!all!!0.1!0.1557824769626229!naturalscene!!!0.6526862151795565!-3.067173482066366!512!-3.149187097875256!absbnbncnn/absbnbncnn_54_lr0.007_chans[14, 14]!0.7026622856227432!0.6379294708120973!0.603839623986512!0.7539366164239929!0.7701581353250574!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!55!15-10-07!0.001!0.5647026300430298!85!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![18, 18]!absbnbncnn/results.txt!0.007!!52!0.0001!False!0.7024403182250942!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 18, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(18, 18, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=12168, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4446050788284945!all!!0.1!0.15869621244025006!naturalscene!!!0.6983851651322964!-3.083093601474215!512!-3.0202854259783636!absbnbncnn/absbnbncnn_55_lr0.007_chans[18, 18]!0.7344584218789236!0.622443098669128!0.6245481183598792!0.7585600363965325!0.7721919158210084!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!56!15-10-07!0.001!0.6166962385177612!85!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![10, 10]!absbnbncnn/results.txt!0.001!!52!0.0001!False!0.7181983001146246!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 10, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(10, 10, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=6760, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3424688035926854!all!!0.1!0.13269434949994507!naturalscene!!!0.5827782348843654!-3.4401590669496747!512!-3.625430031673022!absbnbncnn/absbnbncnn_56_lr0.001_chans[10, 10]!0.7374366916975835!0.6375349872904077!0.6240910536191092!0.7809592646442325!0.81096950332179!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!57!15-10-07!0.001!0.6221537590026855!85!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![12, 12]!absbnbncnn/results.txt!0.001!!52!0.0001!False!0.7296393486975459!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 12, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(12, 12, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=8112, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3724136988494559!all!!0.1!0.13649261200376642!naturalscene!!!0.5819462300177961!-3.4086858463862724!512!-3.229655254057434!absbnbncnn/absbnbncnn_57_lr0.001_chans[12, 12]!0.76951724197465!0.6150919087093066!0.6534434516720279!0.7963911648433307!0.8137529762884143!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!58!15-10-07!0.001!0.6154800057411194!85!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![14, 14]!absbnbncnn/results.txt!0.001!!52!0.0001!False!0.7333298432503259!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 14, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(14, 14, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=9464, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3724265343266411!all!!0.1!0.12479392050948013!naturalscene!!!0.6059489086846028!-3.3740410743615565!512!-3.1371123686905777!absbnbncnn/absbnbncnn_58_lr0.001_chans[14, 14]!0.7753731306943124!0.6638788492307904!0.6310414755975375!0.787673346301645!0.808682414427344!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!59!15-10-07!0.001!0.6196966171264648!85!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![18, 18]!absbnbncnn/results.txt!0.001!!52!0.0001!False!0.7203616999280097!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 18, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(18, 18, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=12168, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.38623436735794!all!!0.1!0.12301322206820466!naturalscene!!!0.6673926473237508!-3.329116469774491!512!-3.039629488497667!absbnbncnn/absbnbncnn_59_lr0.001_chans[18, 18]!0.7643225513094931!0.6146221498454193!0.6450643206924217!0.747726989231342!0.8300724885613728!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!60!15-10-07!0.001!0.6279265284538269!85!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![10, 10]!absbnbncnn/results.txt!0.0005!!52!0.0001!False!0.7352902060473074!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 10, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(10, 10, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=6760, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.35565674716013723!all!!0.1!0.09213907071428612!naturalscene!!!0.625709710866983!-3.460608425543139!512!-3.2947783948380676!absbnbncnn/absbnbncnn_60_lr0.0005_chans[10, 10]!0.7486903995058048!0.6603555075695375!0.6491754436086914!0.7870769900313627!0.831152689521141!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!61!15-10-07!0.001!0.6382166147232056!85!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![12, 12]!absbnbncnn/results.txt!0.0005!!52!0.0001!False!0.7061256270139304!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 12, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(12, 12, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=8112, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3484639705387972!all!!0.1!0.13241748430231987!naturalscene!!!0.5956108549431804!-3.546645037099427!512!-3.433897135067673!absbnbncnn/absbnbncnn_61_lr0.0005_chans[12, 12]!0.7331596202499462!0.6420309726139415!0.5913994854685959!0.7742332825037962!0.7898047742333725!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!62!15-10-07!0.001!0.6355225443840027!85!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![14, 14]!absbnbncnn/results.txt!0.0005!!52!0.0001!False!0.7109497971362094!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 14, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(14, 14, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=9464, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3442065156579984!all!!0.1!0.12153855142725017!naturalscene!!!0.5639077187972745!-3.5585499636907563!512!-3.407368674380996!absbnbncnn/absbnbncnn_62_lr0.0005_chans[14, 14]!0.7245885607866246!0.6501046526981165!0.5869261952976773!0.775717425157395!0.817412151741234!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!63!15-10-07!0.001!0.6605109572410583!85!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![18, 18]!absbnbncnn/results.txt!0.0005!!52!0.0001!False!0.7314612931919375!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 18, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(18, 18, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=12168, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.35075109222176815!all!!0.1!0.10956363200108123!naturalscene!!!0.6134863059528398!-3.6313526761657693!512!-3.508432252890634!absbnbncnn/absbnbncnn_63_lr0.0005_chans[18, 18]!0.7361446655985943!0.6545239904649242!0.6371180653911555!0.787971247043796!0.8415484974612181!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!64!15-10-07!0.001!0.6374444961547852!85!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![10, 10]!absbnbncnn/results.txt!0.0001!!52!0.0001!False!0.6757732625037155!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 10, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(10, 10, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=6760, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.33080297190214725!all!!0.1!0.08409848507395482!naturalscene!!!0.5928209572972906!-3.5175245928368777!512!-3.5308439926469872!absbnbncnn/absbnbncnn_64_lr0.0001_chans[10, 10]!0.7106475207332914!0.615712592472051!0.5697490867558677!0.7530175668408212!0.7297395457165463!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!65!15-10-07!0.001!0.647318959236145!85!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![12, 12]!absbnbncnn/results.txt!0.0001!!52!0.0001!False!0.688022571241657!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 12, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(12, 12, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=8112, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3338577464399425!all!!0.1!0.08161055646773363!naturalscene!!!0.6106332369306133!-3.5625131633666487!512!-3.5486111834172336!absbnbncnn/absbnbncnn_65_lr0.0001_chans[12, 12]!0.7268158406127243!0.6097187283751622!0.5892730810597773!0.7697146077214078!0.7445905984392137!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!66!15-10-07!0.001!0.6555579304695129!85!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![14, 14]!absbnbncnn/results.txt!0.0001!!52!0.0001!False!0.6847654204635266!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 14, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(14, 14, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=9464, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3343648377630897!all!!0.1!0.08662543929486503!naturalscene!!!0.6087994738836574!-3.6055754905013115!512!-3.5088033971165715!absbnbncnn/absbnbncnn_66_lr0.0001_chans[14, 14]!0.7152859283797897!0.5766052233923276!0.6004911640215348!0.7469206211026328!0.7845241654213484!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!67!15-10-07!0.001!0.6748298406600952!85!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![18, 18]!absbnbncnn/results.txt!0.0001!!52!0.0001!False!0.6882629492436007!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 18, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(18, 18, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=12168, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3222539331632203!all!!0.1!0.09844769097497486!naturalscene!!!0.5585849597703665!-3.656154806617518!512!-3.6010000078196756!absbnbncnn/absbnbncnn_67_lr0.0001_chans[18, 18]!0.7358321424915257!0.6109802572904923!0.551538187853305!0.7648577121683466!0.7781064464143331!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!68!15-10-07!0.001!0.6238882541656494!70!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![10, 8]!absbnbncnn/results.txt!0.001!!68!0.0001!False!0.7361639759196503!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 10, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(10, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.34981149491362606!all!!0.1!0.13193681655180145!naturalscene!!!0.6402449319360913!-3.4132570502984576!512!-3.182691427728423!absbnbncnn/absbnbncnn_68_lr0.001_chans[10, 8]!0.7630847094667574!0.6514609383058673!0.6597180903731641!0.775461005362842!0.8310951360896202!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!69!15-10-07!0.001!0.6171442270278931!70!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![12, 8]!absbnbncnn/results.txt!0.001!!68!0.0001!False!0.7277536288012288!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 12, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(12, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.36754761252877444!all!!0.1!0.13795621636248115!naturalscene!!!0.5833112614647104!-3.381332347655548!512!-3.340402796811395!absbnbncnn/absbnbncnn_69_lr0.001_chans[12, 8]!0.7525063130736537!0.6416119747260625!0.6369138779080279!0.7722490391535058!0.8354869391448944!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!70!15-10-07!0.001!0.5829132199287415!70!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![12, 10]!absbnbncnn/results.txt!0.001!!68!0.0001!False!0.6964920854485689!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 12, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(12, 10, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=6760, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.37968492665064385!all!!0.1!0.12941788080090708!naturalscene!!!0.6200055632252721!-3.3217058989077493!512!-3.213057222172938!absbnbncnn/absbnbncnn_70_lr0.001_chans[12, 10]!0.6952664576624434!0.6338587347380528!0.6067325421467602!0.7545004329893485!0.7921022597062396!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!71!15-10-07!0.001!0.616470217704773!70!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![10, 8]!absbnbncnn/results.txt!0.0005!!68!0.0001!False!0.7266500563637431!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 10, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(10, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3807144716494748!all!!0.1!0.13571274650420723!naturalscene!!!0.5782329311814596!-3.4330753026864467!512!-3.2954111988918156!absbnbncnn/absbnbncnn_71_lr0.0005_chans[10, 8]!0.7282561155461108!0.6454600286829583!0.6585786245200008!0.7725528495773759!0.8284026634922701!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!72!15-10-07!0.001!0.635663628578186!70!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![12, 8]!absbnbncnn/results.txt!0.0005!!68!0.0001!False!0.7134813467140271!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 12, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(12, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.32462794030484304!all!!0.1!0.1300767414222801!naturalscene!!!0.5993431338041575!-3.416285938267255!512!-3.538566963413905!absbnbncnn/absbnbncnn_72_lr0.0005_chans[12, 8]!0.7411126346491879!0.6468089315972972!0.590614710529534!0.7685827641797938!0.8202876926143227!!!!!!!!!!!!!!!!!!!!!
absbnbncnn!73!15-10-07!0.001!0.5990094542503357!70!<class 'torchdeepretina.models.AbsBNBNCNN'>!True![12, 10]!absbnbncnn/results.txt!0.0005!!68!0.0001!False!0.6718134842392415!AbsBNBNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 12, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(12, 10, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.99, eps=0.001)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=6760, out_features=5, bias=True)#    (12): AbsBatchNorm1d(bias=True, abs_bias=False, momentum=0.1, eps=1e-05)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3814363410594934!all!!0.1!0.1361870642956336!naturalscene!!!0.6443322070215689!-3.4623796269185223!512!-3.0900440530240303!absbnbncnn/absbnbncnn_73_lr0.0005_chans[12, 10]!0.6930160484309069!0.5984106686594569!0.5741577792040381!0.7064152641371165!0.7870676607646889!!!!!!!!!!!!!!!!!!!!!
repeatability!0!15-10-07!0.001!0.598263144493103!70!<class 'torchdeepretina.models.BNCNN'>!True![8, 8]!repeatability/results.txt!0.0025!!0!0.0001!False!0.6945236420417724!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.362982635964047!all!!0.05!0.11253468449043615!naturalscene!!!0.6141049236048562!-3.4089135091588867!512!-3.21485874769096!repeatability/repeatability_0_lr0.0025_noise0.05!0.7088295099642302!0.6030740124704875!0.5939693917333254!0.7620789115562014!0.8046663844846176!!!!!!!!!!!!!!!!!!!!!
repeatability!1!15-10-07!0.001!0.581103503704071!70!<class 'torchdeepretina.models.BNCNN'>!True![8, 8]!repeatability/results.txt!0.0025!!0!0.0001!False!0.7129538285105278!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.36998738203185205!all!!0.1!0.10023708191005187!naturalscene!!!0.6204159185972359!-3.242257546515486!512!-3.2417783623128344!repeatability/repeatability_1_lr0.0025_noise0.1!0.7055916004306834!0.6475537433418593!0.6477406192409538!0.7552682984100844!0.8086148811290583!!!!!!!!!!!!!!!!!!!!!
repeatability!2!15-10-07!0.001!0.5933810472488403!70!<class 'torchdeepretina.models.BNCNN'>!True![8, 8]!repeatability/results.txt!0.0025!!0!0.0001!False!0.6983685863055625!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.35268256269286713!all!!0.05!0.1077576613791855!naturalscene!!!0.6545932416141242!-3.391623060987366!512!-3.3817043655977614!repeatability/repeatability_2_lr0.0025_noise0.05!0.7365796400187479!0.622407843069559!0.6077781689198913!0.7476747795107997!0.7774025000088148!!!!!!!!!!!!!!!!!!!!!
repeatability!3!15-10-07!0.001!0.5597920417785645!70!<class 'torchdeepretina.models.BNCNN'>!True![8, 8]!repeatability/results.txt!0.0025!!0!0.0001!False!0.6914029911316568!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.4194638947233512!all!!0.1!0.17960328807382858!naturalscene!!!0.6395568346140714!-3.1610318792711376!512!-3.0785673361748196!repeatability/repeatability_3_lr0.0025_noise0.1!0.7072253904857366!0.6173131496864684!0.6219090523087427!0.747144434708226!0.7634229284691102!!!!!!!!!!!!!!!!!!!!!
repeatability!4!15-10-07!0.001!0.6030332446098328!70!<class 'torchdeepretina.models.BNCNN'>!True![8, 8]!repeatability/results.txt!0.0025!!0!0.0001!False!0.7036084728752436!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3838949855071058!all!!0.05!0.1043202342001443!naturalscene!!!0.6493314518817784!-3.3747665467665025!512!-3.5652304509429085!repeatability/repeatability_4_lr0.0025_noise0.05!0.7319622834924209!0.6276374778750214!0.6448266263817917!0.7593675264438152!0.7542484501831689!!!!!!!!!!!!!!!!!!!!!
repeatability!5!15-10-07!0.001!0.5939200520515442!70!<class 'torchdeepretina.models.BNCNN'>!True![8, 8]!repeatability/results.txt!0.0025!!0!0.0001!False!0.7101856837939755!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=False, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.41934405035527295!all!!0.1!0.10948742516576303!naturalscene!!!0.5956582072133638!-3.2646419223437304!512!-3.161426638037665!repeatability/repeatability_5_lr0.0025_noise0.1!0.7446525661599792!0.5858205506621224!0.6421321909796631!0.7564687436185439!0.8218543675495686!!!!!!!!!!!!!!!!!!!!!
repeatability!10!15-10-07!0.001!0.6083119511604309!70!<class 'torchdeepretina.models.BNCNN'>!True![8, 8]!repeatability/results.txt!0.0025!!6!0.0001!True!0.6939834573413619!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3790370633838755!all!!0.1!0.09232434557270733!naturalscene!!!0.6566935203051946!-3.5115532844494552!512!-3.6424618136152276!repeatability/repeatability_10_noise0.1_lr0.0025!0.7161080892104691!0.5942346886186655!0.5966302896191942!0.771465573964352!0.7914786452941288!!!!!!!!!!!!!!!!!!!!!
repeatability!11!15-10-07!0.001!0.6063013672828674!70!<class 'torchdeepretina.models.BNCNN'>!True![8, 8]!repeatability/results.txt!0.0025!!6!0.0001!True!0.6847204288143727!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3755704965029593!all!!0.1!0.12626726479957234!naturalscene!!!0.6128411377826417!-3.5240118708545807!512!-3.2887141543160396!repeatability/repeatability_11_noise0.1_lr0.0025!0.6979528516632171!0.6004383577992249!0.6147609022963857!0.7547116850365884!0.7557383472764475!!!!!!!!!!!!!!!!!!!!!
repeatability!6!15-10-07!0.001!0.6010485887527466!70!<class 'torchdeepretina.models.BNCNN'>!True![8, 8]!repeatability/results.txt!0.0025!!6!0.0001!True!0.6816927033749408!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.36723491325600305!all!!0.05!0.1014312206338733!naturalscene!!!0.6097898978508886!-3.54196894438558!512!-3.2620599658410354!repeatability/repeatability_6_noise0.05_lr0.0025!0.7058603828333623!0.5909648222596647!0.5701478428781077!0.7652327905635721!0.7762576783399975!!!!!!!!!!!!!!!!!!!!!
repeatability!7!15-10-07!0.001!0.6051474809646606!70!<class 'torchdeepretina.models.BNCNN'>!True![8, 8]!repeatability/results.txt!0.0025!!6!0.0001!True!0.6951382384319491!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.3847246630858991!all!!0.05!0.12608759680013548!naturalscene!!!0.6278678238071959!-3.5983258557715208!512!-3.4342331335625205!repeatability/repeatability_7_noise0.05_lr0.0025!0.7201387688938571!0.6212870725989409!0.5955696735104126!0.7555739617079088!0.7831217154486262!!!!!!!!!!!!!!!!!!!!!
repeatability!8!15-10-07!0.001!0.6046943664550781!70!<class 'torchdeepretina.models.BNCNN'>!True![8, 8]!repeatability/results.txt!0.0025!!6!0.0001!True!0.6685430527399178!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.05, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.05, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.378946274070812!all!!0.05!0.09909108677726945!naturalscene!!!0.6126032099875466!-3.586640957613696!512!-3.4736378968314967!repeatability/repeatability_8_noise0.05_lr0.0025!0.7226491284051646!0.5822500327930679!0.5523965481383665!0.7213908790982909!0.7640286752646989!!!!!!!!!!!!!!!!!!!!!
repeatability!9!15-10-07!0.001!0.6101062297821045!70!<class 'torchdeepretina.models.BNCNN'>!True![8, 8]!repeatability/results.txt!0.0025!!6!0.0001!True!0.7043439997267327!BNCNN(#  (sequential): Sequential(#    (0): Conv2d(40, 8, kernel_size=(15, 15), stride=(1, 1))#    (1): Flatten()#    (2): BatchNorm1d(10368, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (3): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (4): ReLU()#    (5): Reshape()#    (6): Conv2d(8, 8, kernel_size=(11, 11), stride=(1, 1))#    (7): Flatten()#    (8): BatchNorm1d(5408, eps=0.001, momentum=0.99, affine=True, track_running_stats=True)#    (9): GaussianNoise(std=0.1, trainable=False, adapt=True, momentum=0.95)#    (10): ReLU()#    (11): Linear(in_features=5408, out_features=5, bias=True)#    (12): BatchNorm1d(5, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)#    (13): Softplus(beta=1, threshold=20)#  )#)#!0.37916354534956903!all!!0.1!0.1438095712593281!naturalscene!!!0.6506030034511313!-3.5680755531446247!512!-3.3726692801203173!repeatability/repeatability_9_noise0.1_lr0.0025!0.7208981250511165!0.618350140469036!0.6403409623384665!0.7548005054756671!0.7873302652993773!!!!!!!!!!!!!!!!!!!!!
